# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: onos/onos-ric/sb/e2-interface.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class MessageType(betterproto.Enum):
    """Definition of all message types in E2 interface"""

    UNKNOWN_MESSAGE = 0
    CELL_CONFIG_REQUEST = 1
    CELL_CONFIG_REPORT = 2
    UE_ADMISSION_REQUEST = 3
    UE_ADMISSION_RESPONSE = 4
    UE_ADMISSION_STATUS = 5
    UE_CONTEXT_UPDATE = 6
    UE_RECONFIG_IND = 7
    UE_RELEASE_IND = 8
    BEARER_ADMISSION_REQUEST = 9
    BEARER_ADMISSION_RESPONSE = 10
    BEARER_ADMISSION_STATUS = 11
    BEARER_RELEASE_IND = 12
    HO_REQUEST = 13
    HO_FAILURE = 14
    HO_COMPLETE = 15
    RXSIG_MEAS_REPORT = 16
    L2_MEAS_CONFIG = 17
    RADIO_MEAS_REPORT_PER_UE = 18
    RADIO_MEAS_REPORT_PER_CELL = 19
    SCHED_MEAS_REPORT_PER_UE = 20
    SCHED_MEAS_REPORT_PER_CELL = 21
    PDCP_MEAS_REPORT_PER_UE = 22
    UE_CAPABILITY_INFO = 23
    UE_CAPABILITY_ENQUIRY = 24
    SCELL_ADD = 25
    SCELL_ADD_STATUS = 26
    SCELL_DELETE = 27
    RRM_CONFIG = 28
    RRM_CONFIG_STATUS = 29
    SENB_ADD = 30
    SENB_ADD_STATUS = 31
    SENB_DELETE = 32
    TRAFFIC_SPLIT_CONFIG = 33
    HO_CAUSE = 34
    RRC_MEAS_CONFIG = 35


class AdmEstCause(betterproto.Enum):
    EMERGENCY = 0
    HIGHHP_ACCESS = 1
    MT_ACCESS = 2
    MO_SIGNALLING = 3
    MO_DATA = 4


class SuccessOrFailure(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1


class ReconfigCause(betterproto.Enum):
    RECONFIG_RLF = 0
    RECONFIG_HO_FAIL = 1
    RECONFIG_OTHERS = 2


class ReleaseCause(betterproto.Enum):
    RELEASE_INACTIVITY = 0
    RELEASE_RLF = 1
    RELEASE_OTHERS = 2


class ErabDirection(betterproto.Enum):
    DL = 0
    UL = 1
    BOTH = 2


class ErabType(betterproto.Enum):
    ERAB_DEFAULT = 0
    ERAB_DEDICATED = 1


class ReportParamPr(betterproto.Enum):
    REPORT_PARAM_PR_NOTHING = 0
    REPORT_PARAM_PR_PER_PARAM = 1
    REPORT_PARAM_PR_A1PARAM = 2
    REPORT_PARAM_PR_A2PARAM = 3
    REPORT_PARAM_PR_A3PARAM = 4
    REPORT_PARAM_PR_A4PARAM = 5
    REPORT_PARAM_PR_A5PARAM = 6
    REPORT_PARAM_PR_A6PARAM = 7


class PerParamReportIntervalMs(betterproto.Enum):
    PER_PARAM_MS_120 = 0
    PER_PARAM_MS_240 = 1
    PER_PARAM_MS_480 = 2
    PER_PARAM_MS_640 = 3
    PER_PARAM_MS_1024 = 4
    PER_PARAM_MS_2048 = 5
    PER_PARAM_MS_5120 = 6
    PER_PARAM_MS_10240 = 7
    PER_PARAM_MIN_1 = 8
    PER_PARAM_MIN_6 = 9
    PER_PARAM_MIN_12 = 10
    PER_PARAM_MIN_30 = 11
    PER_PARAM_MIN_60 = 12


class ThresholdEutrapr(betterproto.Enum):
    THRESHOLD_EUTRA_PR_NOTHING = 0
    THRESHOLD_EUTRA_PR_RSRP = 1
    THRESHOLD_EUTRA_PR_RSRQ = 2


class TimeToTrigger(betterproto.Enum):
    TTT_MS0 = 0
    TTT_MS40 = 1
    TTT_MS64 = 2
    TTT_MS80 = 3
    TTT_MS100 = 4
    TTT_MS128 = 5
    TTT_MS160 = 6
    TTT_MS256 = 7
    TTT_MS320 = 8
    TTT_MS480 = 9
    TTT_MS512 = 10
    TTT_MS640 = 11
    TTT_MS1024 = 12
    TTT_MS1280 = 13
    TTT_MS2560 = 14
    TTT_MS5120 = 15


class TriggerQuantity(betterproto.Enum):
    TQ_RSRP = 0
    TQ_RSRQ = 1


class ReportQuality(betterproto.Enum):
    RQ_SAME = 0
    RQ_BOTH = 1


class MeasIdActionPr(betterproto.Enum):
    MEAS_ID_ACTION_PR_NOTHING = 0
    MEAS_ID_ACTION_PR_ADDMEASID = 1
    MEAS_ID_ACTION_PR_DELMEASID = 2
    MEAS_ID_ACTION_PR_HOTOTARGET = 3


class L2MeasReportInterval(betterproto.Enum):
    NO_REPORT = 0
    MS_10 = 1
    MS_50 = 2
    MS_100 = 3
    MS_200 = 4
    MS_500 = 5
    MS_1024 = 6
    S_10 = 7
    MIN_1 = 8
    MIN_2 = 9
    MIN_5 = 10


class Xicicpa(betterproto.Enum):
    XICIC_PA_DB_MINUS6 = 0
    XICIC_PA_DB_MINUX4DOT77 = 1
    XICIC_PA_DB_MINUS3 = 2
    XICIC_PA_DB_MINUS1DOT77 = 3
    XICIC_PA_DB_0 = 4
    XICIC_PA_DB_1 = 5
    XICIC_PA_DB_2 = 6
    XICIC_PA_DB_3 = 7


class CaCapClassDl(betterproto.Enum):
    CACAP_CLASSDL_A = 0
    CACAP_CLASSDL_B = 1
    CACAP_CLASSDL_C = 2
    CACAP_CLASSDL_D = 3
    CACAP_CLASSDL_E = 4
    CACAP_CLASSDL_F = 5


class CaCapClassUl(betterproto.Enum):
    CACAP_CLASSUL_A = 0
    CACAP_CLASSUL_B = 1
    CACAP_CLASSUL_C = 2
    CACAP_CLASSUL_D = 3
    CACAP_CLASSUL_E = 4
    CACAP_CLASSUL_F = 5


class DcCapDrbType(betterproto.Enum):
    DCCAP_DRBTYPE_SUPPORTED = 0


class CaDirection(betterproto.Enum):
    CADIRECTION_DL = 0
    CADIRECTION_UL = 1
    CADIRECTION_BOTH = 2


@dataclass(eq=False, repr=False)
class Ecgi(betterproto.Message):
    plmn_id: str = betterproto.string_field(1)
    ecid: str = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class CandScell(betterproto.Message):
    pci: int = betterproto.uint32_field(1)
    earfcn_dl: str = betterproto.string_field(2)
    ecgi: "Ecgi" = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class CellConfigRequest(betterproto.Message):
    """CellConfigRequest message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    pci: int = betterproto.uint32_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class CellConfigReport(betterproto.Message):
    """CellConfigReport message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    pci: int = betterproto.uint32_field(2)
    cand_scells: List["CandScell"] = betterproto.message_field(3)
    earfcn_dl: str = betterproto.string_field(4)
    earfcn_ul: str = betterproto.string_field(5)
    rbs_per_tti_dl: int = betterproto.uint32_field(6)
    rbs_per_tti_ul: int = betterproto.uint32_field(7)
    num_tx_antenna: int = betterproto.uint32_field(8)
    duplex_mode: str = betterproto.string_field(9)
    max_num_connected_ues: int = betterproto.uint32_field(10)
    max_num_connected_bearers: int = betterproto.uint32_field(11)
    max_num_ues_sched_per_tti_dl: int = betterproto.uint32_field(12)
    max_num_ues_sched_per_tti_ul: int = betterproto.uint32_field(13)
    dlfs_sched_enable: str = betterproto.string_field(14)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class UeAdmissionRequest(betterproto.Message):
    """UEAdmissionRequest message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    admission_est_cause: "AdmEstCause" = betterproto.enum_field(3)
    imsi: int = betterproto.uint64_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class UeAdmissionResponse(betterproto.Message):
    """UEAdmissionResponse message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    admission_est_response: "SuccessOrFailure" = betterproto.enum_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class UeAdmissionStatus(betterproto.Message):
    """UEAdmissionStatus message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    admission_est_status: "SuccessOrFailure" = betterproto.enum_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class UeContextUpdate(betterproto.Message):
    """UEContextUpdate message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    mme_ue_s1_ap_id: str = betterproto.string_field(3)
    enb_ue_s1_ap_id: str = betterproto.string_field(4)
    imsi: str = betterproto.string_field(5)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class UeReconfigInd(betterproto.Message):
    """UEReconfigInd message"""

    crnti_old: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    crnti_new: str = betterproto.string_field(3)
    reconfig_cause: "ReconfigCause" = betterproto.enum_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class UeReleaseInd(betterproto.Message):
    """UEReleaseInd message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    release_cause: "ReleaseCause" = betterproto.enum_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class Ueambr(betterproto.Message):
    ambr_dl: str = betterproto.string_field(1)
    ambr_ul: str = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ErabParamsItem(betterproto.Message):
    id: str = betterproto.string_field(1)
    direction: "ErabDirection" = betterproto.enum_field(2)
    type: "ErabType" = betterproto.enum_field(3)
    qci: str = betterproto.string_field(4)
    arp: int = betterproto.uint32_field(5)
    gbr_dl: str = betterproto.string_field(6)
    gbr_ul: str = betterproto.string_field(7)
    mbr_dl: str = betterproto.string_field(8)
    mbr_ul: str = betterproto.string_field(9)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ErabResponseItem(betterproto.Message):
    id: str = betterproto.string_field(1)
    decision: "SuccessOrFailure" = betterproto.enum_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class BearerAdmissionRequest(betterproto.Message):
    """BearerAdmissionRequest message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    ue_ambr: "Ueambr" = betterproto.message_field(3)
    num_erabs_list: int = betterproto.uint32_field(4)
    erabs_params: List["ErabParamsItem"] = betterproto.message_field(5)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class BearerAdmissionResponse(betterproto.Message):
    """BearerAdmissionResponse message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    num_erabs_list: int = betterproto.uint32_field(3)
    erab_response: List["ErabResponseItem"] = betterproto.message_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class BearerAdmissionStatus(betterproto.Message):
    """BearerAdmissionStatus message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    num_erabs_list: int = betterproto.uint32_field(3)
    erab_status: List["ErabResponseItem"] = betterproto.message_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class BearerReleaseInd(betterproto.Message):
    """BearerReleaseInd message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    num_erabs_list: int = betterproto.uint32_field(3)
    erab_ids: List[str] = betterproto.string_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class HoRequest(betterproto.Message):
    """HORequest message"""

    crnti: str = betterproto.string_field(1)
    ecgi_s: "Ecgi" = betterproto.message_field(2)
    ecgi_t: "Ecgi" = betterproto.message_field(3)
    crntis: List[str] = betterproto.string_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class HoFailure(betterproto.Message):
    """HOFailure message"""

    crnti: str = betterproto.string_field(1)
    ecgi_s: "Ecgi" = betterproto.message_field(2)
    ho_failure_cause: str = betterproto.string_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class HoComplete(betterproto.Message):
    """HOComplete message"""

    crnti_new: str = betterproto.string_field(1)
    ecgi_s: "Ecgi" = betterproto.message_field(2)
    ecgi_t: "Ecgi" = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class HoCause(betterproto.Message):
    """HOCause message"""

    crnti: str = betterproto.string_field(1)
    ecgi_s: "Ecgi" = betterproto.message_field(2)
    ecgi_t: "Ecgi" = betterproto.message_field(3)
    ho_cause: str = betterproto.string_field(4)
    ho_trigger: List["RxSigReport"] = betterproto.message_field(5)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class MeasCell(betterproto.Message):
    pci: int = betterproto.uint32_field(1)
    cell_individual_offset: str = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class MeasObject(betterproto.Message):
    dl_freq: str = betterproto.string_field(1)
    meas_cells: List["MeasCell"] = betterproto.message_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ReportParamChoice(betterproto.Message):
    per_param: "PerParam" = betterproto.message_field(1, group="choice")
    a1_param: "A1Param" = betterproto.message_field(2, group="choice")
    a2_param: "A2Param" = betterproto.message_field(3, group="choice")
    a3_param: "A3Param" = betterproto.message_field(4, group="choice")
    a4_param: "A4Param" = betterproto.message_field(5, group="choice")
    a5_param: "A5Param" = betterproto.message_field(6, group="choice")
    a6_param: "A6Param" = betterproto.message_field(7, group="choice")

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ThresholdEutraChoice(betterproto.Message):
    threshold_rsrp: str = betterproto.string_field(1, group="choice")
    threshold_rsrq: str = betterproto.string_field(2, group="choice")

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ThreasholdEutra(betterproto.Message):
    present: "ThresholdEutrapr" = betterproto.enum_field(1)
    choice: "ThresholdEutraChoice" = betterproto.message_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class PerParam(betterproto.Message):
    report_interval_ms: "PerParamReportIntervalMs" = betterproto.enum_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class A1Param(betterproto.Message):
    a1_threshold: "ThreasholdEutra" = betterproto.message_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class A2Param(betterproto.Message):
    a2_threshold: "ThreasholdEutra" = betterproto.message_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class A3Param(betterproto.Message):
    a3_offset: str = betterproto.string_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class A4Param(betterproto.Message):
    a4_threshold: "ThreasholdEutra" = betterproto.message_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class A5Param(betterproto.Message):
    a5_threshold1: "ThreasholdEutra" = betterproto.message_field(1)
    a5_threshold2: "ThreasholdEutra" = betterproto.message_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class A6Param(betterproto.Message):
    a6_offset: str = betterproto.string_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ReportParam(betterproto.Message):
    present: "ReportParamPr" = betterproto.enum_field(1)
    choice: "ReportParamChoice" = betterproto.message_field(2)
    hysteresis: str = betterproto.string_field(3)
    timetotrigger: "TimeToTrigger" = betterproto.enum_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ReportConfig(betterproto.Message):
    report_params: "ReportParam" = betterproto.message_field(1)
    trigger_quantity: "TriggerQuantity" = betterproto.enum_field(2)
    report_quality: "ReportQuality" = betterproto.enum_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class AddMeasId(betterproto.Message):
    add_meas_id: List[str] = betterproto.string_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class DelMeasId(betterproto.Message):
    del_meas_id: List[str] = betterproto.string_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class MeasIdActionChoice(betterproto.Message):
    add_meas_id: "AddMeasId" = betterproto.message_field(1, group="choice")
    del_meas_id: "DelMeasId" = betterproto.message_field(2, group="choice")
    hototarget: str = betterproto.string_field(3, group="choice")

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class MeasIdAction(betterproto.Message):
    present: "MeasIdActionPr" = betterproto.enum_field(1)
    choice: "MeasIdActionChoice" = betterproto.message_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class MeasId(betterproto.Message):
    meas_object_id: str = betterproto.string_field(1)
    report_config_id: str = betterproto.string_field(2)
    action: "MeasIdAction" = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class RrcMeasConfig(betterproto.Message):
    """RRCMeasConfig message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    crnti: List[str] = betterproto.string_field(2)
    meas_objects: List["MeasObject"] = betterproto.message_field(3)
    report_configs: List["ReportConfig"] = betterproto.message_field(4)
    meas_ids: List["MeasId"] = betterproto.message_field(5)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class Pciarfcn(betterproto.Message):
    pci: int = betterproto.uint32_field(1)
    earfcn_dl: str = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class RxSigReport(betterproto.Message):
    pci_arfcn: "Pciarfcn" = betterproto.message_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    rsrp: str = betterproto.string_field(3)
    rsrq: str = betterproto.string_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class RxSigMeasReport(betterproto.Message):
    """RxSigMeasReport message"""

    crnti: List[str] = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    cell_meas_report: List["RxSigReport"] = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class L2MeasConfig(betterproto.Message):
    radio_meas_report_per_ue: "L2MeasReportInterval" = betterproto.enum_field(1)
    radio_meas_report_per_cell: "L2MeasReportInterval" = betterproto.enum_field(2)
    sched_meas_report_per_ue: "L2MeasReportInterval" = betterproto.enum_field(3)
    sched_meas_report_per_cell: "L2MeasReportInterval" = betterproto.enum_field(4)
    pdcp_meas_report_per_ue: "L2MeasReportInterval" = betterproto.enum_field(5)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class RadioRepPerServCell(betterproto.Message):
    """L2MeasureReports (periodic) messages"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    cqi_hist: List[int] = betterproto.uint32_field(2)
    ri_hist: List[str] = betterproto.string_field(3)
    pusch_sinr_hist: List[str] = betterproto.string_field(4)
    pucch_sinr_hist: List[str] = betterproto.string_field(5)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class RadioMeasReportPerUe(betterproto.Message):
    """RadioMeasReportPerUE message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    crnti: str = betterproto.string_field(2)
    radio_report_serv_cells: List["RadioRepPerServCell"] = betterproto.message_field(3)
    imsi: int = betterproto.uint64_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class RadioMeasReportPerCell(betterproto.Message):
    """RadioMeasReportPerCell message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    pusch_intf_pwr_hist: List[int] = betterproto.uint32_field(2)
    pucch_intf_power_hist: List[int] = betterproto.uint32_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class PrbUsage(betterproto.Message):
    prb_usage_dl: List[str] = betterproto.string_field(1)
    prb_usage_ul: List[str] = betterproto.string_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class SchedMeasRepPerServCell(betterproto.Message):
    ecgi: "Ecgi" = betterproto.message_field(1)
    qci_vals: List[str] = betterproto.string_field(2)
    prb_usage: "PrbUsage" = betterproto.message_field(3)
    mcs_dl: List[str] = betterproto.string_field(4)
    num_sched_ttis_dl: List[str] = betterproto.string_field(5)
    mcs_ul: List[str] = betterproto.string_field(6)
    num_sched_ttis_ul: List[str] = betterproto.string_field(7)
    rank_dl1: List[str] = betterproto.string_field(8)
    rank_dl2: List[str] = betterproto.string_field(9)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class SchedMeasReportPerUe(betterproto.Message):
    """SchedMeasReportPerUE message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    crnti: str = betterproto.string_field(2)
    sched_report_serv_cells: List[
        "SchedMeasRepPerServCell"
    ] = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class SchedMeasReportPerCell(betterproto.Message):
    """SchedMeasReportPerCell message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    qci_vals: List[str] = betterproto.string_field(2)
    prb_usage_pcell: "PrbUsage" = betterproto.message_field(3)
    prb_usage_scell: "PrbUsage" = betterproto.message_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class PdcpMeasReportPerUe(betterproto.Message):
    """PdcpMeasReportPerUE message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    crnti: str = betterproto.string_field(2)
    imsi: int = betterproto.uint64_field(3)
    qci_vals: List[str] = betterproto.string_field(4)
    data_vol_dl: List[int] = betterproto.uint32_field(5)
    data_vol_ul: List[int] = betterproto.uint32_field(6)
    pkt_delay_dl: List[int] = betterproto.uint32_field(7)
    pkt_discard_rate_dl: List[int] = betterproto.uint32_field(8)
    pkt_loss_rate_dl: List[int] = betterproto.uint32_field(9)
    pkt_loss_rate_ul: List[int] = betterproto.uint32_field(10)
    throughput_dl: List[int] = betterproto.uint32_field(11)
    throughput_ul: List[int] = betterproto.uint32_field(12)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class RrmConfig(betterproto.Message):
    """RRMConfig message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    crnti: List[str] = betterproto.string_field(2)
    pci_arfcn: "Pciarfcn" = betterproto.message_field(3)
    p_a: List["Xicicpa"] = betterproto.enum_field(4)
    start_prb_dl: List[int] = betterproto.uint32_field(5)
    end_prb_dl: List[int] = betterproto.uint32_field(6)
    sub_frame_bitmask_dl: List[str] = betterproto.string_field(7)
    p0_ue_pusch: List[int] = betterproto.uint32_field(8)
    start_prb_ul: List[int] = betterproto.uint32_field(9)
    end_prb_ul: List[int] = betterproto.uint32_field(10)
    sub_frame_bitmask_ul: List[str] = betterproto.string_field(11)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class RrmConfigStatus(betterproto.Message):
    """RRMConfigStatus message"""

    ecgi: "Ecgi" = betterproto.message_field(1)
    crnti: List[str] = betterproto.string_field(2)
    status: List["SuccessOrFailure"] = betterproto.enum_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class CaCap(betterproto.Message):
    band: str = betterproto.string_field(1)
    caclassdl: "CaCapClassDl" = betterproto.enum_field(2)
    caclassul: "CaCapClassUl" = betterproto.enum_field(3)
    cross_carrier_sched: str = betterproto.string_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class DcCap(betterproto.Message):
    drb_type_split: "DcCapDrbType" = betterproto.enum_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class UeCapabilityEnquiry(betterproto.Message):
    """UECapabilityEnqyuiry message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class UeCapabilityInfo(betterproto.Message):
    """UECapabilityInfo message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    ca_cap: "CaCap" = betterproto.message_field(3)
    dc_cap: "DcCap" = betterproto.message_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class PropScell(betterproto.Message):
    pci_arfcn: "Pciarfcn" = betterproto.message_field(1)
    cross_carrier_sched_enable: str = betterproto.string_field(2)
    ca_direction: "CaDirection" = betterproto.enum_field(3)
    deact_timer: str = betterproto.string_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ScellAdd(betterproto.Message):
    """ScellAdd message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    scells_prop: List["PropScell"] = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ScellAddStatus(betterproto.Message):
    """ScellAddStatus message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    scells_ind: List["Pciarfcn"] = betterproto.message_field(3)
    status: List["SuccessOrFailure"] = betterproto.enum_field(4)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class ScellDelete(betterproto.Message):
    """ScellDelete message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    scells_ind: List["Pciarfcn"] = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class SeNbAdd(betterproto.Message):
    """SeNBAdd message"""

    crnti: str = betterproto.string_field(1)
    m_ecgi: "Ecgi" = betterproto.message_field(2)
    s_ecgi: "Ecgi" = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class SeNbAddStatus(betterproto.Message):
    """SeNBAddStatus message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    status: "SuccessOrFailure" = betterproto.enum_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class SeNbDelete(betterproto.Message):
    """SeNBDelete message"""

    crnti: str = betterproto.string_field(1)
    m_ecgi: "Ecgi" = betterproto.message_field(2)
    s_ecgi: "Ecgi" = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class TrafficSplitPercentage(betterproto.Message):
    ecgi: "Ecgi" = betterproto.message_field(1)
    traffic_percentage_dl: str = betterproto.string_field(2)
    traffic_percentage_ul: str = betterproto.string_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class TrafficSplitConfig(betterproto.Message):
    """TrafficSplitConfig message"""

    crnti: str = betterproto.string_field(1)
    ecgi: "Ecgi" = betterproto.message_field(2)
    traffic_split_percentage: List[
        "TrafficSplitPercentage"
    ] = betterproto.message_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()
