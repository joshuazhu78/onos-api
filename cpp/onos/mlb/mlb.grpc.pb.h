// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/mlb/mlb.proto
// Original file comments:
// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef GRPC_onos_2fmlb_2fmlb_2eproto__INCLUDED
#define GRPC_onos_2fmlb_2fmlb_2eproto__INCLUDED

#include "onos/mlb/mlb.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace mlb {

class Mlb final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.mlb.Mlb";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // GetMlbParams gets MLB parameters
    virtual ::grpc::Status GetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::onos::mlb::GetMlbParamResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetMlbParamResponse>> AsyncGetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetMlbParamResponse>>(AsyncGetMlbParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetMlbParamResponse>> PrepareAsyncGetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetMlbParamResponse>>(PrepareAsyncGetMlbParamsRaw(context, request, cq));
    }
    // SetMlbParams sets MLB parameters
    virtual ::grpc::Status SetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::onos::mlb::SetMlbParamResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::SetMlbParamResponse>> AsyncSetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::SetMlbParamResponse>>(AsyncSetMlbParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::SetMlbParamResponse>> PrepareAsyncSetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::SetMlbParamResponse>>(PrepareAsyncSetMlbParamsRaw(context, request, cq));
    }
    // GetOcn gets Ocn map
    virtual ::grpc::Status GetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::onos::mlb::GetOcnResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetOcnResponse>> AsyncGetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetOcnResponse>>(AsyncGetOcnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetOcnResponse>> PrepareAsyncGetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetOcnResponse>>(PrepareAsyncGetOcnRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // GetMlbParams gets MLB parameters
      virtual void GetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest* request, ::onos::mlb::GetMlbParamResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest* request, ::onos::mlb::GetMlbParamResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // SetMlbParams sets MLB parameters
      virtual void SetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest* request, ::onos::mlb::SetMlbParamResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest* request, ::onos::mlb::SetMlbParamResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetOcn gets Ocn map
      virtual void GetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest* request, ::onos::mlb::GetOcnResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest* request, ::onos::mlb::GetOcnResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetMlbParamResponse>* AsyncGetMlbParamsRaw(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetMlbParamResponse>* PrepareAsyncGetMlbParamsRaw(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::SetMlbParamResponse>* AsyncSetMlbParamsRaw(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::SetMlbParamResponse>* PrepareAsyncSetMlbParamsRaw(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetOcnResponse>* AsyncGetOcnRaw(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mlb::GetOcnResponse>* PrepareAsyncGetOcnRaw(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::onos::mlb::GetMlbParamResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetMlbParamResponse>> AsyncGetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetMlbParamResponse>>(AsyncGetMlbParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetMlbParamResponse>> PrepareAsyncGetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetMlbParamResponse>>(PrepareAsyncGetMlbParamsRaw(context, request, cq));
    }
    ::grpc::Status SetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::onos::mlb::SetMlbParamResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::SetMlbParamResponse>> AsyncSetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::SetMlbParamResponse>>(AsyncSetMlbParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::SetMlbParamResponse>> PrepareAsyncSetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::SetMlbParamResponse>>(PrepareAsyncSetMlbParamsRaw(context, request, cq));
    }
    ::grpc::Status GetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::onos::mlb::GetOcnResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetOcnResponse>> AsyncGetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetOcnResponse>>(AsyncGetOcnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetOcnResponse>> PrepareAsyncGetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetOcnResponse>>(PrepareAsyncGetOcnRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest* request, ::onos::mlb::GetMlbParamResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest* request, ::onos::mlb::GetMlbParamResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest* request, ::onos::mlb::SetMlbParamResponse* response, std::function<void(::grpc::Status)>) override;
      void SetMlbParams(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest* request, ::onos::mlb::SetMlbParamResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest* request, ::onos::mlb::GetOcnResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOcn(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest* request, ::onos::mlb::GetOcnResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetMlbParamResponse>* AsyncGetMlbParamsRaw(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetMlbParamResponse>* PrepareAsyncGetMlbParamsRaw(::grpc::ClientContext* context, const ::onos::mlb::GetMlbParamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mlb::SetMlbParamResponse>* AsyncSetMlbParamsRaw(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mlb::SetMlbParamResponse>* PrepareAsyncSetMlbParamsRaw(::grpc::ClientContext* context, const ::onos::mlb::SetMlbParamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetOcnResponse>* AsyncGetOcnRaw(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mlb::GetOcnResponse>* PrepareAsyncGetOcnRaw(::grpc::ClientContext* context, const ::onos::mlb::GetOcnRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetMlbParams_;
    const ::grpc::internal::RpcMethod rpcmethod_SetMlbParams_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOcn_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // GetMlbParams gets MLB parameters
    virtual ::grpc::Status GetMlbParams(::grpc::ServerContext* context, const ::onos::mlb::GetMlbParamRequest* request, ::onos::mlb::GetMlbParamResponse* response);
    // SetMlbParams sets MLB parameters
    virtual ::grpc::Status SetMlbParams(::grpc::ServerContext* context, const ::onos::mlb::SetMlbParamRequest* request, ::onos::mlb::SetMlbParamResponse* response);
    // GetOcn gets Ocn map
    virtual ::grpc::Status GetOcn(::grpc::ServerContext* context, const ::onos::mlb::GetOcnRequest* request, ::onos::mlb::GetOcnResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMlbParams() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetMlbParamRequest* /*request*/, ::onos::mlb::GetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMlbParams(::grpc::ServerContext* context, ::onos::mlb::GetMlbParamRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::mlb::GetMlbParamResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetMlbParams() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::SetMlbParamRequest* /*request*/, ::onos::mlb::SetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMlbParams(::grpc::ServerContext* context, ::onos::mlb::SetMlbParamRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::mlb::SetMlbParamResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOcn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetOcn() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetOcn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOcn(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetOcnRequest* /*request*/, ::onos::mlb::GetOcnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOcn(::grpc::ServerContext* context, ::onos::mlb::GetOcnRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::mlb::GetOcnResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetMlbParams<WithAsyncMethod_SetMlbParams<WithAsyncMethod_GetOcn<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMlbParams() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::mlb::GetMlbParamRequest, ::onos::mlb::GetMlbParamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::mlb::GetMlbParamRequest* request, ::onos::mlb::GetMlbParamResponse* response) { return this->GetMlbParams(context, request, response); }));}
    void SetMessageAllocatorFor_GetMlbParams(
        ::grpc::MessageAllocator< ::onos::mlb::GetMlbParamRequest, ::onos::mlb::GetMlbParamResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::mlb::GetMlbParamRequest, ::onos::mlb::GetMlbParamResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetMlbParamRequest* /*request*/, ::onos::mlb::GetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMlbParams(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::mlb::GetMlbParamRequest* /*request*/, ::onos::mlb::GetMlbParamResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetMlbParams() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::mlb::SetMlbParamRequest, ::onos::mlb::SetMlbParamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::mlb::SetMlbParamRequest* request, ::onos::mlb::SetMlbParamResponse* response) { return this->SetMlbParams(context, request, response); }));}
    void SetMessageAllocatorFor_SetMlbParams(
        ::grpc::MessageAllocator< ::onos::mlb::SetMlbParamRequest, ::onos::mlb::SetMlbParamResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::mlb::SetMlbParamRequest, ::onos::mlb::SetMlbParamResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::SetMlbParamRequest* /*request*/, ::onos::mlb::SetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetMlbParams(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::mlb::SetMlbParamRequest* /*request*/, ::onos::mlb::SetMlbParamResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetOcn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetOcn() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::mlb::GetOcnRequest, ::onos::mlb::GetOcnResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::mlb::GetOcnRequest* request, ::onos::mlb::GetOcnResponse* response) { return this->GetOcn(context, request, response); }));}
    void SetMessageAllocatorFor_GetOcn(
        ::grpc::MessageAllocator< ::onos::mlb::GetOcnRequest, ::onos::mlb::GetOcnResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::mlb::GetOcnRequest, ::onos::mlb::GetOcnResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetOcn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOcn(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetOcnRequest* /*request*/, ::onos::mlb::GetOcnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetOcn(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::mlb::GetOcnRequest* /*request*/, ::onos::mlb::GetOcnResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetMlbParams<WithCallbackMethod_SetMlbParams<WithCallbackMethod_GetOcn<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMlbParams() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetMlbParamRequest* /*request*/, ::onos::mlb::GetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetMlbParams() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::SetMlbParamRequest* /*request*/, ::onos::mlb::SetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOcn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetOcn() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetOcn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOcn(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetOcnRequest* /*request*/, ::onos::mlb::GetOcnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMlbParams() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetMlbParamRequest* /*request*/, ::onos::mlb::GetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMlbParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetMlbParams() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::SetMlbParamRequest* /*request*/, ::onos::mlb::SetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMlbParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOcn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetOcn() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetOcn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOcn(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetOcnRequest* /*request*/, ::onos::mlb::GetOcnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOcn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMlbParams() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMlbParams(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetMlbParamRequest* /*request*/, ::onos::mlb::GetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMlbParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetMlbParams() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetMlbParams(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::SetMlbParamRequest* /*request*/, ::onos::mlb::SetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetMlbParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetOcn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetOcn() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetOcn(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetOcn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOcn(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetOcnRequest* /*request*/, ::onos::mlb::GetOcnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetOcn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMlbParams() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::mlb::GetMlbParamRequest, ::onos::mlb::GetMlbParamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::mlb::GetMlbParamRequest, ::onos::mlb::GetMlbParamResponse>* streamer) {
                       return this->StreamedGetMlbParams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetMlbParamRequest* /*request*/, ::onos::mlb::GetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMlbParams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::mlb::GetMlbParamRequest,::onos::mlb::GetMlbParamResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetMlbParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetMlbParams() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::mlb::SetMlbParamRequest, ::onos::mlb::SetMlbParamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::mlb::SetMlbParamRequest, ::onos::mlb::SetMlbParamResponse>* streamer) {
                       return this->StreamedSetMlbParams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetMlbParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetMlbParams(::grpc::ServerContext* /*context*/, const ::onos::mlb::SetMlbParamRequest* /*request*/, ::onos::mlb::SetMlbParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetMlbParams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::mlb::SetMlbParamRequest,::onos::mlb::SetMlbParamResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOcn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetOcn() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::mlb::GetOcnRequest, ::onos::mlb::GetOcnResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::mlb::GetOcnRequest, ::onos::mlb::GetOcnResponse>* streamer) {
                       return this->StreamedGetOcn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetOcn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOcn(::grpc::ServerContext* /*context*/, const ::onos::mlb::GetOcnRequest* /*request*/, ::onos::mlb::GetOcnResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOcn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::mlb::GetOcnRequest,::onos::mlb::GetOcnResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetMlbParams<WithStreamedUnaryMethod_SetMlbParams<WithStreamedUnaryMethod_GetOcn<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetMlbParams<WithStreamedUnaryMethod_SetMlbParams<WithStreamedUnaryMethod_GetOcn<Service > > > StreamedService;
};

}  // namespace mlb
}  // namespace onos


#endif  // GRPC_onos_2fmlb_2fmlb_2eproto__INCLUDED
