// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/mlb/mlb.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_onos_2fmlb_2fmlb_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_onos_2fmlb_2fmlb_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_onos_2fmlb_2fmlb_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_onos_2fmlb_2fmlb_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fmlb_2fmlb_2eproto;
namespace onos {
namespace mlb {
class GetMlbParamRequest;
struct GetMlbParamRequestDefaultTypeInternal;
extern GetMlbParamRequestDefaultTypeInternal _GetMlbParamRequest_default_instance_;
class GetMlbParamResponse;
struct GetMlbParamResponseDefaultTypeInternal;
extern GetMlbParamResponseDefaultTypeInternal _GetMlbParamResponse_default_instance_;
class GetOcnRequest;
struct GetOcnRequestDefaultTypeInternal;
extern GetOcnRequestDefaultTypeInternal _GetOcnRequest_default_instance_;
class GetOcnResponse;
struct GetOcnResponseDefaultTypeInternal;
extern GetOcnResponseDefaultTypeInternal _GetOcnResponse_default_instance_;
class GetOcnResponse_OcnMapEntry_DoNotUse;
struct GetOcnResponse_OcnMapEntry_DoNotUseDefaultTypeInternal;
extern GetOcnResponse_OcnMapEntry_DoNotUseDefaultTypeInternal _GetOcnResponse_OcnMapEntry_DoNotUse_default_instance_;
class OcnIDs;
struct OcnIDsDefaultTypeInternal;
extern OcnIDsDefaultTypeInternal _OcnIDs_default_instance_;
class OcnRecord;
struct OcnRecordDefaultTypeInternal;
extern OcnRecordDefaultTypeInternal _OcnRecord_default_instance_;
class OcnRecord_OcnRecordEntry_DoNotUse;
struct OcnRecord_OcnRecordEntry_DoNotUseDefaultTypeInternal;
extern OcnRecord_OcnRecordEntry_DoNotUseDefaultTypeInternal _OcnRecord_OcnRecordEntry_DoNotUse_default_instance_;
class SetMlbParamRequest;
struct SetMlbParamRequestDefaultTypeInternal;
extern SetMlbParamRequestDefaultTypeInternal _SetMlbParamRequest_default_instance_;
class SetMlbParamResponse;
struct SetMlbParamResponseDefaultTypeInternal;
extern SetMlbParamResponseDefaultTypeInternal _SetMlbParamResponse_default_instance_;
}  // namespace mlb
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> ::onos::mlb::GetMlbParamRequest* Arena::CreateMaybeMessage<::onos::mlb::GetMlbParamRequest>(Arena*);
template<> ::onos::mlb::GetMlbParamResponse* Arena::CreateMaybeMessage<::onos::mlb::GetMlbParamResponse>(Arena*);
template<> ::onos::mlb::GetOcnRequest* Arena::CreateMaybeMessage<::onos::mlb::GetOcnRequest>(Arena*);
template<> ::onos::mlb::GetOcnResponse* Arena::CreateMaybeMessage<::onos::mlb::GetOcnResponse>(Arena*);
template<> ::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse* Arena::CreateMaybeMessage<::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse>(Arena*);
template<> ::onos::mlb::OcnIDs* Arena::CreateMaybeMessage<::onos::mlb::OcnIDs>(Arena*);
template<> ::onos::mlb::OcnRecord* Arena::CreateMaybeMessage<::onos::mlb::OcnRecord>(Arena*);
template<> ::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse* Arena::CreateMaybeMessage<::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse>(Arena*);
template<> ::onos::mlb::SetMlbParamRequest* Arena::CreateMaybeMessage<::onos::mlb::SetMlbParamRequest>(Arena*);
template<> ::onos::mlb::SetMlbParamResponse* Arena::CreateMaybeMessage<::onos::mlb::SetMlbParamResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace onos {
namespace mlb {

// ===================================================================

class GetMlbParamRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:onos.mlb.GetMlbParamRequest) */ {
 public:
  inline GetMlbParamRequest() : GetMlbParamRequest(nullptr) {}
  explicit constexpr GetMlbParamRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetMlbParamRequest(const GetMlbParamRequest& from);
  GetMlbParamRequest(GetMlbParamRequest&& from) noexcept
    : GetMlbParamRequest() {
    *this = ::std::move(from);
  }

  inline GetMlbParamRequest& operator=(const GetMlbParamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMlbParamRequest& operator=(GetMlbParamRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMlbParamRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMlbParamRequest* internal_default_instance() {
    return reinterpret_cast<const GetMlbParamRequest*>(
               &_GetMlbParamRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetMlbParamRequest& a, GetMlbParamRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMlbParamRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMlbParamRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMlbParamRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMlbParamRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetMlbParamRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetMlbParamRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.mlb.GetMlbParamRequest";
  }
  protected:
  explicit GetMlbParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:onos.mlb.GetMlbParamRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fmlb_2fmlb_2eproto;
};
// -------------------------------------------------------------------

class GetMlbParamResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.mlb.GetMlbParamResponse) */ {
 public:
  inline GetMlbParamResponse() : GetMlbParamResponse(nullptr) {}
  ~GetMlbParamResponse() override;
  explicit constexpr GetMlbParamResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetMlbParamResponse(const GetMlbParamResponse& from);
  GetMlbParamResponse(GetMlbParamResponse&& from) noexcept
    : GetMlbParamResponse() {
    *this = ::std::move(from);
  }

  inline GetMlbParamResponse& operator=(const GetMlbParamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMlbParamResponse& operator=(GetMlbParamResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMlbParamResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetMlbParamResponse* internal_default_instance() {
    return reinterpret_cast<const GetMlbParamResponse*>(
               &_GetMlbParamResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetMlbParamResponse& a, GetMlbParamResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetMlbParamResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMlbParamResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMlbParamResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetMlbParamResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetMlbParamResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetMlbParamResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMlbParamResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.mlb.GetMlbParamResponse";
  }
  protected:
  explicit GetMlbParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntervalFieldNumber = 1,
    kOverloadThresholdFieldNumber = 2,
    kTargetThresholdFieldNumber = 3,
    kDeltaOcnFieldNumber = 4,
  };
  // int32 interval = 1;
  void clear_interval();
  int32_t interval() const;
  void set_interval(int32_t value);
  private:
  int32_t _internal_interval() const;
  void _internal_set_interval(int32_t value);
  public:

  // int32 overload_threshold = 2;
  void clear_overload_threshold();
  int32_t overload_threshold() const;
  void set_overload_threshold(int32_t value);
  private:
  int32_t _internal_overload_threshold() const;
  void _internal_set_overload_threshold(int32_t value);
  public:

  // int32 target_threshold = 3;
  void clear_target_threshold();
  int32_t target_threshold() const;
  void set_target_threshold(int32_t value);
  private:
  int32_t _internal_target_threshold() const;
  void _internal_set_target_threshold(int32_t value);
  public:

  // int32 delta_ocn = 4;
  void clear_delta_ocn();
  int32_t delta_ocn() const;
  void set_delta_ocn(int32_t value);
  private:
  int32_t _internal_delta_ocn() const;
  void _internal_set_delta_ocn(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.mlb.GetMlbParamResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t interval_;
  int32_t overload_threshold_;
  int32_t target_threshold_;
  int32_t delta_ocn_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fmlb_2fmlb_2eproto;
};
// -------------------------------------------------------------------

class SetMlbParamRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.mlb.SetMlbParamRequest) */ {
 public:
  inline SetMlbParamRequest() : SetMlbParamRequest(nullptr) {}
  ~SetMlbParamRequest() override;
  explicit constexpr SetMlbParamRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetMlbParamRequest(const SetMlbParamRequest& from);
  SetMlbParamRequest(SetMlbParamRequest&& from) noexcept
    : SetMlbParamRequest() {
    *this = ::std::move(from);
  }

  inline SetMlbParamRequest& operator=(const SetMlbParamRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMlbParamRequest& operator=(SetMlbParamRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMlbParamRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMlbParamRequest* internal_default_instance() {
    return reinterpret_cast<const SetMlbParamRequest*>(
               &_SetMlbParamRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SetMlbParamRequest& a, SetMlbParamRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMlbParamRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMlbParamRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMlbParamRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMlbParamRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetMlbParamRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SetMlbParamRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMlbParamRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.mlb.SetMlbParamRequest";
  }
  protected:
  explicit SetMlbParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntervalFieldNumber = 1,
    kOverloadThresholdFieldNumber = 2,
    kTargetThresholdFieldNumber = 3,
    kDeltaOcnFieldNumber = 4,
  };
  // int32 interval = 1;
  void clear_interval();
  int32_t interval() const;
  void set_interval(int32_t value);
  private:
  int32_t _internal_interval() const;
  void _internal_set_interval(int32_t value);
  public:

  // int32 overload_threshold = 2;
  void clear_overload_threshold();
  int32_t overload_threshold() const;
  void set_overload_threshold(int32_t value);
  private:
  int32_t _internal_overload_threshold() const;
  void _internal_set_overload_threshold(int32_t value);
  public:

  // int32 target_threshold = 3;
  void clear_target_threshold();
  int32_t target_threshold() const;
  void set_target_threshold(int32_t value);
  private:
  int32_t _internal_target_threshold() const;
  void _internal_set_target_threshold(int32_t value);
  public:

  // int32 delta_ocn = 4;
  void clear_delta_ocn();
  int32_t delta_ocn() const;
  void set_delta_ocn(int32_t value);
  private:
  int32_t _internal_delta_ocn() const;
  void _internal_set_delta_ocn(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.mlb.SetMlbParamRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t interval_;
  int32_t overload_threshold_;
  int32_t target_threshold_;
  int32_t delta_ocn_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fmlb_2fmlb_2eproto;
};
// -------------------------------------------------------------------

class SetMlbParamResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.mlb.SetMlbParamResponse) */ {
 public:
  inline SetMlbParamResponse() : SetMlbParamResponse(nullptr) {}
  ~SetMlbParamResponse() override;
  explicit constexpr SetMlbParamResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SetMlbParamResponse(const SetMlbParamResponse& from);
  SetMlbParamResponse(SetMlbParamResponse&& from) noexcept
    : SetMlbParamResponse() {
    *this = ::std::move(from);
  }

  inline SetMlbParamResponse& operator=(const SetMlbParamResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetMlbParamResponse& operator=(SetMlbParamResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetMlbParamResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetMlbParamResponse* internal_default_instance() {
    return reinterpret_cast<const SetMlbParamResponse*>(
               &_SetMlbParamResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetMlbParamResponse& a, SetMlbParamResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetMlbParamResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetMlbParamResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetMlbParamResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetMlbParamResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SetMlbParamResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SetMlbParamResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMlbParamResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.mlb.SetMlbParamResponse";
  }
  protected:
  explicit SetMlbParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:onos.mlb.SetMlbParamResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool success_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fmlb_2fmlb_2eproto;
};
// -------------------------------------------------------------------

class GetOcnRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:onos.mlb.GetOcnRequest) */ {
 public:
  inline GetOcnRequest() : GetOcnRequest(nullptr) {}
  explicit constexpr GetOcnRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetOcnRequest(const GetOcnRequest& from);
  GetOcnRequest(GetOcnRequest&& from) noexcept
    : GetOcnRequest() {
    *this = ::std::move(from);
  }

  inline GetOcnRequest& operator=(const GetOcnRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOcnRequest& operator=(GetOcnRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOcnRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOcnRequest* internal_default_instance() {
    return reinterpret_cast<const GetOcnRequest*>(
               &_GetOcnRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetOcnRequest& a, GetOcnRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOcnRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOcnRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOcnRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOcnRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetOcnRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetOcnRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.mlb.GetOcnRequest";
  }
  protected:
  explicit GetOcnRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:onos.mlb.GetOcnRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fmlb_2fmlb_2eproto;
};
// -------------------------------------------------------------------

class GetOcnResponse_OcnMapEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetOcnResponse_OcnMapEntry_DoNotUse, 
    std::string, ::onos::mlb::OcnRecord,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetOcnResponse_OcnMapEntry_DoNotUse, 
    std::string, ::onos::mlb::OcnRecord,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  GetOcnResponse_OcnMapEntry_DoNotUse();
  explicit constexpr GetOcnResponse_OcnMapEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit GetOcnResponse_OcnMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetOcnResponse_OcnMapEntry_DoNotUse& other);
  static const GetOcnResponse_OcnMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetOcnResponse_OcnMapEntry_DoNotUse*>(&_GetOcnResponse_OcnMapEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "onos.mlb.GetOcnResponse.OcnMapEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class GetOcnResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.mlb.GetOcnResponse) */ {
 public:
  inline GetOcnResponse() : GetOcnResponse(nullptr) {}
  ~GetOcnResponse() override;
  explicit constexpr GetOcnResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetOcnResponse(const GetOcnResponse& from);
  GetOcnResponse(GetOcnResponse&& from) noexcept
    : GetOcnResponse() {
    *this = ::std::move(from);
  }

  inline GetOcnResponse& operator=(const GetOcnResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOcnResponse& operator=(GetOcnResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOcnResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetOcnResponse* internal_default_instance() {
    return reinterpret_cast<const GetOcnResponse*>(
               &_GetOcnResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetOcnResponse& a, GetOcnResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOcnResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOcnResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOcnResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetOcnResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetOcnResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetOcnResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOcnResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.mlb.GetOcnResponse";
  }
  protected:
  explicit GetOcnResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOcnMapFieldNumber = 1,
  };
  // map<string, .onos.mlb.OcnRecord> ocn_map = 1;
  int ocn_map_size() const;
  private:
  int _internal_ocn_map_size() const;
  public:
  void clear_ocn_map();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >&
      _internal_ocn_map() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >*
      _internal_mutable_ocn_map();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >&
      ocn_map() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >*
      mutable_ocn_map();

  // @@protoc_insertion_point(class_scope:onos.mlb.GetOcnResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      GetOcnResponse_OcnMapEntry_DoNotUse,
      std::string, ::onos::mlb::OcnRecord,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> ocn_map_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fmlb_2fmlb_2eproto;
};
// -------------------------------------------------------------------

class OcnRecord_OcnRecordEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<OcnRecord_OcnRecordEntry_DoNotUse, 
    std::string, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<OcnRecord_OcnRecordEntry_DoNotUse, 
    std::string, int32_t,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> SuperType;
  OcnRecord_OcnRecordEntry_DoNotUse();
  explicit constexpr OcnRecord_OcnRecordEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit OcnRecord_OcnRecordEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const OcnRecord_OcnRecordEntry_DoNotUse& other);
  static const OcnRecord_OcnRecordEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const OcnRecord_OcnRecordEntry_DoNotUse*>(&_OcnRecord_OcnRecordEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "onos.mlb.OcnRecord.OcnRecordEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class OcnRecord final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.mlb.OcnRecord) */ {
 public:
  inline OcnRecord() : OcnRecord(nullptr) {}
  ~OcnRecord() override;
  explicit constexpr OcnRecord(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OcnRecord(const OcnRecord& from);
  OcnRecord(OcnRecord&& from) noexcept
    : OcnRecord() {
    *this = ::std::move(from);
  }

  inline OcnRecord& operator=(const OcnRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline OcnRecord& operator=(OcnRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OcnRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const OcnRecord* internal_default_instance() {
    return reinterpret_cast<const OcnRecord*>(
               &_OcnRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(OcnRecord& a, OcnRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(OcnRecord* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OcnRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OcnRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OcnRecord>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const OcnRecord& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const OcnRecord& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OcnRecord* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.mlb.OcnRecord";
  }
  protected:
  explicit OcnRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kOcnRecordFieldNumber = 1,
  };
  // map<string, int32> ocn_record = 1;
  int ocn_record_size() const;
  private:
  int _internal_ocn_record_size() const;
  public:
  void clear_ocn_record();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
      _internal_ocn_record() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
      _internal_mutable_ocn_record();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
      ocn_record() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
      mutable_ocn_record();

  // @@protoc_insertion_point(class_scope:onos.mlb.OcnRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      OcnRecord_OcnRecordEntry_DoNotUse,
      std::string, int32_t,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> ocn_record_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fmlb_2fmlb_2eproto;
};
// -------------------------------------------------------------------

class OcnIDs final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:onos.mlb.OcnIDs) */ {
 public:
  inline OcnIDs() : OcnIDs(nullptr) {}
  explicit constexpr OcnIDs(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  OcnIDs(const OcnIDs& from);
  OcnIDs(OcnIDs&& from) noexcept
    : OcnIDs() {
    *this = ::std::move(from);
  }

  inline OcnIDs& operator=(const OcnIDs& from) {
    CopyFrom(from);
    return *this;
  }
  inline OcnIDs& operator=(OcnIDs&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OcnIDs& default_instance() {
    return *internal_default_instance();
  }
  static inline const OcnIDs* internal_default_instance() {
    return reinterpret_cast<const OcnIDs*>(
               &_OcnIDs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(OcnIDs& a, OcnIDs& b) {
    a.Swap(&b);
  }
  inline void Swap(OcnIDs* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OcnIDs* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OcnIDs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OcnIDs>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const OcnIDs& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const OcnIDs& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.mlb.OcnIDs";
  }
  protected:
  explicit OcnIDs(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:onos.mlb.OcnIDs)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fmlb_2fmlb_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetMlbParamRequest

// -------------------------------------------------------------------

// GetMlbParamResponse

// int32 interval = 1;
inline void GetMlbParamResponse::clear_interval() {
  interval_ = 0;
}
inline int32_t GetMlbParamResponse::_internal_interval() const {
  return interval_;
}
inline int32_t GetMlbParamResponse::interval() const {
  // @@protoc_insertion_point(field_get:onos.mlb.GetMlbParamResponse.interval)
  return _internal_interval();
}
inline void GetMlbParamResponse::_internal_set_interval(int32_t value) {
  
  interval_ = value;
}
inline void GetMlbParamResponse::set_interval(int32_t value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:onos.mlb.GetMlbParamResponse.interval)
}

// int32 overload_threshold = 2;
inline void GetMlbParamResponse::clear_overload_threshold() {
  overload_threshold_ = 0;
}
inline int32_t GetMlbParamResponse::_internal_overload_threshold() const {
  return overload_threshold_;
}
inline int32_t GetMlbParamResponse::overload_threshold() const {
  // @@protoc_insertion_point(field_get:onos.mlb.GetMlbParamResponse.overload_threshold)
  return _internal_overload_threshold();
}
inline void GetMlbParamResponse::_internal_set_overload_threshold(int32_t value) {
  
  overload_threshold_ = value;
}
inline void GetMlbParamResponse::set_overload_threshold(int32_t value) {
  _internal_set_overload_threshold(value);
  // @@protoc_insertion_point(field_set:onos.mlb.GetMlbParamResponse.overload_threshold)
}

// int32 target_threshold = 3;
inline void GetMlbParamResponse::clear_target_threshold() {
  target_threshold_ = 0;
}
inline int32_t GetMlbParamResponse::_internal_target_threshold() const {
  return target_threshold_;
}
inline int32_t GetMlbParamResponse::target_threshold() const {
  // @@protoc_insertion_point(field_get:onos.mlb.GetMlbParamResponse.target_threshold)
  return _internal_target_threshold();
}
inline void GetMlbParamResponse::_internal_set_target_threshold(int32_t value) {
  
  target_threshold_ = value;
}
inline void GetMlbParamResponse::set_target_threshold(int32_t value) {
  _internal_set_target_threshold(value);
  // @@protoc_insertion_point(field_set:onos.mlb.GetMlbParamResponse.target_threshold)
}

// int32 delta_ocn = 4;
inline void GetMlbParamResponse::clear_delta_ocn() {
  delta_ocn_ = 0;
}
inline int32_t GetMlbParamResponse::_internal_delta_ocn() const {
  return delta_ocn_;
}
inline int32_t GetMlbParamResponse::delta_ocn() const {
  // @@protoc_insertion_point(field_get:onos.mlb.GetMlbParamResponse.delta_ocn)
  return _internal_delta_ocn();
}
inline void GetMlbParamResponse::_internal_set_delta_ocn(int32_t value) {
  
  delta_ocn_ = value;
}
inline void GetMlbParamResponse::set_delta_ocn(int32_t value) {
  _internal_set_delta_ocn(value);
  // @@protoc_insertion_point(field_set:onos.mlb.GetMlbParamResponse.delta_ocn)
}

// -------------------------------------------------------------------

// SetMlbParamRequest

// int32 interval = 1;
inline void SetMlbParamRequest::clear_interval() {
  interval_ = 0;
}
inline int32_t SetMlbParamRequest::_internal_interval() const {
  return interval_;
}
inline int32_t SetMlbParamRequest::interval() const {
  // @@protoc_insertion_point(field_get:onos.mlb.SetMlbParamRequest.interval)
  return _internal_interval();
}
inline void SetMlbParamRequest::_internal_set_interval(int32_t value) {
  
  interval_ = value;
}
inline void SetMlbParamRequest::set_interval(int32_t value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:onos.mlb.SetMlbParamRequest.interval)
}

// int32 overload_threshold = 2;
inline void SetMlbParamRequest::clear_overload_threshold() {
  overload_threshold_ = 0;
}
inline int32_t SetMlbParamRequest::_internal_overload_threshold() const {
  return overload_threshold_;
}
inline int32_t SetMlbParamRequest::overload_threshold() const {
  // @@protoc_insertion_point(field_get:onos.mlb.SetMlbParamRequest.overload_threshold)
  return _internal_overload_threshold();
}
inline void SetMlbParamRequest::_internal_set_overload_threshold(int32_t value) {
  
  overload_threshold_ = value;
}
inline void SetMlbParamRequest::set_overload_threshold(int32_t value) {
  _internal_set_overload_threshold(value);
  // @@protoc_insertion_point(field_set:onos.mlb.SetMlbParamRequest.overload_threshold)
}

// int32 target_threshold = 3;
inline void SetMlbParamRequest::clear_target_threshold() {
  target_threshold_ = 0;
}
inline int32_t SetMlbParamRequest::_internal_target_threshold() const {
  return target_threshold_;
}
inline int32_t SetMlbParamRequest::target_threshold() const {
  // @@protoc_insertion_point(field_get:onos.mlb.SetMlbParamRequest.target_threshold)
  return _internal_target_threshold();
}
inline void SetMlbParamRequest::_internal_set_target_threshold(int32_t value) {
  
  target_threshold_ = value;
}
inline void SetMlbParamRequest::set_target_threshold(int32_t value) {
  _internal_set_target_threshold(value);
  // @@protoc_insertion_point(field_set:onos.mlb.SetMlbParamRequest.target_threshold)
}

// int32 delta_ocn = 4;
inline void SetMlbParamRequest::clear_delta_ocn() {
  delta_ocn_ = 0;
}
inline int32_t SetMlbParamRequest::_internal_delta_ocn() const {
  return delta_ocn_;
}
inline int32_t SetMlbParamRequest::delta_ocn() const {
  // @@protoc_insertion_point(field_get:onos.mlb.SetMlbParamRequest.delta_ocn)
  return _internal_delta_ocn();
}
inline void SetMlbParamRequest::_internal_set_delta_ocn(int32_t value) {
  
  delta_ocn_ = value;
}
inline void SetMlbParamRequest::set_delta_ocn(int32_t value) {
  _internal_set_delta_ocn(value);
  // @@protoc_insertion_point(field_set:onos.mlb.SetMlbParamRequest.delta_ocn)
}

// -------------------------------------------------------------------

// SetMlbParamResponse

// bool success = 1;
inline void SetMlbParamResponse::clear_success() {
  success_ = false;
}
inline bool SetMlbParamResponse::_internal_success() const {
  return success_;
}
inline bool SetMlbParamResponse::success() const {
  // @@protoc_insertion_point(field_get:onos.mlb.SetMlbParamResponse.success)
  return _internal_success();
}
inline void SetMlbParamResponse::_internal_set_success(bool value) {
  
  success_ = value;
}
inline void SetMlbParamResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:onos.mlb.SetMlbParamResponse.success)
}

// -------------------------------------------------------------------

// GetOcnRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetOcnResponse

// map<string, .onos.mlb.OcnRecord> ocn_map = 1;
inline int GetOcnResponse::_internal_ocn_map_size() const {
  return ocn_map_.size();
}
inline int GetOcnResponse::ocn_map_size() const {
  return _internal_ocn_map_size();
}
inline void GetOcnResponse::clear_ocn_map() {
  ocn_map_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >&
GetOcnResponse::_internal_ocn_map() const {
  return ocn_map_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >&
GetOcnResponse::ocn_map() const {
  // @@protoc_insertion_point(field_map:onos.mlb.GetOcnResponse.ocn_map)
  return _internal_ocn_map();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >*
GetOcnResponse::_internal_mutable_ocn_map() {
  return ocn_map_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >*
GetOcnResponse::mutable_ocn_map() {
  // @@protoc_insertion_point(field_mutable_map:onos.mlb.GetOcnResponse.ocn_map)
  return _internal_mutable_ocn_map();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OcnRecord

// map<string, int32> ocn_record = 1;
inline int OcnRecord::_internal_ocn_record_size() const {
  return ocn_record_.size();
}
inline int OcnRecord::ocn_record_size() const {
  return _internal_ocn_record_size();
}
inline void OcnRecord::clear_ocn_record() {
  ocn_record_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
OcnRecord::_internal_ocn_record() const {
  return ocn_record_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >&
OcnRecord::ocn_record() const {
  // @@protoc_insertion_point(field_map:onos.mlb.OcnRecord.ocn_record)
  return _internal_ocn_record();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
OcnRecord::_internal_mutable_ocn_record() {
  return ocn_record_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >*
OcnRecord::mutable_ocn_record() {
  // @@protoc_insertion_point(field_mutable_map:onos.mlb.OcnRecord.ocn_record)
  return _internal_mutable_ocn_record();
}

// -------------------------------------------------------------------

// OcnIDs

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mlb
}  // namespace onos

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_onos_2fmlb_2fmlb_2eproto
