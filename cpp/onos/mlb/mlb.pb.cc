// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/mlb/mlb.proto

#include "onos/mlb/mlb.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace mlb {
constexpr GetMlbParamRequest::GetMlbParamRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetMlbParamRequestDefaultTypeInternal {
  constexpr GetMlbParamRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMlbParamRequestDefaultTypeInternal() {}
  union {
    GetMlbParamRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMlbParamRequestDefaultTypeInternal _GetMlbParamRequest_default_instance_;
constexpr GetMlbParamResponse::GetMlbParamResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : interval_(0)
  , overload_threshold_(0)
  , target_threshold_(0)
  , delta_ocn_(0){}
struct GetMlbParamResponseDefaultTypeInternal {
  constexpr GetMlbParamResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMlbParamResponseDefaultTypeInternal() {}
  union {
    GetMlbParamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMlbParamResponseDefaultTypeInternal _GetMlbParamResponse_default_instance_;
constexpr SetMlbParamRequest::SetMlbParamRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : interval_(0)
  , overload_threshold_(0)
  , target_threshold_(0)
  , delta_ocn_(0){}
struct SetMlbParamRequestDefaultTypeInternal {
  constexpr SetMlbParamRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetMlbParamRequestDefaultTypeInternal() {}
  union {
    SetMlbParamRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetMlbParamRequestDefaultTypeInternal _SetMlbParamRequest_default_instance_;
constexpr SetMlbParamResponse::SetMlbParamResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(false){}
struct SetMlbParamResponseDefaultTypeInternal {
  constexpr SetMlbParamResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetMlbParamResponseDefaultTypeInternal() {}
  union {
    SetMlbParamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetMlbParamResponseDefaultTypeInternal _SetMlbParamResponse_default_instance_;
constexpr GetOcnRequest::GetOcnRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetOcnRequestDefaultTypeInternal {
  constexpr GetOcnRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOcnRequestDefaultTypeInternal() {}
  union {
    GetOcnRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOcnRequestDefaultTypeInternal _GetOcnRequest_default_instance_;
constexpr GetOcnResponse_OcnMapEntry_DoNotUse::GetOcnResponse_OcnMapEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetOcnResponse_OcnMapEntry_DoNotUseDefaultTypeInternal {
  constexpr GetOcnResponse_OcnMapEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOcnResponse_OcnMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetOcnResponse_OcnMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOcnResponse_OcnMapEntry_DoNotUseDefaultTypeInternal _GetOcnResponse_OcnMapEntry_DoNotUse_default_instance_;
constexpr GetOcnResponse::GetOcnResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ocn_map_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct GetOcnResponseDefaultTypeInternal {
  constexpr GetOcnResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetOcnResponseDefaultTypeInternal() {}
  union {
    GetOcnResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetOcnResponseDefaultTypeInternal _GetOcnResponse_default_instance_;
constexpr OcnRecord_OcnRecordEntry_DoNotUse::OcnRecord_OcnRecordEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct OcnRecord_OcnRecordEntry_DoNotUseDefaultTypeInternal {
  constexpr OcnRecord_OcnRecordEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OcnRecord_OcnRecordEntry_DoNotUseDefaultTypeInternal() {}
  union {
    OcnRecord_OcnRecordEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OcnRecord_OcnRecordEntry_DoNotUseDefaultTypeInternal _OcnRecord_OcnRecordEntry_DoNotUse_default_instance_;
constexpr OcnRecord::OcnRecord(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ocn_record_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct OcnRecordDefaultTypeInternal {
  constexpr OcnRecordDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OcnRecordDefaultTypeInternal() {}
  union {
    OcnRecord _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OcnRecordDefaultTypeInternal _OcnRecord_default_instance_;
constexpr OcnIDs::OcnIDs(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct OcnIDsDefaultTypeInternal {
  constexpr OcnIDsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OcnIDsDefaultTypeInternal() {}
  union {
    OcnIDs _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OcnIDsDefaultTypeInternal _OcnIDs_default_instance_;
}  // namespace mlb
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fmlb_2fmlb_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_onos_2fmlb_2fmlb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fmlb_2fmlb_2eproto = nullptr;

const uint32_t TableStruct_onos_2fmlb_2fmlb_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetMlbParamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetMlbParamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetMlbParamResponse, interval_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetMlbParamResponse, overload_threshold_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetMlbParamResponse, target_threshold_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetMlbParamResponse, delta_ocn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::SetMlbParamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::SetMlbParamRequest, interval_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::SetMlbParamRequest, overload_threshold_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::SetMlbParamRequest, target_threshold_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::SetMlbParamRequest, delta_ocn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::SetMlbParamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::SetMlbParamResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetOcnRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetOcnResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::GetOcnResponse, ocn_map_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::OcnRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::OcnRecord, ocn_record_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mlb::OcnIDs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::mlb::GetMlbParamRequest)},
  { 6, -1, -1, sizeof(::onos::mlb::GetMlbParamResponse)},
  { 16, -1, -1, sizeof(::onos::mlb::SetMlbParamRequest)},
  { 26, -1, -1, sizeof(::onos::mlb::SetMlbParamResponse)},
  { 33, -1, -1, sizeof(::onos::mlb::GetOcnRequest)},
  { 39, 47, -1, sizeof(::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse)},
  { 49, -1, -1, sizeof(::onos::mlb::GetOcnResponse)},
  { 56, 64, -1, sizeof(::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse)},
  { 66, -1, -1, sizeof(::onos::mlb::OcnRecord)},
  { 73, -1, -1, sizeof(::onos::mlb::OcnIDs)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_GetMlbParamRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_GetMlbParamResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_SetMlbParamRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_SetMlbParamResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_GetOcnRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_GetOcnResponse_OcnMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_GetOcnResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_OcnRecord_OcnRecordEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_OcnRecord_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mlb::_OcnIDs_default_instance_),
};

const char descriptor_table_protodef_onos_2fmlb_2fmlb_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022onos/mlb/mlb.proto\022\010onos.mlb\"\024\n\022GetMlb"
  "ParamRequest\"p\n\023GetMlbParamResponse\022\020\n\010i"
  "nterval\030\001 \001(\005\022\032\n\022overload_threshold\030\002 \001("
  "\005\022\030\n\020target_threshold\030\003 \001(\005\022\021\n\tdelta_ocn"
  "\030\004 \001(\005\"o\n\022SetMlbParamRequest\022\020\n\010interval"
  "\030\001 \001(\005\022\032\n\022overload_threshold\030\002 \001(\005\022\030\n\020ta"
  "rget_threshold\030\003 \001(\005\022\021\n\tdelta_ocn\030\004 \001(\005\""
  "&\n\023SetMlbParamResponse\022\017\n\007success\030\001 \001(\010\""
  "\017\n\rGetOcnRequest\"\213\001\n\016GetOcnResponse\0225\n\007o"
  "cn_map\030\001 \003(\0132$.onos.mlb.GetOcnResponse.O"
  "cnMapEntry\032B\n\013OcnMapEntry\022\013\n\003key\030\001 \001(\t\022\""
  "\n\005value\030\002 \001(\0132\023.onos.mlb.OcnRecord:\0028\001\"u"
  "\n\tOcnRecord\0226\n\nocn_record\030\001 \003(\0132\".onos.m"
  "lb.OcnRecord.OcnRecordEntry\0320\n\016OcnRecord"
  "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"\010\n"
  "\006OcnIDs2\334\001\n\003Mlb\022K\n\014GetMlbParams\022\034.onos.m"
  "lb.GetMlbParamRequest\032\035.onos.mlb.GetMlbP"
  "aramResponse\022K\n\014SetMlbParams\022\034.onos.mlb."
  "SetMlbParamRequest\032\035.onos.mlb.SetMlbPara"
  "mResponse\022;\n\006GetOcn\022\027.onos.mlb.GetOcnReq"
  "uest\032\030.onos.mlb.GetOcnResponseb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fmlb_2fmlb_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fmlb_2fmlb_2eproto = {
  false, false, 838, descriptor_table_protodef_onos_2fmlb_2fmlb_2eproto, "onos/mlb/mlb.proto", 
  &descriptor_table_onos_2fmlb_2fmlb_2eproto_once, nullptr, 0, 10,
  schemas, file_default_instances, TableStruct_onos_2fmlb_2fmlb_2eproto::offsets,
  file_level_metadata_onos_2fmlb_2fmlb_2eproto, file_level_enum_descriptors_onos_2fmlb_2fmlb_2eproto, file_level_service_descriptors_onos_2fmlb_2fmlb_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fmlb_2fmlb_2eproto_getter() {
  return &descriptor_table_onos_2fmlb_2fmlb_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fmlb_2fmlb_2eproto(&descriptor_table_onos_2fmlb_2fmlb_2eproto);
namespace onos {
namespace mlb {

// ===================================================================

class GetMlbParamRequest::_Internal {
 public:
};

GetMlbParamRequest::GetMlbParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.mlb.GetMlbParamRequest)
}
GetMlbParamRequest::GetMlbParamRequest(const GetMlbParamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.mlb.GetMlbParamRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMlbParamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMlbParamRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetMlbParamRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[0]);
}

// ===================================================================

class GetMlbParamResponse::_Internal {
 public:
};

GetMlbParamResponse::GetMlbParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mlb.GetMlbParamResponse)
}
GetMlbParamResponse::GetMlbParamResponse(const GetMlbParamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&interval_, &from.interval_,
    static_cast<size_t>(reinterpret_cast<char*>(&delta_ocn_) -
    reinterpret_cast<char*>(&interval_)) + sizeof(delta_ocn_));
  // @@protoc_insertion_point(copy_constructor:onos.mlb.GetMlbParamResponse)
}

inline void GetMlbParamResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&interval_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&delta_ocn_) -
    reinterpret_cast<char*>(&interval_)) + sizeof(delta_ocn_));
}

GetMlbParamResponse::~GetMlbParamResponse() {
  // @@protoc_insertion_point(destructor:onos.mlb.GetMlbParamResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMlbParamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMlbParamResponse::ArenaDtor(void* object) {
  GetMlbParamResponse* _this = reinterpret_cast< GetMlbParamResponse* >(object);
  (void)_this;
}
void GetMlbParamResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMlbParamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMlbParamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mlb.GetMlbParamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delta_ocn_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(delta_ocn_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMlbParamResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 interval = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 overload_threshold = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          overload_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 target_threshold = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          target_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 delta_ocn = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          delta_ocn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMlbParamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mlb.GetMlbParamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 interval = 1;
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_interval(), target);
  }

  // int32 overload_threshold = 2;
  if (this->_internal_overload_threshold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_overload_threshold(), target);
  }

  // int32 target_threshold = 3;
  if (this->_internal_target_threshold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_target_threshold(), target);
  }

  // int32 delta_ocn = 4;
  if (this->_internal_delta_ocn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_delta_ocn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mlb.GetMlbParamResponse)
  return target;
}

size_t GetMlbParamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mlb.GetMlbParamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 interval = 1;
  if (this->_internal_interval() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_interval());
  }

  // int32 overload_threshold = 2;
  if (this->_internal_overload_threshold() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_overload_threshold());
  }

  // int32 target_threshold = 3;
  if (this->_internal_target_threshold() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_target_threshold());
  }

  // int32 delta_ocn = 4;
  if (this->_internal_delta_ocn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_delta_ocn());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMlbParamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMlbParamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMlbParamResponse::GetClassData() const { return &_class_data_; }

void GetMlbParamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMlbParamResponse *>(to)->MergeFrom(
      static_cast<const GetMlbParamResponse &>(from));
}


void GetMlbParamResponse::MergeFrom(const GetMlbParamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mlb.GetMlbParamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_interval() != 0) {
    _internal_set_interval(from._internal_interval());
  }
  if (from._internal_overload_threshold() != 0) {
    _internal_set_overload_threshold(from._internal_overload_threshold());
  }
  if (from._internal_target_threshold() != 0) {
    _internal_set_target_threshold(from._internal_target_threshold());
  }
  if (from._internal_delta_ocn() != 0) {
    _internal_set_delta_ocn(from._internal_delta_ocn());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMlbParamResponse::CopyFrom(const GetMlbParamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mlb.GetMlbParamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMlbParamResponse::IsInitialized() const {
  return true;
}

void GetMlbParamResponse::InternalSwap(GetMlbParamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMlbParamResponse, delta_ocn_)
      + sizeof(GetMlbParamResponse::delta_ocn_)
      - PROTOBUF_FIELD_OFFSET(GetMlbParamResponse, interval_)>(
          reinterpret_cast<char*>(&interval_),
          reinterpret_cast<char*>(&other->interval_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMlbParamResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[1]);
}

// ===================================================================

class SetMlbParamRequest::_Internal {
 public:
};

SetMlbParamRequest::SetMlbParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mlb.SetMlbParamRequest)
}
SetMlbParamRequest::SetMlbParamRequest(const SetMlbParamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&interval_, &from.interval_,
    static_cast<size_t>(reinterpret_cast<char*>(&delta_ocn_) -
    reinterpret_cast<char*>(&interval_)) + sizeof(delta_ocn_));
  // @@protoc_insertion_point(copy_constructor:onos.mlb.SetMlbParamRequest)
}

inline void SetMlbParamRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&interval_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&delta_ocn_) -
    reinterpret_cast<char*>(&interval_)) + sizeof(delta_ocn_));
}

SetMlbParamRequest::~SetMlbParamRequest() {
  // @@protoc_insertion_point(destructor:onos.mlb.SetMlbParamRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetMlbParamRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetMlbParamRequest::ArenaDtor(void* object) {
  SetMlbParamRequest* _this = reinterpret_cast< SetMlbParamRequest* >(object);
  (void)_this;
}
void SetMlbParamRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMlbParamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetMlbParamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mlb.SetMlbParamRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delta_ocn_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(delta_ocn_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMlbParamRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 interval = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 overload_threshold = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          overload_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 target_threshold = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          target_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 delta_ocn = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          delta_ocn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetMlbParamRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mlb.SetMlbParamRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 interval = 1;
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_interval(), target);
  }

  // int32 overload_threshold = 2;
  if (this->_internal_overload_threshold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_overload_threshold(), target);
  }

  // int32 target_threshold = 3;
  if (this->_internal_target_threshold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_target_threshold(), target);
  }

  // int32 delta_ocn = 4;
  if (this->_internal_delta_ocn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_delta_ocn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mlb.SetMlbParamRequest)
  return target;
}

size_t SetMlbParamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mlb.SetMlbParamRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 interval = 1;
  if (this->_internal_interval() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_interval());
  }

  // int32 overload_threshold = 2;
  if (this->_internal_overload_threshold() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_overload_threshold());
  }

  // int32 target_threshold = 3;
  if (this->_internal_target_threshold() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_target_threshold());
  }

  // int32 delta_ocn = 4;
  if (this->_internal_delta_ocn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_delta_ocn());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetMlbParamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetMlbParamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetMlbParamRequest::GetClassData() const { return &_class_data_; }

void SetMlbParamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetMlbParamRequest *>(to)->MergeFrom(
      static_cast<const SetMlbParamRequest &>(from));
}


void SetMlbParamRequest::MergeFrom(const SetMlbParamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mlb.SetMlbParamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_interval() != 0) {
    _internal_set_interval(from._internal_interval());
  }
  if (from._internal_overload_threshold() != 0) {
    _internal_set_overload_threshold(from._internal_overload_threshold());
  }
  if (from._internal_target_threshold() != 0) {
    _internal_set_target_threshold(from._internal_target_threshold());
  }
  if (from._internal_delta_ocn() != 0) {
    _internal_set_delta_ocn(from._internal_delta_ocn());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetMlbParamRequest::CopyFrom(const SetMlbParamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mlb.SetMlbParamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMlbParamRequest::IsInitialized() const {
  return true;
}

void SetMlbParamRequest::InternalSwap(SetMlbParamRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetMlbParamRequest, delta_ocn_)
      + sizeof(SetMlbParamRequest::delta_ocn_)
      - PROTOBUF_FIELD_OFFSET(SetMlbParamRequest, interval_)>(
          reinterpret_cast<char*>(&interval_),
          reinterpret_cast<char*>(&other->interval_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMlbParamRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[2]);
}

// ===================================================================

class SetMlbParamResponse::_Internal {
 public:
};

SetMlbParamResponse::SetMlbParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mlb.SetMlbParamResponse)
}
SetMlbParamResponse::SetMlbParamResponse(const SetMlbParamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:onos.mlb.SetMlbParamResponse)
}

inline void SetMlbParamResponse::SharedCtor() {
success_ = false;
}

SetMlbParamResponse::~SetMlbParamResponse() {
  // @@protoc_insertion_point(destructor:onos.mlb.SetMlbParamResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetMlbParamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetMlbParamResponse::ArenaDtor(void* object) {
  SetMlbParamResponse* _this = reinterpret_cast< SetMlbParamResponse* >(object);
  (void)_this;
}
void SetMlbParamResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMlbParamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetMlbParamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mlb.SetMlbParamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMlbParamResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetMlbParamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mlb.SetMlbParamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mlb.SetMlbParamResponse)
  return target;
}

size_t SetMlbParamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mlb.SetMlbParamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetMlbParamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetMlbParamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetMlbParamResponse::GetClassData() const { return &_class_data_; }

void SetMlbParamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetMlbParamResponse *>(to)->MergeFrom(
      static_cast<const SetMlbParamResponse &>(from));
}


void SetMlbParamResponse::MergeFrom(const SetMlbParamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mlb.SetMlbParamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetMlbParamResponse::CopyFrom(const SetMlbParamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mlb.SetMlbParamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMlbParamResponse::IsInitialized() const {
  return true;
}

void SetMlbParamResponse::InternalSwap(SetMlbParamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMlbParamResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[3]);
}

// ===================================================================

class GetOcnRequest::_Internal {
 public:
};

GetOcnRequest::GetOcnRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.mlb.GetOcnRequest)
}
GetOcnRequest::GetOcnRequest(const GetOcnRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.mlb.GetOcnRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOcnRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOcnRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetOcnRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[4]);
}

// ===================================================================

GetOcnResponse_OcnMapEntry_DoNotUse::GetOcnResponse_OcnMapEntry_DoNotUse() {}
GetOcnResponse_OcnMapEntry_DoNotUse::GetOcnResponse_OcnMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetOcnResponse_OcnMapEntry_DoNotUse::MergeFrom(const GetOcnResponse_OcnMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetOcnResponse_OcnMapEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[5]);
}

// ===================================================================

class GetOcnResponse::_Internal {
 public:
};

GetOcnResponse::GetOcnResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ocn_map_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mlb.GetOcnResponse)
}
GetOcnResponse::GetOcnResponse(const GetOcnResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ocn_map_.MergeFrom(from.ocn_map_);
  // @@protoc_insertion_point(copy_constructor:onos.mlb.GetOcnResponse)
}

inline void GetOcnResponse::SharedCtor() {
}

GetOcnResponse::~GetOcnResponse() {
  // @@protoc_insertion_point(destructor:onos.mlb.GetOcnResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetOcnResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetOcnResponse::ArenaDtor(void* object) {
  GetOcnResponse* _this = reinterpret_cast< GetOcnResponse* >(object);
  (void)_this;
  _this->ocn_map_. ~MapField();
}
inline void GetOcnResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &GetOcnResponse::ArenaDtor);
  }
}
void GetOcnResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetOcnResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mlb.GetOcnResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ocn_map_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetOcnResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .onos.mlb.OcnRecord> ocn_map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&ocn_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetOcnResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mlb.GetOcnResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .onos.mlb.OcnRecord> ocn_map = 1;
  if (!this->_internal_ocn_map().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "onos.mlb.GetOcnResponse.OcnMapEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_ocn_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_ocn_map().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >::const_iterator
          it = this->_internal_ocn_map().begin();
          it != this->_internal_ocn_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetOcnResponse_OcnMapEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >::const_iterator
          it = this->_internal_ocn_map().begin();
          it != this->_internal_ocn_map().end(); ++it) {
        target = GetOcnResponse_OcnMapEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mlb.GetOcnResponse)
  return target;
}

size_t GetOcnResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mlb.GetOcnResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .onos.mlb.OcnRecord> ocn_map = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_ocn_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::mlb::OcnRecord >::const_iterator
      it = this->_internal_ocn_map().begin();
      it != this->_internal_ocn_map().end(); ++it) {
    total_size += GetOcnResponse_OcnMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetOcnResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetOcnResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetOcnResponse::GetClassData() const { return &_class_data_; }

void GetOcnResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetOcnResponse *>(to)->MergeFrom(
      static_cast<const GetOcnResponse &>(from));
}


void GetOcnResponse::MergeFrom(const GetOcnResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mlb.GetOcnResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  ocn_map_.MergeFrom(from.ocn_map_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetOcnResponse::CopyFrom(const GetOcnResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mlb.GetOcnResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOcnResponse::IsInitialized() const {
  return true;
}

void GetOcnResponse::InternalSwap(GetOcnResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ocn_map_.InternalSwap(&other->ocn_map_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetOcnResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[6]);
}

// ===================================================================

OcnRecord_OcnRecordEntry_DoNotUse::OcnRecord_OcnRecordEntry_DoNotUse() {}
OcnRecord_OcnRecordEntry_DoNotUse::OcnRecord_OcnRecordEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void OcnRecord_OcnRecordEntry_DoNotUse::MergeFrom(const OcnRecord_OcnRecordEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata OcnRecord_OcnRecordEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[7]);
}

// ===================================================================

class OcnRecord::_Internal {
 public:
};

OcnRecord::OcnRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ocn_record_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mlb.OcnRecord)
}
OcnRecord::OcnRecord(const OcnRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ocn_record_.MergeFrom(from.ocn_record_);
  // @@protoc_insertion_point(copy_constructor:onos.mlb.OcnRecord)
}

inline void OcnRecord::SharedCtor() {
}

OcnRecord::~OcnRecord() {
  // @@protoc_insertion_point(destructor:onos.mlb.OcnRecord)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OcnRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OcnRecord::ArenaDtor(void* object) {
  OcnRecord* _this = reinterpret_cast< OcnRecord* >(object);
  (void)_this;
  _this->ocn_record_. ~MapField();
}
inline void OcnRecord::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &OcnRecord::ArenaDtor);
  }
}
void OcnRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OcnRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mlb.OcnRecord)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ocn_record_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OcnRecord::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, int32> ocn_record = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&ocn_record_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OcnRecord::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mlb.OcnRecord)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, int32> ocn_record = 1;
  if (!this->_internal_ocn_record().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "onos.mlb.OcnRecord.OcnRecordEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_ocn_record().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_ocn_record().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >::const_iterator
          it = this->_internal_ocn_record().begin();
          it != this->_internal_ocn_record().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = OcnRecord_OcnRecordEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >::const_iterator
          it = this->_internal_ocn_record().begin();
          it != this->_internal_ocn_record().end(); ++it) {
        target = OcnRecord_OcnRecordEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mlb.OcnRecord)
  return target;
}

size_t OcnRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mlb.OcnRecord)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int32> ocn_record = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_ocn_record_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >::const_iterator
      it = this->_internal_ocn_record().begin();
      it != this->_internal_ocn_record().end(); ++it) {
    total_size += OcnRecord_OcnRecordEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OcnRecord::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OcnRecord::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OcnRecord::GetClassData() const { return &_class_data_; }

void OcnRecord::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OcnRecord *>(to)->MergeFrom(
      static_cast<const OcnRecord &>(from));
}


void OcnRecord::MergeFrom(const OcnRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mlb.OcnRecord)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  ocn_record_.MergeFrom(from.ocn_record_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OcnRecord::CopyFrom(const OcnRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mlb.OcnRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OcnRecord::IsInitialized() const {
  return true;
}

void OcnRecord::InternalSwap(OcnRecord* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ocn_record_.InternalSwap(&other->ocn_record_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OcnRecord::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[8]);
}

// ===================================================================

class OcnIDs::_Internal {
 public:
};

OcnIDs::OcnIDs(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.mlb.OcnIDs)
}
OcnIDs::OcnIDs(const OcnIDs& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.mlb.OcnIDs)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OcnIDs::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OcnIDs::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata OcnIDs::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmlb_2fmlb_2eproto_getter, &descriptor_table_onos_2fmlb_2fmlb_2eproto_once,
      file_level_metadata_onos_2fmlb_2fmlb_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mlb
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::mlb::GetMlbParamRequest* Arena::CreateMaybeMessage< ::onos::mlb::GetMlbParamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::GetMlbParamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::GetMlbParamResponse* Arena::CreateMaybeMessage< ::onos::mlb::GetMlbParamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::GetMlbParamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::SetMlbParamRequest* Arena::CreateMaybeMessage< ::onos::mlb::SetMlbParamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::SetMlbParamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::SetMlbParamResponse* Arena::CreateMaybeMessage< ::onos::mlb::SetMlbParamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::SetMlbParamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::GetOcnRequest* Arena::CreateMaybeMessage< ::onos::mlb::GetOcnRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::GetOcnRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::GetOcnResponse_OcnMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::GetOcnResponse* Arena::CreateMaybeMessage< ::onos::mlb::GetOcnResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::GetOcnResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse* Arena::CreateMaybeMessage< ::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::OcnRecord_OcnRecordEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::OcnRecord* Arena::CreateMaybeMessage< ::onos::mlb::OcnRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::OcnRecord >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mlb::OcnIDs* Arena::CreateMaybeMessage< ::onos::mlb::OcnIDs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mlb::OcnIDs >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
