// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/ransim/trafficsim/trafficsim.proto
// Original file comments:
// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef GRPC_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto__INCLUDED
#define GRPC_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto__INCLUDED

#include "onos/ransim/trafficsim/trafficsim.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace ransim {
namespace trafficsim {

// Traffic - provides a stream of traffic data to GUI
class Traffic final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.ransim.trafficsim.Traffic";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::onos::ransim::types::MapLayout* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::types::MapLayout>> AsyncGetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::types::MapLayout>>(AsyncGetMapLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::types::MapLayout>> PrepareAsyncGetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::types::MapLayout>>(PrepareAsyncGetMapLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>> ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>>(ListRoutesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>> AsyncListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>>(AsyncListRoutesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>> PrepareAsyncListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>>(PrepareAsyncListRoutesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>> ListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>>(ListUesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>> AsyncListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>>(AsyncListUesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>> PrepareAsyncListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>>(PrepareAsyncListUesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>> WatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>>(WatchUesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>> AsyncWatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>>(AsyncWatchUesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>> PrepareAsyncWatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>>(PrepareAsyncWatchUesRaw(context, request, cq));
    }
    virtual ::grpc::Status SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::SetNumberUEsResponse>> AsyncSetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::SetNumberUEsResponse>>(AsyncSetNumberUEsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::SetNumberUEsResponse>> PrepareAsyncSetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::SetNumberUEsResponse>>(PrepareAsyncSetNumberUEsRaw(context, request, cq));
    }
    virtual ::grpc::Status ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::onos::ransim::trafficsim::ResetMetricsMsg* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::ResetMetricsMsg>> AsyncResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::ResetMetricsMsg>>(AsyncResetMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::ResetMetricsMsg>> PrepareAsyncResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::ResetMetricsMsg>>(PrepareAsyncResetMetricsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::ListRoutesResponse>* reactor) = 0;
      virtual void ListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::ListUesResponse>* reactor) = 0;
      virtual void WatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::WatchUesResponse>* reactor) = 0;
      virtual void SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::types::MapLayout>* AsyncGetMapLayoutRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::types::MapLayout>* PrepareAsyncGetMapLayoutRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>* ListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>* AsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListRoutesResponse>* PrepareAsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>* ListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>* AsyncListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::ListUesResponse>* PrepareAsyncListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>* WatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>* AsyncWatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::trafficsim::WatchUesResponse>* PrepareAsyncWatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::SetNumberUEsResponse>* AsyncSetNumberUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::SetNumberUEsResponse>* PrepareAsyncSetNumberUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::ResetMetricsMsg>* AsyncResetMetricsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::trafficsim::ResetMetricsMsg>* PrepareAsyncResetMetricsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::onos::ransim::types::MapLayout* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::types::MapLayout>> AsyncGetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::types::MapLayout>>(AsyncGetMapLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::types::MapLayout>> PrepareAsyncGetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::types::MapLayout>>(PrepareAsyncGetMapLayoutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::trafficsim::ListRoutesResponse>> ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::trafficsim::ListRoutesResponse>>(ListRoutesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListRoutesResponse>> AsyncListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListRoutesResponse>>(AsyncListRoutesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListRoutesResponse>> PrepareAsyncListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListRoutesResponse>>(PrepareAsyncListRoutesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::trafficsim::ListUesResponse>> ListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::trafficsim::ListUesResponse>>(ListUesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListUesResponse>> AsyncListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListUesResponse>>(AsyncListUesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListUesResponse>> PrepareAsyncListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListUesResponse>>(PrepareAsyncListUesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::trafficsim::WatchUesResponse>> WatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::trafficsim::WatchUesResponse>>(WatchUesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::WatchUesResponse>> AsyncWatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::WatchUesResponse>>(AsyncWatchUesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::WatchUesResponse>> PrepareAsyncWatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::WatchUesResponse>>(PrepareAsyncWatchUesRaw(context, request, cq));
    }
    ::grpc::Status SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::SetNumberUEsResponse>> AsyncSetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::SetNumberUEsResponse>>(AsyncSetNumberUEsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::SetNumberUEsResponse>> PrepareAsyncSetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::SetNumberUEsResponse>>(PrepareAsyncSetNumberUEsRaw(context, request, cq));
    }
    ::grpc::Status ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::onos::ransim::trafficsim::ResetMetricsMsg* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::ResetMetricsMsg>> AsyncResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::ResetMetricsMsg>>(AsyncResetMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::ResetMetricsMsg>> PrepareAsyncResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::ResetMetricsMsg>>(PrepareAsyncResetMetricsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response, std::function<void(::grpc::Status)>) override;
      void GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::ListRoutesResponse>* reactor) override;
      void ListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::ListUesResponse>* reactor) override;
      void WatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::WatchUesResponse>* reactor) override;
      void SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response, std::function<void(::grpc::Status)>) override;
      void SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response, std::function<void(::grpc::Status)>) override;
      void ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::types::MapLayout>* AsyncGetMapLayoutRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::types::MapLayout>* PrepareAsyncGetMapLayoutRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::trafficsim::ListRoutesResponse>* ListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListRoutesResponse>* AsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListRoutesResponse>* PrepareAsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::trafficsim::ListUesResponse>* ListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListUesResponse>* AsyncListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListUesResponse>* PrepareAsyncListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::trafficsim::WatchUesResponse>* WatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::WatchUesResponse>* AsyncWatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::WatchUesResponse>* PrepareAsyncWatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::SetNumberUEsResponse>* AsyncSetNumberUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::SetNumberUEsResponse>* PrepareAsyncSetNumberUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::ResetMetricsMsg>* AsyncResetMetricsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::ResetMetricsMsg>* PrepareAsyncResetMetricsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetMapLayout_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRoutes_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUes_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchUes_;
    const ::grpc::internal::RpcMethod rpcmethod_SetNumberUEs_;
    const ::grpc::internal::RpcMethod rpcmethod_ResetMetrics_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetMapLayout(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response);
    virtual ::grpc::Status ListRoutes(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest* request, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* writer);
    virtual ::grpc::Status ListUes(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::ListUesRequest* request, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListUesResponse>* writer);
    virtual ::grpc::Status WatchUes(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::WatchUesRequest* request, ::grpc::ServerWriter< ::onos::ransim::trafficsim::WatchUesResponse>* writer);
    virtual ::grpc::Status SetNumberUEs(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response);
    virtual ::grpc::Status ResetMetrics(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMapLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMapLayout() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetMapLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMapLayout(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::MapLayoutRequest* /*request*/, ::onos::ransim::types::MapLayout* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMapLayout(::grpc::ServerContext* context, ::onos::ransim::trafficsim::MapLayoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::types::MapLayout>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRoutes() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRoutes(::grpc::ServerContext* context, ::onos::ransim::trafficsim::ListRoutesRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListUes() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUes(::grpc::ServerContext* context, ::onos::ransim::trafficsim::ListUesRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::trafficsim::ListUesResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchUes() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_WatchUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::WatchUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::WatchUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchUes(::grpc::ServerContext* context, ::onos::ransim::trafficsim::WatchUesRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::trafficsim::WatchUesResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetNumberUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetNumberUEs() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SetNumberUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumberUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::SetNumberUEsRequest* /*request*/, ::onos::ransim::trafficsim::SetNumberUEsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetNumberUEs(::grpc::ServerContext* context, ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::trafficsim::SetNumberUEsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResetMetrics() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ResetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMetrics(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ResetMetricsMsg* /*request*/, ::onos::ransim::trafficsim::ResetMetricsMsg* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetMetrics(::grpc::ServerContext* context, ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::trafficsim::ResetMetricsMsg>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetMapLayout<WithAsyncMethod_ListRoutes<WithAsyncMethod_ListUes<WithAsyncMethod_WatchUes<WithAsyncMethod_SetNumberUEs<WithAsyncMethod_ResetMetrics<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetMapLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMapLayout() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::trafficsim::MapLayoutRequest, ::onos::ransim::types::MapLayout>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response) { return this->GetMapLayout(context, request, response); }));}
    void SetMessageAllocatorFor_GetMapLayout(
        ::grpc::MessageAllocator< ::onos::ransim::trafficsim::MapLayoutRequest, ::onos::ransim::types::MapLayout>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::trafficsim::MapLayoutRequest, ::onos::ransim::types::MapLayout>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMapLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMapLayout(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::MapLayoutRequest* /*request*/, ::onos::ransim::types::MapLayout* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMapLayout(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::trafficsim::MapLayoutRequest* /*request*/, ::onos::ransim::types::MapLayout* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRoutes() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::trafficsim::ListRoutesRequest, ::onos::ransim::trafficsim::ListRoutesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest* request) { return this->ListRoutes(context, request); }));
    }
    ~WithCallbackMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::trafficsim::ListRoutesResponse>* ListRoutes(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::trafficsim::ListRoutesRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListUes() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::trafficsim::ListUesRequest, ::onos::ransim::trafficsim::ListUesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::trafficsim::ListUesRequest* request) { return this->ListUes(context, request); }));
    }
    ~WithCallbackMethod_ListUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::trafficsim::ListUesResponse>* ListUes(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::trafficsim::ListUesRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchUes() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::trafficsim::WatchUesRequest, ::onos::ransim::trafficsim::WatchUesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::trafficsim::WatchUesRequest* request) { return this->WatchUes(context, request); }));
    }
    ~WithCallbackMethod_WatchUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::WatchUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::WatchUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::trafficsim::WatchUesResponse>* WatchUes(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::trafficsim::WatchUesRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetNumberUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetNumberUEs() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::trafficsim::SetNumberUEsRequest, ::onos::ransim::trafficsim::SetNumberUEsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response) { return this->SetNumberUEs(context, request, response); }));}
    void SetMessageAllocatorFor_SetNumberUEs(
        ::grpc::MessageAllocator< ::onos::ransim::trafficsim::SetNumberUEsRequest, ::onos::ransim::trafficsim::SetNumberUEsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::trafficsim::SetNumberUEsRequest, ::onos::ransim::trafficsim::SetNumberUEsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetNumberUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumberUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::SetNumberUEsRequest* /*request*/, ::onos::ransim::trafficsim::SetNumberUEsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetNumberUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::trafficsim::SetNumberUEsRequest* /*request*/, ::onos::ransim::trafficsim::SetNumberUEsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ResetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ResetMetrics() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response) { return this->ResetMetrics(context, request, response); }));}
    void SetMessageAllocatorFor_ResetMetrics(
        ::grpc::MessageAllocator< ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ResetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMetrics(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ResetMetricsMsg* /*request*/, ::onos::ransim::trafficsim::ResetMetricsMsg* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResetMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::trafficsim::ResetMetricsMsg* /*request*/, ::onos::ransim::trafficsim::ResetMetricsMsg* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetMapLayout<WithCallbackMethod_ListRoutes<WithCallbackMethod_ListUes<WithCallbackMethod_WatchUes<WithCallbackMethod_SetNumberUEs<WithCallbackMethod_ResetMetrics<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetMapLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMapLayout() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetMapLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMapLayout(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::MapLayoutRequest* /*request*/, ::onos::ransim::types::MapLayout* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRoutes() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListUes() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchUes() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_WatchUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::WatchUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::WatchUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetNumberUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetNumberUEs() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SetNumberUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumberUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::SetNumberUEsRequest* /*request*/, ::onos::ransim::trafficsim::SetNumberUEsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResetMetrics() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ResetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMetrics(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ResetMetricsMsg* /*request*/, ::onos::ransim::trafficsim::ResetMetricsMsg* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMapLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMapLayout() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetMapLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMapLayout(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::MapLayoutRequest* /*request*/, ::onos::ransim::types::MapLayout* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMapLayout(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRoutes() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRoutes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListUes() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchUes() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_WatchUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::WatchUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::WatchUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchUes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetNumberUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetNumberUEs() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SetNumberUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumberUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::SetNumberUEsRequest* /*request*/, ::onos::ransim::trafficsim::SetNumberUEsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetNumberUEs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResetMetrics() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ResetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMetrics(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ResetMetricsMsg* /*request*/, ::onos::ransim::trafficsim::ResetMetricsMsg* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetMetrics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMapLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMapLayout() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMapLayout(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMapLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMapLayout(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::MapLayoutRequest* /*request*/, ::onos::ransim::types::MapLayout* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMapLayout(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRoutes() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListRoutes(context, request); }));
    }
    ~WithRawCallbackMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListRoutes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListUes() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListUes(context, request); }));
    }
    ~WithRawCallbackMethod_ListUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListUes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchUes() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchUes(context, request); }));
    }
    ~WithRawCallbackMethod_WatchUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::WatchUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::WatchUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchUes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetNumberUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetNumberUEs() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetNumberUEs(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetNumberUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNumberUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::SetNumberUEsRequest* /*request*/, ::onos::ransim::trafficsim::SetNumberUEsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetNumberUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ResetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ResetMetrics() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResetMetrics(context, request, response); }));
    }
    ~WithRawCallbackMethod_ResetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMetrics(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ResetMetricsMsg* /*request*/, ::onos::ransim::trafficsim::ResetMetricsMsg* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResetMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMapLayout : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMapLayout() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::trafficsim::MapLayoutRequest, ::onos::ransim::types::MapLayout>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::trafficsim::MapLayoutRequest, ::onos::ransim::types::MapLayout>* streamer) {
                       return this->StreamedGetMapLayout(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMapLayout() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMapLayout(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::MapLayoutRequest* /*request*/, ::onos::ransim::types::MapLayout* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMapLayout(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::trafficsim::MapLayoutRequest,::onos::ransim::types::MapLayout>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetNumberUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetNumberUEs() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::trafficsim::SetNumberUEsRequest, ::onos::ransim::trafficsim::SetNumberUEsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::trafficsim::SetNumberUEsRequest, ::onos::ransim::trafficsim::SetNumberUEsResponse>* streamer) {
                       return this->StreamedSetNumberUEs(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetNumberUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetNumberUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::SetNumberUEsRequest* /*request*/, ::onos::ransim::trafficsim::SetNumberUEsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetNumberUEs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::trafficsim::SetNumberUEsRequest,::onos::ransim::trafficsim::SetNumberUEsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResetMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResetMetrics() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg>* streamer) {
                       return this->StreamedResetMetrics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResetMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResetMetrics(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ResetMetricsMsg* /*request*/, ::onos::ransim::trafficsim::ResetMetricsMsg* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResetMetrics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::trafficsim::ResetMetricsMsg,::onos::ransim::trafficsim::ResetMetricsMsg>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetMapLayout<WithStreamedUnaryMethod_SetNumberUEs<WithStreamedUnaryMethod_ResetMetrics<Service > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListRoutes() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::trafficsim::ListRoutesRequest, ::onos::ransim::trafficsim::ListRoutesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::trafficsim::ListRoutesRequest, ::onos::ransim::trafficsim::ListRoutesResponse>* streamer) {
                       return this->StreamedListRoutes(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListRoutes(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::trafficsim::ListRoutesRequest,::onos::ransim::trafficsim::ListRoutesResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ListUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListUes() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::trafficsim::ListUesRequest, ::onos::ransim::trafficsim::ListUesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::trafficsim::ListUesRequest, ::onos::ransim::trafficsim::ListUesResponse>* streamer) {
                       return this->StreamedListUes(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::ListUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListUes(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::trafficsim::ListUesRequest,::onos::ransim::trafficsim::ListUesResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchUes() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::trafficsim::WatchUesRequest, ::onos::ransim::trafficsim::WatchUesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::trafficsim::WatchUesRequest, ::onos::ransim::trafficsim::WatchUesResponse>* streamer) {
                       return this->StreamedWatchUes(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchUes(::grpc::ServerContext* /*context*/, const ::onos::ransim::trafficsim::WatchUesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::trafficsim::WatchUesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchUes(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::trafficsim::WatchUesRequest,::onos::ransim::trafficsim::WatchUesResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_ListRoutes<WithSplitStreamingMethod_ListUes<WithSplitStreamingMethod_WatchUes<Service > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetMapLayout<WithSplitStreamingMethod_ListRoutes<WithSplitStreamingMethod_ListUes<WithSplitStreamingMethod_WatchUes<WithStreamedUnaryMethod_SetNumberUEs<WithStreamedUnaryMethod_ResetMetrics<Service > > > > > > StreamedService;
};

}  // namespace trafficsim
}  // namespace ransim
}  // namespace onos


#endif  // GRPC_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto__INCLUDED
