// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/ransim/trafficsim/trafficsim.proto

#include "onos/ransim/trafficsim/trafficsim.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace ransim {
namespace trafficsim {
constexpr MapLayoutRequest::MapLayoutRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MapLayoutRequestDefaultTypeInternal {
  constexpr MapLayoutRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MapLayoutRequestDefaultTypeInternal() {}
  union {
    MapLayoutRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MapLayoutRequestDefaultTypeInternal _MapLayoutRequest_default_instance_;
constexpr ListRoutesRequest::ListRoutesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : no_replay_(false)
  , no_subscribe_(false){}
struct ListRoutesRequestDefaultTypeInternal {
  constexpr ListRoutesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRoutesRequestDefaultTypeInternal() {}
  union {
    ListRoutesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRoutesRequestDefaultTypeInternal _ListRoutesRequest_default_instance_;
constexpr ListRoutesResponse::ListRoutesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : route_(nullptr)
  , type_(0)
{}
struct ListRoutesResponseDefaultTypeInternal {
  constexpr ListRoutesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRoutesResponseDefaultTypeInternal() {}
  union {
    ListRoutesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRoutesResponseDefaultTypeInternal _ListRoutesResponse_default_instance_;
constexpr ListUesRequest::ListUesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ListUesRequestDefaultTypeInternal {
  constexpr ListUesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListUesRequestDefaultTypeInternal() {}
  union {
    ListUesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListUesRequestDefaultTypeInternal _ListUesRequest_default_instance_;
constexpr ListUesResponse::ListUesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ue_(nullptr){}
struct ListUesResponseDefaultTypeInternal {
  constexpr ListUesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListUesResponseDefaultTypeInternal() {}
  union {
    ListUesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListUesResponseDefaultTypeInternal _ListUesResponse_default_instance_;
constexpr WatchUesRequest::WatchUesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : no_replay_(false)
  , no_subscribe_(false){}
struct WatchUesRequestDefaultTypeInternal {
  constexpr WatchUesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchUesRequestDefaultTypeInternal() {}
  union {
    WatchUesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchUesRequestDefaultTypeInternal _WatchUesRequest_default_instance_;
constexpr WatchUesResponse::WatchUesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ue_(nullptr)
  , type_(0)

  , update_type_(0)
{}
struct WatchUesResponseDefaultTypeInternal {
  constexpr WatchUesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchUesResponseDefaultTypeInternal() {}
  union {
    WatchUesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchUesResponseDefaultTypeInternal _WatchUesResponse_default_instance_;
constexpr SetNumberUEsRequest::SetNumberUEsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : number_(0u){}
struct SetNumberUEsRequestDefaultTypeInternal {
  constexpr SetNumberUEsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetNumberUEsRequestDefaultTypeInternal() {}
  union {
    SetNumberUEsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetNumberUEsRequestDefaultTypeInternal _SetNumberUEsRequest_default_instance_;
constexpr SetNumberUEsResponse::SetNumberUEsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : number_(0u){}
struct SetNumberUEsResponseDefaultTypeInternal {
  constexpr SetNumberUEsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetNumberUEsResponseDefaultTypeInternal() {}
  union {
    SetNumberUEsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetNumberUEsResponseDefaultTypeInternal _SetNumberUEsResponse_default_instance_;
constexpr ResetMetricsMsg::ResetMetricsMsg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ResetMetricsMsgDefaultTypeInternal {
  constexpr ResetMetricsMsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetMetricsMsgDefaultTypeInternal() {}
  union {
    ResetMetricsMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetMetricsMsgDefaultTypeInternal _ResetMetricsMsg_default_instance_;
}  // namespace trafficsim
}  // namespace ransim
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto = nullptr;

const uint32_t TableStruct_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::MapLayoutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListRoutesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListRoutesRequest, no_replay_),
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListRoutesRequest, no_subscribe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListRoutesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListRoutesResponse, route_),
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListRoutesResponse, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListUesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListUesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ListUesResponse, ue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::WatchUesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::WatchUesRequest, no_replay_),
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::WatchUesRequest, no_subscribe_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::WatchUesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::WatchUesResponse, ue_),
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::WatchUesResponse, type_),
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::WatchUesResponse, update_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::SetNumberUEsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::SetNumberUEsRequest, number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::SetNumberUEsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::SetNumberUEsResponse, number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::ransim::trafficsim::ResetMetricsMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::ransim::trafficsim::MapLayoutRequest)},
  { 6, -1, -1, sizeof(::onos::ransim::trafficsim::ListRoutesRequest)},
  { 14, -1, -1, sizeof(::onos::ransim::trafficsim::ListRoutesResponse)},
  { 22, -1, -1, sizeof(::onos::ransim::trafficsim::ListUesRequest)},
  { 28, -1, -1, sizeof(::onos::ransim::trafficsim::ListUesResponse)},
  { 35, -1, -1, sizeof(::onos::ransim::trafficsim::WatchUesRequest)},
  { 43, -1, -1, sizeof(::onos::ransim::trafficsim::WatchUesResponse)},
  { 52, -1, -1, sizeof(::onos::ransim::trafficsim::SetNumberUEsRequest)},
  { 59, -1, -1, sizeof(::onos::ransim::trafficsim::SetNumberUEsResponse)},
  { 66, -1, -1, sizeof(::onos::ransim::trafficsim::ResetMetricsMsg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_MapLayoutRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_ListRoutesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_ListRoutesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_ListUesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_ListUesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_WatchUesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_WatchUesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_SetNumberUEsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_SetNumberUEsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::ransim::trafficsim::_ResetMetricsMsg_default_instance_),
};

const char descriptor_table_protodef_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'onos/ransim/trafficsim/trafficsim.prot"
  "o\022\026onos.ransim.trafficsim\032\035onos/ransim/t"
  "ypes/types.proto\"\022\n\020MapLayoutRequest\"<\n\021"
  "ListRoutesRequest\022\021\n\tno_replay\030\001 \001(\010\022\024\n\014"
  "no_subscribe\030\002 \001(\010\"i\n\022ListRoutesResponse"
  "\022\'\n\005route\030\001 \001(\0132\030.onos.ransim.types.Rout"
  "e\022*\n\004type\030\002 \001(\0162\034.onos.ransim.trafficsim"
  ".Type\"\020\n\016ListUesRequest\"4\n\017ListUesRespon"
  "se\022!\n\002ue\030\001 \001(\0132\025.onos.ransim.types.Ue\":\n"
  "\017WatchUesRequest\022\021\n\tno_replay\030\001 \001(\010\022\024\n\014n"
  "o_subscribe\030\002 \001(\010\"\232\001\n\020WatchUesResponse\022!"
  "\n\002ue\030\001 \001(\0132\025.onos.ransim.types.Ue\022*\n\004typ"
  "e\030\002 \001(\0162\034.onos.ransim.trafficsim.Type\0227\n"
  "\013update_type\030\003 \001(\0162\".onos.ransim.traffic"
  "sim.UpdateType\"%\n\023SetNumberUEsRequest\022\016\n"
  "\006number\030\001 \001(\r\"&\n\024SetNumberUEsResponse\022\016\n"
  "\006number\030\001 \001(\r\"\021\n\017ResetMetricsMsg*5\n\004Type"
  "\022\010\n\004NONE\020\000\022\t\n\005ADDED\020\001\022\013\n\007UPDATED\020\002\022\013\n\007RE"
  "MOVED\020\003*E\n\nUpdateType\022\020\n\014NOUPDATETYPE\020\000\022"
  "\014\n\010POSITION\020\001\022\t\n\005TOWER\020\002\022\014\n\010HANDOVER\020\0032\324"
  "\004\n\007Traffic\022V\n\014GetMapLayout\022(.onos.ransim"
  ".trafficsim.MapLayoutRequest\032\034.onos.rans"
  "im.types.MapLayout\022e\n\nListRoutes\022).onos."
  "ransim.trafficsim.ListRoutesRequest\032*.on"
  "os.ransim.trafficsim.ListRoutesResponse0"
  "\001\022\\\n\007ListUes\022&.onos.ransim.trafficsim.Li"
  "stUesRequest\032\'.onos.ransim.trafficsim.Li"
  "stUesResponse0\001\022_\n\010WatchUes\022\'.onos.ransi"
  "m.trafficsim.WatchUesRequest\032(.onos.rans"
  "im.trafficsim.WatchUesResponse0\001\022i\n\014SetN"
  "umberUEs\022+.onos.ransim.trafficsim.SetNum"
  "berUEsRequest\032,.onos.ransim.trafficsim.S"
  "etNumberUEsResponse\022`\n\014ResetMetrics\022\'.on"
  "os.ransim.trafficsim.ResetMetricsMsg\032\'.o"
  "nos.ransim.trafficsim.ResetMetricsMsgb\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_deps[1] = {
  &::descriptor_table_onos_2fransim_2ftypes_2ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto = {
  false, false, 1405, descriptor_table_protodef_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto, "onos/ransim/trafficsim/trafficsim.proto", 
  &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once, descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto::offsets,
  file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto, file_level_enum_descriptors_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto, file_level_service_descriptors_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter() {
  return &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto(&descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto);
namespace onos {
namespace ransim {
namespace trafficsim {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto);
  return file_level_enum_descriptors_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[0];
}
bool Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UpdateType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto);
  return file_level_enum_descriptors_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[1];
}
bool UpdateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class MapLayoutRequest::_Internal {
 public:
};

MapLayoutRequest::MapLayoutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.MapLayoutRequest)
}
MapLayoutRequest::MapLayoutRequest(const MapLayoutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.MapLayoutRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MapLayoutRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MapLayoutRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MapLayoutRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[0]);
}

// ===================================================================

class ListRoutesRequest::_Internal {
 public:
};

ListRoutesRequest::ListRoutesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.ListRoutesRequest)
}
ListRoutesRequest::ListRoutesRequest(const ListRoutesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&no_replay_, &from.no_replay_,
    static_cast<size_t>(reinterpret_cast<char*>(&no_subscribe_) -
    reinterpret_cast<char*>(&no_replay_)) + sizeof(no_subscribe_));
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.ListRoutesRequest)
}

inline void ListRoutesRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&no_replay_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&no_subscribe_) -
    reinterpret_cast<char*>(&no_replay_)) + sizeof(no_subscribe_));
}

ListRoutesRequest::~ListRoutesRequest() {
  // @@protoc_insertion_point(destructor:onos.ransim.trafficsim.ListRoutesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRoutesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListRoutesRequest::ArenaDtor(void* object) {
  ListRoutesRequest* _this = reinterpret_cast< ListRoutesRequest* >(object);
  (void)_this;
}
void ListRoutesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRoutesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRoutesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.ransim.trafficsim.ListRoutesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&no_replay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&no_subscribe_) -
      reinterpret_cast<char*>(&no_replay_)) + sizeof(no_subscribe_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRoutesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool no_replay = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          no_replay_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool no_subscribe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          no_subscribe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRoutesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.ransim.trafficsim.ListRoutesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool no_replay = 1;
  if (this->_internal_no_replay() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_no_replay(), target);
  }

  // bool no_subscribe = 2;
  if (this->_internal_no_subscribe() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_no_subscribe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.ransim.trafficsim.ListRoutesRequest)
  return target;
}

size_t ListRoutesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.ransim.trafficsim.ListRoutesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool no_replay = 1;
  if (this->_internal_no_replay() != 0) {
    total_size += 1 + 1;
  }

  // bool no_subscribe = 2;
  if (this->_internal_no_subscribe() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRoutesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRoutesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRoutesRequest::GetClassData() const { return &_class_data_; }

void ListRoutesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRoutesRequest *>(to)->MergeFrom(
      static_cast<const ListRoutesRequest &>(from));
}


void ListRoutesRequest::MergeFrom(const ListRoutesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.ransim.trafficsim.ListRoutesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_no_replay() != 0) {
    _internal_set_no_replay(from._internal_no_replay());
  }
  if (from._internal_no_subscribe() != 0) {
    _internal_set_no_subscribe(from._internal_no_subscribe());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRoutesRequest::CopyFrom(const ListRoutesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.ransim.trafficsim.ListRoutesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRoutesRequest::IsInitialized() const {
  return true;
}

void ListRoutesRequest::InternalSwap(ListRoutesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListRoutesRequest, no_subscribe_)
      + sizeof(ListRoutesRequest::no_subscribe_)
      - PROTOBUF_FIELD_OFFSET(ListRoutesRequest, no_replay_)>(
          reinterpret_cast<char*>(&no_replay_),
          reinterpret_cast<char*>(&other->no_replay_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRoutesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[1]);
}

// ===================================================================

class ListRoutesResponse::_Internal {
 public:
  static const ::onos::ransim::types::Route& route(const ListRoutesResponse* msg);
};

const ::onos::ransim::types::Route&
ListRoutesResponse::_Internal::route(const ListRoutesResponse* msg) {
  return *msg->route_;
}
void ListRoutesResponse::clear_route() {
  if (GetArenaForAllocation() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
}
ListRoutesResponse::ListRoutesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.ListRoutesResponse)
}
ListRoutesResponse::ListRoutesResponse(const ListRoutesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_route()) {
    route_ = new ::onos::ransim::types::Route(*from.route_);
  } else {
    route_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.ListRoutesResponse)
}

inline void ListRoutesResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&route_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&route_)) + sizeof(type_));
}

ListRoutesResponse::~ListRoutesResponse() {
  // @@protoc_insertion_point(destructor:onos.ransim.trafficsim.ListRoutesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRoutesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete route_;
}

void ListRoutesResponse::ArenaDtor(void* object) {
  ListRoutesResponse* _this = reinterpret_cast< ListRoutesResponse* >(object);
  (void)_this;
}
void ListRoutesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRoutesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRoutesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.ransim.trafficsim.ListRoutesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && route_ != nullptr) {
    delete route_;
  }
  route_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRoutesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.ransim.types.Route route = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_route(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.ransim.trafficsim.Type type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::ransim::trafficsim::Type>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRoutesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.ransim.trafficsim.ListRoutesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.ransim.types.Route route = 1;
  if (this->_internal_has_route()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::route(this), target, stream);
  }

  // .onos.ransim.trafficsim.Type type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.ransim.trafficsim.ListRoutesResponse)
  return target;
}

size_t ListRoutesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.ransim.trafficsim.ListRoutesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.ransim.types.Route route = 1;
  if (this->_internal_has_route()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *route_);
  }

  // .onos.ransim.trafficsim.Type type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRoutesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRoutesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRoutesResponse::GetClassData() const { return &_class_data_; }

void ListRoutesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRoutesResponse *>(to)->MergeFrom(
      static_cast<const ListRoutesResponse &>(from));
}


void ListRoutesResponse::MergeFrom(const ListRoutesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.ransim.trafficsim.ListRoutesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_route()) {
    _internal_mutable_route()->::onos::ransim::types::Route::MergeFrom(from._internal_route());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRoutesResponse::CopyFrom(const ListRoutesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.ransim.trafficsim.ListRoutesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRoutesResponse::IsInitialized() const {
  return true;
}

void ListRoutesResponse::InternalSwap(ListRoutesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListRoutesResponse, type_)
      + sizeof(ListRoutesResponse::type_)
      - PROTOBUF_FIELD_OFFSET(ListRoutesResponse, route_)>(
          reinterpret_cast<char*>(&route_),
          reinterpret_cast<char*>(&other->route_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRoutesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[2]);
}

// ===================================================================

class ListUesRequest::_Internal {
 public:
};

ListUesRequest::ListUesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.ListUesRequest)
}
ListUesRequest::ListUesRequest(const ListUesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.ListUesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListUesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListUesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListUesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[3]);
}

// ===================================================================

class ListUesResponse::_Internal {
 public:
  static const ::onos::ransim::types::Ue& ue(const ListUesResponse* msg);
};

const ::onos::ransim::types::Ue&
ListUesResponse::_Internal::ue(const ListUesResponse* msg) {
  return *msg->ue_;
}
void ListUesResponse::clear_ue() {
  if (GetArenaForAllocation() == nullptr && ue_ != nullptr) {
    delete ue_;
  }
  ue_ = nullptr;
}
ListUesResponse::ListUesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.ListUesResponse)
}
ListUesResponse::ListUesResponse(const ListUesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ue()) {
    ue_ = new ::onos::ransim::types::Ue(*from.ue_);
  } else {
    ue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.ListUesResponse)
}

inline void ListUesResponse::SharedCtor() {
ue_ = nullptr;
}

ListUesResponse::~ListUesResponse() {
  // @@protoc_insertion_point(destructor:onos.ransim.trafficsim.ListUesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListUesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete ue_;
}

void ListUesResponse::ArenaDtor(void* object) {
  ListUesResponse* _this = reinterpret_cast< ListUesResponse* >(object);
  (void)_this;
}
void ListUesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListUesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListUesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.ransim.trafficsim.ListUesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && ue_ != nullptr) {
    delete ue_;
  }
  ue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListUesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.ransim.types.Ue ue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListUesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.ransim.trafficsim.ListUesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.ransim.types.Ue ue = 1;
  if (this->_internal_has_ue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.ransim.trafficsim.ListUesResponse)
  return target;
}

size_t ListUesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.ransim.trafficsim.ListUesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.ransim.types.Ue ue = 1;
  if (this->_internal_has_ue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ue_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListUesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListUesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListUesResponse::GetClassData() const { return &_class_data_; }

void ListUesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListUesResponse *>(to)->MergeFrom(
      static_cast<const ListUesResponse &>(from));
}


void ListUesResponse::MergeFrom(const ListUesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.ransim.trafficsim.ListUesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_ue()) {
    _internal_mutable_ue()->::onos::ransim::types::Ue::MergeFrom(from._internal_ue());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListUesResponse::CopyFrom(const ListUesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.ransim.trafficsim.ListUesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListUesResponse::IsInitialized() const {
  return true;
}

void ListUesResponse::InternalSwap(ListUesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ue_, other->ue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListUesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[4]);
}

// ===================================================================

class WatchUesRequest::_Internal {
 public:
};

WatchUesRequest::WatchUesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.WatchUesRequest)
}
WatchUesRequest::WatchUesRequest(const WatchUesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&no_replay_, &from.no_replay_,
    static_cast<size_t>(reinterpret_cast<char*>(&no_subscribe_) -
    reinterpret_cast<char*>(&no_replay_)) + sizeof(no_subscribe_));
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.WatchUesRequest)
}

inline void WatchUesRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&no_replay_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&no_subscribe_) -
    reinterpret_cast<char*>(&no_replay_)) + sizeof(no_subscribe_));
}

WatchUesRequest::~WatchUesRequest() {
  // @@protoc_insertion_point(destructor:onos.ransim.trafficsim.WatchUesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchUesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void WatchUesRequest::ArenaDtor(void* object) {
  WatchUesRequest* _this = reinterpret_cast< WatchUesRequest* >(object);
  (void)_this;
}
void WatchUesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchUesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchUesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.ransim.trafficsim.WatchUesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&no_replay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&no_subscribe_) -
      reinterpret_cast<char*>(&no_replay_)) + sizeof(no_subscribe_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchUesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool no_replay = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          no_replay_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool no_subscribe = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          no_subscribe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchUesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.ransim.trafficsim.WatchUesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool no_replay = 1;
  if (this->_internal_no_replay() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_no_replay(), target);
  }

  // bool no_subscribe = 2;
  if (this->_internal_no_subscribe() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_no_subscribe(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.ransim.trafficsim.WatchUesRequest)
  return target;
}

size_t WatchUesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.ransim.trafficsim.WatchUesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool no_replay = 1;
  if (this->_internal_no_replay() != 0) {
    total_size += 1 + 1;
  }

  // bool no_subscribe = 2;
  if (this->_internal_no_subscribe() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchUesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchUesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchUesRequest::GetClassData() const { return &_class_data_; }

void WatchUesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchUesRequest *>(to)->MergeFrom(
      static_cast<const WatchUesRequest &>(from));
}


void WatchUesRequest::MergeFrom(const WatchUesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.ransim.trafficsim.WatchUesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_no_replay() != 0) {
    _internal_set_no_replay(from._internal_no_replay());
  }
  if (from._internal_no_subscribe() != 0) {
    _internal_set_no_subscribe(from._internal_no_subscribe());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchUesRequest::CopyFrom(const WatchUesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.ransim.trafficsim.WatchUesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchUesRequest::IsInitialized() const {
  return true;
}

void WatchUesRequest::InternalSwap(WatchUesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WatchUesRequest, no_subscribe_)
      + sizeof(WatchUesRequest::no_subscribe_)
      - PROTOBUF_FIELD_OFFSET(WatchUesRequest, no_replay_)>(
          reinterpret_cast<char*>(&no_replay_),
          reinterpret_cast<char*>(&other->no_replay_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchUesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[5]);
}

// ===================================================================

class WatchUesResponse::_Internal {
 public:
  static const ::onos::ransim::types::Ue& ue(const WatchUesResponse* msg);
};

const ::onos::ransim::types::Ue&
WatchUesResponse::_Internal::ue(const WatchUesResponse* msg) {
  return *msg->ue_;
}
void WatchUesResponse::clear_ue() {
  if (GetArenaForAllocation() == nullptr && ue_ != nullptr) {
    delete ue_;
  }
  ue_ = nullptr;
}
WatchUesResponse::WatchUesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.WatchUesResponse)
}
WatchUesResponse::WatchUesResponse(const WatchUesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ue()) {
    ue_ = new ::onos::ransim::types::Ue(*from.ue_);
  } else {
    ue_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_type_) -
    reinterpret_cast<char*>(&type_)) + sizeof(update_type_));
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.WatchUesResponse)
}

inline void WatchUesResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ue_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_type_) -
    reinterpret_cast<char*>(&ue_)) + sizeof(update_type_));
}

WatchUesResponse::~WatchUesResponse() {
  // @@protoc_insertion_point(destructor:onos.ransim.trafficsim.WatchUesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchUesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete ue_;
}

void WatchUesResponse::ArenaDtor(void* object) {
  WatchUesResponse* _this = reinterpret_cast< WatchUesResponse* >(object);
  (void)_this;
}
void WatchUesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchUesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchUesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.ransim.trafficsim.WatchUesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && ue_ != nullptr) {
    delete ue_;
  }
  ue_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_type_) -
      reinterpret_cast<char*>(&type_)) + sizeof(update_type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchUesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.ransim.types.Ue ue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ue(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.ransim.trafficsim.Type type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::ransim::trafficsim::Type>(val));
        } else
          goto handle_unusual;
        continue;
      // .onos.ransim.trafficsim.UpdateType update_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_update_type(static_cast<::onos::ransim::trafficsim::UpdateType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchUesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.ransim.trafficsim.WatchUesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.ransim.types.Ue ue = 1;
  if (this->_internal_has_ue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ue(this), target, stream);
  }

  // .onos.ransim.trafficsim.Type type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // .onos.ransim.trafficsim.UpdateType update_type = 3;
  if (this->_internal_update_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_update_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.ransim.trafficsim.WatchUesResponse)
  return target;
}

size_t WatchUesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.ransim.trafficsim.WatchUesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.ransim.types.Ue ue = 1;
  if (this->_internal_has_ue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ue_);
  }

  // .onos.ransim.trafficsim.Type type = 2;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .onos.ransim.trafficsim.UpdateType update_type = 3;
  if (this->_internal_update_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_update_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchUesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchUesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchUesResponse::GetClassData() const { return &_class_data_; }

void WatchUesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchUesResponse *>(to)->MergeFrom(
      static_cast<const WatchUesResponse &>(from));
}


void WatchUesResponse::MergeFrom(const WatchUesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.ransim.trafficsim.WatchUesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_ue()) {
    _internal_mutable_ue()->::onos::ransim::types::Ue::MergeFrom(from._internal_ue());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_update_type() != 0) {
    _internal_set_update_type(from._internal_update_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchUesResponse::CopyFrom(const WatchUesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.ransim.trafficsim.WatchUesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchUesResponse::IsInitialized() const {
  return true;
}

void WatchUesResponse::InternalSwap(WatchUesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WatchUesResponse, update_type_)
      + sizeof(WatchUesResponse::update_type_)
      - PROTOBUF_FIELD_OFFSET(WatchUesResponse, ue_)>(
          reinterpret_cast<char*>(&ue_),
          reinterpret_cast<char*>(&other->ue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchUesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[6]);
}

// ===================================================================

class SetNumberUEsRequest::_Internal {
 public:
};

SetNumberUEsRequest::SetNumberUEsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.SetNumberUEsRequest)
}
SetNumberUEsRequest::SetNumberUEsRequest(const SetNumberUEsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.SetNumberUEsRequest)
}

inline void SetNumberUEsRequest::SharedCtor() {
number_ = 0u;
}

SetNumberUEsRequest::~SetNumberUEsRequest() {
  // @@protoc_insertion_point(destructor:onos.ransim.trafficsim.SetNumberUEsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetNumberUEsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetNumberUEsRequest::ArenaDtor(void* object) {
  SetNumberUEsRequest* _this = reinterpret_cast< SetNumberUEsRequest* >(object);
  (void)_this;
}
void SetNumberUEsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetNumberUEsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetNumberUEsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.ransim.trafficsim.SetNumberUEsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  number_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetNumberUEsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetNumberUEsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.ransim.trafficsim.SetNumberUEsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 number = 1;
  if (this->_internal_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.ransim.trafficsim.SetNumberUEsRequest)
  return target;
}

size_t SetNumberUEsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.ransim.trafficsim.SetNumberUEsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 number = 1;
  if (this->_internal_number() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetNumberUEsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetNumberUEsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetNumberUEsRequest::GetClassData() const { return &_class_data_; }

void SetNumberUEsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetNumberUEsRequest *>(to)->MergeFrom(
      static_cast<const SetNumberUEsRequest &>(from));
}


void SetNumberUEsRequest::MergeFrom(const SetNumberUEsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.ransim.trafficsim.SetNumberUEsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_number() != 0) {
    _internal_set_number(from._internal_number());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetNumberUEsRequest::CopyFrom(const SetNumberUEsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.ransim.trafficsim.SetNumberUEsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNumberUEsRequest::IsInitialized() const {
  return true;
}

void SetNumberUEsRequest::InternalSwap(SetNumberUEsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(number_, other->number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetNumberUEsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[7]);
}

// ===================================================================

class SetNumberUEsResponse::_Internal {
 public:
};

SetNumberUEsResponse::SetNumberUEsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.SetNumberUEsResponse)
}
SetNumberUEsResponse::SetNumberUEsResponse(const SetNumberUEsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  number_ = from.number_;
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.SetNumberUEsResponse)
}

inline void SetNumberUEsResponse::SharedCtor() {
number_ = 0u;
}

SetNumberUEsResponse::~SetNumberUEsResponse() {
  // @@protoc_insertion_point(destructor:onos.ransim.trafficsim.SetNumberUEsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetNumberUEsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetNumberUEsResponse::ArenaDtor(void* object) {
  SetNumberUEsResponse* _this = reinterpret_cast< SetNumberUEsResponse* >(object);
  (void)_this;
}
void SetNumberUEsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetNumberUEsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetNumberUEsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.ransim.trafficsim.SetNumberUEsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  number_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetNumberUEsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetNumberUEsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.ransim.trafficsim.SetNumberUEsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 number = 1;
  if (this->_internal_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.ransim.trafficsim.SetNumberUEsResponse)
  return target;
}

size_t SetNumberUEsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.ransim.trafficsim.SetNumberUEsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 number = 1;
  if (this->_internal_number() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetNumberUEsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetNumberUEsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetNumberUEsResponse::GetClassData() const { return &_class_data_; }

void SetNumberUEsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetNumberUEsResponse *>(to)->MergeFrom(
      static_cast<const SetNumberUEsResponse &>(from));
}


void SetNumberUEsResponse::MergeFrom(const SetNumberUEsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.ransim.trafficsim.SetNumberUEsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_number() != 0) {
    _internal_set_number(from._internal_number());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetNumberUEsResponse::CopyFrom(const SetNumberUEsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.ransim.trafficsim.SetNumberUEsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetNumberUEsResponse::IsInitialized() const {
  return true;
}

void SetNumberUEsResponse::InternalSwap(SetNumberUEsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(number_, other->number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetNumberUEsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[8]);
}

// ===================================================================

class ResetMetricsMsg::_Internal {
 public:
};

ResetMetricsMsg::ResetMetricsMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.ransim.trafficsim.ResetMetricsMsg)
}
ResetMetricsMsg::ResetMetricsMsg(const ResetMetricsMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.ransim.trafficsim.ResetMetricsMsg)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResetMetricsMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResetMetricsMsg::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ResetMetricsMsg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_getter, &descriptor_table_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto_once,
      file_level_metadata_onos_2fransim_2ftrafficsim_2ftrafficsim_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace trafficsim
}  // namespace ransim
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::MapLayoutRequest* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::MapLayoutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::MapLayoutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::ListRoutesRequest* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::ListRoutesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::ListRoutesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::ListRoutesResponse* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::ListRoutesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::ListRoutesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::ListUesRequest* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::ListUesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::ListUesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::ListUesResponse* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::ListUesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::ListUesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::WatchUesRequest* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::WatchUesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::WatchUesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::WatchUesResponse* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::WatchUesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::WatchUesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::SetNumberUEsRequest* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::SetNumberUEsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::SetNumberUEsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::SetNumberUEsResponse* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::SetNumberUEsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::SetNumberUEsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::ransim::trafficsim::ResetMetricsMsg* Arena::CreateMaybeMessage< ::onos::ransim::trafficsim::ResetMetricsMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::ransim::trafficsim::ResetMetricsMsg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
