// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/ransim/trafficsim/trafficsim.proto

#include "onos/ransim/trafficsim/trafficsim.pb.h"
#include "onos/ransim/trafficsim/trafficsim.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace onos {
namespace ransim {
namespace trafficsim {

static const char* Traffic_method_names[] = {
  "/onos.ransim.trafficsim.Traffic/GetMapLayout",
  "/onos.ransim.trafficsim.Traffic/ListRoutes",
  "/onos.ransim.trafficsim.Traffic/ListUes",
  "/onos.ransim.trafficsim.Traffic/WatchUes",
  "/onos.ransim.trafficsim.Traffic/SetNumberUEs",
  "/onos.ransim.trafficsim.Traffic/ResetMetrics",
};

std::unique_ptr< Traffic::Stub> Traffic::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Traffic::Stub> stub(new Traffic::Stub(channel, options));
  return stub;
}

Traffic::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_GetMapLayout_(Traffic_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListRoutes_(Traffic_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_ListUes_(Traffic_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_WatchUes_(Traffic_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_SetNumberUEs_(Traffic_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ResetMetrics_(Traffic_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Traffic::Stub::GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::onos::ransim::types::MapLayout* response) {
  return ::grpc::internal::BlockingUnaryCall< ::onos::ransim::trafficsim::MapLayoutRequest, ::onos::ransim::types::MapLayout, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetMapLayout_, context, request, response);
}

void Traffic::Stub::async::GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::onos::ransim::trafficsim::MapLayoutRequest, ::onos::ransim::types::MapLayout, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMapLayout_, context, request, response, std::move(f));
}

void Traffic::Stub::async::GetMapLayout(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetMapLayout_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::onos::ransim::types::MapLayout>* Traffic::Stub::PrepareAsyncGetMapLayoutRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::onos::ransim::types::MapLayout, ::onos::ransim::trafficsim::MapLayoutRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetMapLayout_, context, request);
}

::grpc::ClientAsyncResponseReader< ::onos::ransim::types::MapLayout>* Traffic::Stub::AsyncGetMapLayoutRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetMapLayoutRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::ClientReader< ::onos::ransim::trafficsim::ListRoutesResponse>* Traffic::Stub::ListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::onos::ransim::trafficsim::ListRoutesResponse>::Create(channel_.get(), rpcmethod_ListRoutes_, context, request);
}

void Traffic::Stub::async::ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::ListRoutesResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::onos::ransim::trafficsim::ListRoutesResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_ListRoutes_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListRoutesResponse>* Traffic::Stub::AsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::onos::ransim::trafficsim::ListRoutesResponse>::Create(channel_.get(), cq, rpcmethod_ListRoutes_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListRoutesResponse>* Traffic::Stub::PrepareAsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::onos::ransim::trafficsim::ListRoutesResponse>::Create(channel_.get(), cq, rpcmethod_ListRoutes_, context, request, false, nullptr);
}

::grpc::ClientReader< ::onos::ransim::trafficsim::ListUesResponse>* Traffic::Stub::ListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::onos::ransim::trafficsim::ListUesResponse>::Create(channel_.get(), rpcmethod_ListUes_, context, request);
}

void Traffic::Stub::async::ListUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::ListUesResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::onos::ransim::trafficsim::ListUesResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_ListUes_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListUesResponse>* Traffic::Stub::AsyncListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::onos::ransim::trafficsim::ListUesResponse>::Create(channel_.get(), cq, rpcmethod_ListUes_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::ListUesResponse>* Traffic::Stub::PrepareAsyncListUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ListUesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::onos::ransim::trafficsim::ListUesResponse>::Create(channel_.get(), cq, rpcmethod_ListUes_, context, request, false, nullptr);
}

::grpc::ClientReader< ::onos::ransim::trafficsim::WatchUesResponse>* Traffic::Stub::WatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request) {
  return ::grpc::internal::ClientReaderFactory< ::onos::ransim::trafficsim::WatchUesResponse>::Create(channel_.get(), rpcmethod_WatchUes_, context, request);
}

void Traffic::Stub::async::WatchUes(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::trafficsim::WatchUesResponse>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::onos::ransim::trafficsim::WatchUesResponse>::Create(stub_->channel_.get(), stub_->rpcmethod_WatchUes_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::WatchUesResponse>* Traffic::Stub::AsyncWatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::onos::ransim::trafficsim::WatchUesResponse>::Create(channel_.get(), cq, rpcmethod_WatchUes_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::onos::ransim::trafficsim::WatchUesResponse>* Traffic::Stub::PrepareAsyncWatchUesRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::WatchUesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::onos::ransim::trafficsim::WatchUesResponse>::Create(channel_.get(), cq, rpcmethod_WatchUes_, context, request, false, nullptr);
}

::grpc::Status Traffic::Stub::SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::onos::ransim::trafficsim::SetNumberUEsRequest, ::onos::ransim::trafficsim::SetNumberUEsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_SetNumberUEs_, context, request, response);
}

void Traffic::Stub::async::SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::onos::ransim::trafficsim::SetNumberUEsRequest, ::onos::ransim::trafficsim::SetNumberUEsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SetNumberUEs_, context, request, response, std::move(f));
}

void Traffic::Stub::async::SetNumberUEs(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_SetNumberUEs_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::SetNumberUEsResponse>* Traffic::Stub::PrepareAsyncSetNumberUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::onos::ransim::trafficsim::SetNumberUEsResponse, ::onos::ransim::trafficsim::SetNumberUEsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_SetNumberUEs_, context, request);
}

::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::SetNumberUEsResponse>* Traffic::Stub::AsyncSetNumberUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncSetNumberUEsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Traffic::Stub::ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::onos::ransim::trafficsim::ResetMetricsMsg* response) {
  return ::grpc::internal::BlockingUnaryCall< ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ResetMetrics_, context, request, response);
}

void Traffic::Stub::async::ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ResetMetrics_, context, request, response, std::move(f));
}

void Traffic::Stub::async::ResetMetrics(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ResetMetrics_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::ResetMetricsMsg>* Traffic::Stub::PrepareAsyncResetMetricsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ResetMetrics_, context, request);
}

::grpc::ClientAsyncResponseReader< ::onos::ransim::trafficsim::ResetMetricsMsg>* Traffic::Stub::AsyncResetMetricsRaw(::grpc::ClientContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncResetMetricsRaw(context, request, cq);
  result->StartCall();
  return result;
}

Traffic::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Traffic_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Traffic::Service, ::onos::ransim::trafficsim::MapLayoutRequest, ::onos::ransim::types::MapLayout, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Traffic::Service* service,
             ::grpc::ServerContext* ctx,
             const ::onos::ransim::trafficsim::MapLayoutRequest* req,
             ::onos::ransim::types::MapLayout* resp) {
               return service->GetMapLayout(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Traffic_method_names[1],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< Traffic::Service, ::onos::ransim::trafficsim::ListRoutesRequest, ::onos::ransim::trafficsim::ListRoutesResponse>(
          [](Traffic::Service* service,
             ::grpc::ServerContext* ctx,
             const ::onos::ransim::trafficsim::ListRoutesRequest* req,
             ::grpc::ServerWriter<::onos::ransim::trafficsim::ListRoutesResponse>* writer) {
               return service->ListRoutes(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Traffic_method_names[2],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< Traffic::Service, ::onos::ransim::trafficsim::ListUesRequest, ::onos::ransim::trafficsim::ListUesResponse>(
          [](Traffic::Service* service,
             ::grpc::ServerContext* ctx,
             const ::onos::ransim::trafficsim::ListUesRequest* req,
             ::grpc::ServerWriter<::onos::ransim::trafficsim::ListUesResponse>* writer) {
               return service->ListUes(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Traffic_method_names[3],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< Traffic::Service, ::onos::ransim::trafficsim::WatchUesRequest, ::onos::ransim::trafficsim::WatchUesResponse>(
          [](Traffic::Service* service,
             ::grpc::ServerContext* ctx,
             const ::onos::ransim::trafficsim::WatchUesRequest* req,
             ::grpc::ServerWriter<::onos::ransim::trafficsim::WatchUesResponse>* writer) {
               return service->WatchUes(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Traffic_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Traffic::Service, ::onos::ransim::trafficsim::SetNumberUEsRequest, ::onos::ransim::trafficsim::SetNumberUEsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Traffic::Service* service,
             ::grpc::ServerContext* ctx,
             const ::onos::ransim::trafficsim::SetNumberUEsRequest* req,
             ::onos::ransim::trafficsim::SetNumberUEsResponse* resp) {
               return service->SetNumberUEs(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Traffic_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Traffic::Service, ::onos::ransim::trafficsim::ResetMetricsMsg, ::onos::ransim::trafficsim::ResetMetricsMsg, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Traffic::Service* service,
             ::grpc::ServerContext* ctx,
             const ::onos::ransim::trafficsim::ResetMetricsMsg* req,
             ::onos::ransim::trafficsim::ResetMetricsMsg* resp) {
               return service->ResetMetrics(ctx, req, resp);
             }, this)));
}

Traffic::Service::~Service() {
}

::grpc::Status Traffic::Service::GetMapLayout(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::MapLayoutRequest* request, ::onos::ransim::types::MapLayout* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Traffic::Service::ListRoutes(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::ListRoutesRequest* request, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListRoutesResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Traffic::Service::ListUes(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::ListUesRequest* request, ::grpc::ServerWriter< ::onos::ransim::trafficsim::ListUesResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Traffic::Service::WatchUes(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::WatchUesRequest* request, ::grpc::ServerWriter< ::onos::ransim::trafficsim::WatchUesResponse>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Traffic::Service::SetNumberUEs(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::SetNumberUEsRequest* request, ::onos::ransim::trafficsim::SetNumberUEsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Traffic::Service::ResetMetrics(::grpc::ServerContext* context, const ::onos::ransim::trafficsim::ResetMetricsMsg* request, ::onos::ransim::trafficsim::ResetMetricsMsg* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace onos
}  // namespace ransim
}  // namespace trafficsim

