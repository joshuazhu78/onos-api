// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/ransim/model/model.proto
// Original file comments:
// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef GRPC_onos_2fransim_2fmodel_2fmodel_2eproto__INCLUDED
#define GRPC_onos_2fransim_2fmodel_2fmodel_2eproto__INCLUDED

#include "onos/ransim/model/model.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace ransim {
namespace model {

// ModelService provides means to clear and load node and cell model in bulk
class ModelService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.ransim.model.ModelService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Load(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::onos::ransim::model::LoadResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::LoadResponse>> AsyncLoad(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::LoadResponse>>(AsyncLoadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::LoadResponse>> PrepareAsyncLoad(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::LoadResponse>>(PrepareAsyncLoadRaw(context, request, cq));
    }
    virtual ::grpc::Status Clear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::onos::ransim::model::ClearResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::ClearResponse>> AsyncClear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::ClearResponse>>(AsyncClearRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::ClearResponse>> PrepareAsyncClear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::ClearResponse>>(PrepareAsyncClearRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Load(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest* request, ::onos::ransim::model::LoadResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Load(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest* request, ::onos::ransim::model::LoadResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Clear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest* request, ::onos::ransim::model::ClearResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Clear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest* request, ::onos::ransim::model::ClearResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::LoadResponse>* AsyncLoadRaw(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::LoadResponse>* PrepareAsyncLoadRaw(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::ClearResponse>* AsyncClearRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::ClearResponse>* PrepareAsyncClearRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Load(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::onos::ransim::model::LoadResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::LoadResponse>> AsyncLoad(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::LoadResponse>>(AsyncLoadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::LoadResponse>> PrepareAsyncLoad(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::LoadResponse>>(PrepareAsyncLoadRaw(context, request, cq));
    }
    ::grpc::Status Clear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::onos::ransim::model::ClearResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::ClearResponse>> AsyncClear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::ClearResponse>>(AsyncClearRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::ClearResponse>> PrepareAsyncClear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::ClearResponse>>(PrepareAsyncClearRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Load(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest* request, ::onos::ransim::model::LoadResponse* response, std::function<void(::grpc::Status)>) override;
      void Load(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest* request, ::onos::ransim::model::LoadResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Clear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest* request, ::onos::ransim::model::ClearResponse* response, std::function<void(::grpc::Status)>) override;
      void Clear(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest* request, ::onos::ransim::model::ClearResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::LoadResponse>* AsyncLoadRaw(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::LoadResponse>* PrepareAsyncLoadRaw(::grpc::ClientContext* context, const ::onos::ransim::model::LoadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::ClearResponse>* AsyncClearRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::ClearResponse>* PrepareAsyncClearRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ClearRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Load_;
    const ::grpc::internal::RpcMethod rpcmethod_Clear_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Load(::grpc::ServerContext* context, const ::onos::ransim::model::LoadRequest* request, ::onos::ransim::model::LoadResponse* response);
    virtual ::grpc::Status Clear(::grpc::ServerContext* context, const ::onos::ransim::model::ClearRequest* request, ::onos::ransim::model::ClearResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Load : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Load() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Load() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Load(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::LoadRequest* /*request*/, ::onos::ransim::model::LoadResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoad(::grpc::ServerContext* context, ::onos::ransim::model::LoadRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::LoadResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Clear() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Clear(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ClearRequest* /*request*/, ::onos::ransim::model::ClearResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClear(::grpc::ServerContext* context, ::onos::ransim::model::ClearRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::ClearResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Load<WithAsyncMethod_Clear<Service > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Load : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Load() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::LoadRequest, ::onos::ransim::model::LoadResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::LoadRequest* request, ::onos::ransim::model::LoadResponse* response) { return this->Load(context, request, response); }));}
    void SetMessageAllocatorFor_Load(
        ::grpc::MessageAllocator< ::onos::ransim::model::LoadRequest, ::onos::ransim::model::LoadResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::LoadRequest, ::onos::ransim::model::LoadResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Load() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Load(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::LoadRequest* /*request*/, ::onos::ransim::model::LoadResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Load(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::LoadRequest* /*request*/, ::onos::ransim::model::LoadResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Clear() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::ClearRequest, ::onos::ransim::model::ClearResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::ClearRequest* request, ::onos::ransim::model::ClearResponse* response) { return this->Clear(context, request, response); }));}
    void SetMessageAllocatorFor_Clear(
        ::grpc::MessageAllocator< ::onos::ransim::model::ClearRequest, ::onos::ransim::model::ClearResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::ClearRequest, ::onos::ransim::model::ClearResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Clear(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ClearRequest* /*request*/, ::onos::ransim::model::ClearResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Clear(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::ClearRequest* /*request*/, ::onos::ransim::model::ClearResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Load<WithCallbackMethod_Clear<Service > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Load : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Load() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Load() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Load(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::LoadRequest* /*request*/, ::onos::ransim::model::LoadResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Clear() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Clear(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ClearRequest* /*request*/, ::onos::ransim::model::ClearResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Load : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Load() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Load() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Load(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::LoadRequest* /*request*/, ::onos::ransim::model::LoadResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoad(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Clear() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Clear(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ClearRequest* /*request*/, ::onos::ransim::model::ClearResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClear(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Load : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Load() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Load(context, request, response); }));
    }
    ~WithRawCallbackMethod_Load() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Load(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::LoadRequest* /*request*/, ::onos::ransim::model::LoadResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Load(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Clear() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Clear(context, request, response); }));
    }
    ~WithRawCallbackMethod_Clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Clear(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ClearRequest* /*request*/, ::onos::ransim::model::ClearResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Clear(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Load : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Load() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::LoadRequest, ::onos::ransim::model::LoadResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::LoadRequest, ::onos::ransim::model::LoadResponse>* streamer) {
                       return this->StreamedLoad(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Load() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Load(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::LoadRequest* /*request*/, ::onos::ransim::model::LoadResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLoad(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::LoadRequest,::onos::ransim::model::LoadResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Clear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Clear() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::ClearRequest, ::onos::ransim::model::ClearResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::ClearRequest, ::onos::ransim::model::ClearResponse>* streamer) {
                       return this->StreamedClear(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Clear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Clear(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ClearRequest* /*request*/, ::onos::ransim::model::ClearResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClear(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::ClearRequest,::onos::ransim::model::ClearResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Load<WithStreamedUnaryMethod_Clear<Service > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Load<WithStreamedUnaryMethod_Clear<Service > > StreamedService;
};

// NodeModel provides means to create, delete and read simulated RAN nodes.
class NodeModel final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.ransim.model.NodeModel";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::onos::ransim::model::PlmnIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::PlmnIDResponse>> AsyncGetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::PlmnIDResponse>>(AsyncGetPlmnIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::PlmnIDResponse>> PrepareAsyncGetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::PlmnIDResponse>>(PrepareAsyncGetPlmnIDRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::onos::ransim::model::CreateNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateNodeResponse>> AsyncCreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateNodeResponse>>(AsyncCreateNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateNodeResponse>> PrepareAsyncCreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateNodeResponse>>(PrepareAsyncCreateNodeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::onos::ransim::model::GetNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetNodeResponse>> AsyncGetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetNodeResponse>>(AsyncGetNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetNodeResponse>> PrepareAsyncGetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetNodeResponse>>(PrepareAsyncGetNodeRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::onos::ransim::model::UpdateNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateNodeResponse>> AsyncUpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateNodeResponse>>(AsyncUpdateNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateNodeResponse>> PrepareAsyncUpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateNodeResponse>>(PrepareAsyncUpdateNodeRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::onos::ransim::model::DeleteNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteNodeResponse>> AsyncDeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteNodeResponse>>(AsyncDeleteNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteNodeResponse>> PrepareAsyncDeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteNodeResponse>>(PrepareAsyncDeleteNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchNodesResponse>> WatchNodes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchNodesResponse>>(WatchNodesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchNodesResponse>> AsyncWatchNodes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchNodesResponse>>(AsyncWatchNodesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchNodesResponse>> PrepareAsyncWatchNodes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchNodesResponse>>(PrepareAsyncWatchNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::ListNodesResponse>> ListNodes(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::ListNodesResponse>>(ListNodesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListNodesResponse>> AsyncListNodes(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListNodesResponse>>(AsyncListNodesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListNodesResponse>> PrepareAsyncListNodes(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListNodesResponse>>(PrepareAsyncListNodesRaw(context, request, cq));
    }
    virtual ::grpc::Status AgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::onos::ransim::model::AgentControlResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::AgentControlResponse>> AsyncAgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::AgentControlResponse>>(AsyncAgentControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::AgentControlResponse>> PrepareAsyncAgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::AgentControlResponse>>(PrepareAsyncAgentControlRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest* request, ::onos::ransim::model::PlmnIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest* request, ::onos::ransim::model::PlmnIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest* request, ::onos::ransim::model::CreateNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest* request, ::onos::ransim::model::CreateNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest* request, ::onos::ransim::model::GetNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest* request, ::onos::ransim::model::GetNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest* request, ::onos::ransim::model::UpdateNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest* request, ::onos::ransim::model::UpdateNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest* request, ::onos::ransim::model::DeleteNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest* request, ::onos::ransim::model::DeleteNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WatchNodes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::WatchNodesResponse>* reactor) = 0;
      virtual void ListNodes(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::ListNodesResponse>* reactor) = 0;
      virtual void AgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest* request, ::onos::ransim::model::AgentControlResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest* request, ::onos::ransim::model::AgentControlResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::PlmnIDResponse>* AsyncGetPlmnIDRaw(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::PlmnIDResponse>* PrepareAsyncGetPlmnIDRaw(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateNodeResponse>* AsyncCreateNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateNodeResponse>* PrepareAsyncCreateNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetNodeResponse>* AsyncGetNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetNodeResponse>* PrepareAsyncGetNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateNodeResponse>* AsyncUpdateNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateNodeResponse>* PrepareAsyncUpdateNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteNodeResponse>* AsyncDeleteNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteNodeResponse>* PrepareAsyncDeleteNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchNodesResponse>* WatchNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchNodesResponse>* AsyncWatchNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchNodesResponse>* PrepareAsyncWatchNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::model::ListNodesResponse>* ListNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListNodesResponse>* AsyncListNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListNodesResponse>* PrepareAsyncListNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::AgentControlResponse>* AsyncAgentControlRaw(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::AgentControlResponse>* PrepareAsyncAgentControlRaw(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::onos::ransim::model::PlmnIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::PlmnIDResponse>> AsyncGetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::PlmnIDResponse>>(AsyncGetPlmnIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::PlmnIDResponse>> PrepareAsyncGetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::PlmnIDResponse>>(PrepareAsyncGetPlmnIDRaw(context, request, cq));
    }
    ::grpc::Status CreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::onos::ransim::model::CreateNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateNodeResponse>> AsyncCreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateNodeResponse>>(AsyncCreateNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateNodeResponse>> PrepareAsyncCreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateNodeResponse>>(PrepareAsyncCreateNodeRaw(context, request, cq));
    }
    ::grpc::Status GetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::onos::ransim::model::GetNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetNodeResponse>> AsyncGetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetNodeResponse>>(AsyncGetNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetNodeResponse>> PrepareAsyncGetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetNodeResponse>>(PrepareAsyncGetNodeRaw(context, request, cq));
    }
    ::grpc::Status UpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::onos::ransim::model::UpdateNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateNodeResponse>> AsyncUpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateNodeResponse>>(AsyncUpdateNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateNodeResponse>> PrepareAsyncUpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateNodeResponse>>(PrepareAsyncUpdateNodeRaw(context, request, cq));
    }
    ::grpc::Status DeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::onos::ransim::model::DeleteNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteNodeResponse>> AsyncDeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteNodeResponse>>(AsyncDeleteNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteNodeResponse>> PrepareAsyncDeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteNodeResponse>>(PrepareAsyncDeleteNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::WatchNodesResponse>> WatchNodes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::WatchNodesResponse>>(WatchNodesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchNodesResponse>> AsyncWatchNodes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchNodesResponse>>(AsyncWatchNodesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchNodesResponse>> PrepareAsyncWatchNodes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchNodesResponse>>(PrepareAsyncWatchNodesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::ListNodesResponse>> ListNodes(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::ListNodesResponse>>(ListNodesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListNodesResponse>> AsyncListNodes(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListNodesResponse>>(AsyncListNodesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListNodesResponse>> PrepareAsyncListNodes(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListNodesResponse>>(PrepareAsyncListNodesRaw(context, request, cq));
    }
    ::grpc::Status AgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::onos::ransim::model::AgentControlResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::AgentControlResponse>> AsyncAgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::AgentControlResponse>>(AsyncAgentControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::AgentControlResponse>> PrepareAsyncAgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::AgentControlResponse>>(PrepareAsyncAgentControlRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest* request, ::onos::ransim::model::PlmnIDResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPlmnID(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest* request, ::onos::ransim::model::PlmnIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest* request, ::onos::ransim::model::CreateNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateNode(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest* request, ::onos::ransim::model::CreateNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest* request, ::onos::ransim::model::GetNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetNode(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest* request, ::onos::ransim::model::GetNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest* request, ::onos::ransim::model::UpdateNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateNode(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest* request, ::onos::ransim::model::UpdateNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest* request, ::onos::ransim::model::DeleteNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteNode(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest* request, ::onos::ransim::model::DeleteNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WatchNodes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::WatchNodesResponse>* reactor) override;
      void ListNodes(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::ListNodesResponse>* reactor) override;
      void AgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest* request, ::onos::ransim::model::AgentControlResponse* response, std::function<void(::grpc::Status)>) override;
      void AgentControl(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest* request, ::onos::ransim::model::AgentControlResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::PlmnIDResponse>* AsyncGetPlmnIDRaw(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::PlmnIDResponse>* PrepareAsyncGetPlmnIDRaw(::grpc::ClientContext* context, const ::onos::ransim::model::PlmnIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateNodeResponse>* AsyncCreateNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateNodeResponse>* PrepareAsyncCreateNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetNodeResponse>* AsyncGetNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetNodeResponse>* PrepareAsyncGetNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateNodeResponse>* AsyncUpdateNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateNodeResponse>* PrepareAsyncUpdateNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteNodeResponse>* AsyncDeleteNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteNodeResponse>* PrepareAsyncDeleteNodeRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::model::WatchNodesResponse>* WatchNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchNodesResponse>* AsyncWatchNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchNodesResponse>* PrepareAsyncWatchNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::model::ListNodesResponse>* ListNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::ListNodesResponse>* AsyncListNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::ListNodesResponse>* PrepareAsyncListNodesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListNodesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::AgentControlResponse>* AsyncAgentControlRaw(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::AgentControlResponse>* PrepareAsyncAgentControlRaw(::grpc::ClientContext* context, const ::onos::ransim::model::AgentControlRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetPlmnID_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateNode_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNode_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateNode_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteNode_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchNodes_;
    const ::grpc::internal::RpcMethod rpcmethod_ListNodes_;
    const ::grpc::internal::RpcMethod rpcmethod_AgentControl_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetPlmnID(::grpc::ServerContext* context, const ::onos::ransim::model::PlmnIDRequest* request, ::onos::ransim::model::PlmnIDResponse* response);
    virtual ::grpc::Status CreateNode(::grpc::ServerContext* context, const ::onos::ransim::model::CreateNodeRequest* request, ::onos::ransim::model::CreateNodeResponse* response);
    virtual ::grpc::Status GetNode(::grpc::ServerContext* context, const ::onos::ransim::model::GetNodeRequest* request, ::onos::ransim::model::GetNodeResponse* response);
    virtual ::grpc::Status UpdateNode(::grpc::ServerContext* context, const ::onos::ransim::model::UpdateNodeRequest* request, ::onos::ransim::model::UpdateNodeResponse* response);
    virtual ::grpc::Status DeleteNode(::grpc::ServerContext* context, const ::onos::ransim::model::DeleteNodeRequest* request, ::onos::ransim::model::DeleteNodeResponse* response);
    virtual ::grpc::Status WatchNodes(::grpc::ServerContext* context, const ::onos::ransim::model::WatchNodesRequest* request, ::grpc::ServerWriter< ::onos::ransim::model::WatchNodesResponse>* writer);
    virtual ::grpc::Status ListNodes(::grpc::ServerContext* context, const ::onos::ransim::model::ListNodesRequest* request, ::grpc::ServerWriter< ::onos::ransim::model::ListNodesResponse>* writer);
    virtual ::grpc::Status AgentControl(::grpc::ServerContext* context, const ::onos::ransim::model::AgentControlRequest* request, ::onos::ransim::model::AgentControlResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPlmnID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPlmnID() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetPlmnID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlmnID(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::PlmnIDRequest* /*request*/, ::onos::ransim::model::PlmnIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPlmnID(::grpc::ServerContext* context, ::onos::ransim::model::PlmnIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::PlmnIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateNode() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateNodeRequest* /*request*/, ::onos::ransim::model::CreateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateNode(::grpc::ServerContext* context, ::onos::ransim::model::CreateNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::CreateNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNode() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetNodeRequest* /*request*/, ::onos::ransim::model::GetNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNode(::grpc::ServerContext* context, ::onos::ransim::model::GetNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::GetNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateNode() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateNodeRequest* /*request*/, ::onos::ransim::model::UpdateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNode(::grpc::ServerContext* context, ::onos::ransim::model::UpdateNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::UpdateNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteNode() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteNodeRequest* /*request*/, ::onos::ransim::model::DeleteNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNode(::grpc::ServerContext* context, ::onos::ransim::model::DeleteNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::DeleteNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchNodes() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_WatchNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchNodes(::grpc::ServerContext* context, ::onos::ransim::model::WatchNodesRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::model::WatchNodesResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListNodes() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ListNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNodes(::grpc::ServerContext* context, ::onos::ransim::model::ListNodesRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::model::ListNodesResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AgentControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AgentControl() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_AgentControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgentControl(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::AgentControlRequest* /*request*/, ::onos::ransim::model::AgentControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAgentControl(::grpc::ServerContext* context, ::onos::ransim::model::AgentControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::AgentControlResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetPlmnID<WithAsyncMethod_CreateNode<WithAsyncMethod_GetNode<WithAsyncMethod_UpdateNode<WithAsyncMethod_DeleteNode<WithAsyncMethod_WatchNodes<WithAsyncMethod_ListNodes<WithAsyncMethod_AgentControl<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetPlmnID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPlmnID() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::PlmnIDRequest, ::onos::ransim::model::PlmnIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::PlmnIDRequest* request, ::onos::ransim::model::PlmnIDResponse* response) { return this->GetPlmnID(context, request, response); }));}
    void SetMessageAllocatorFor_GetPlmnID(
        ::grpc::MessageAllocator< ::onos::ransim::model::PlmnIDRequest, ::onos::ransim::model::PlmnIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::PlmnIDRequest, ::onos::ransim::model::PlmnIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPlmnID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlmnID(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::PlmnIDRequest* /*request*/, ::onos::ransim::model::PlmnIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPlmnID(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::PlmnIDRequest* /*request*/, ::onos::ransim::model::PlmnIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateNode() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::CreateNodeRequest, ::onos::ransim::model::CreateNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::CreateNodeRequest* request, ::onos::ransim::model::CreateNodeResponse* response) { return this->CreateNode(context, request, response); }));}
    void SetMessageAllocatorFor_CreateNode(
        ::grpc::MessageAllocator< ::onos::ransim::model::CreateNodeRequest, ::onos::ransim::model::CreateNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::CreateNodeRequest, ::onos::ransim::model::CreateNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateNodeRequest* /*request*/, ::onos::ransim::model::CreateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateNode(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::CreateNodeRequest* /*request*/, ::onos::ransim::model::CreateNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNode() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetNodeRequest, ::onos::ransim::model::GetNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::GetNodeRequest* request, ::onos::ransim::model::GetNodeResponse* response) { return this->GetNode(context, request, response); }));}
    void SetMessageAllocatorFor_GetNode(
        ::grpc::MessageAllocator< ::onos::ransim::model::GetNodeRequest, ::onos::ransim::model::GetNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetNodeRequest, ::onos::ransim::model::GetNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetNodeRequest* /*request*/, ::onos::ransim::model::GetNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNode(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::GetNodeRequest* /*request*/, ::onos::ransim::model::GetNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateNode() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::UpdateNodeRequest, ::onos::ransim::model::UpdateNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::UpdateNodeRequest* request, ::onos::ransim::model::UpdateNodeResponse* response) { return this->UpdateNode(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateNode(
        ::grpc::MessageAllocator< ::onos::ransim::model::UpdateNodeRequest, ::onos::ransim::model::UpdateNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::UpdateNodeRequest, ::onos::ransim::model::UpdateNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateNodeRequest* /*request*/, ::onos::ransim::model::UpdateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNode(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::UpdateNodeRequest* /*request*/, ::onos::ransim::model::UpdateNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteNode() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::DeleteNodeRequest, ::onos::ransim::model::DeleteNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::DeleteNodeRequest* request, ::onos::ransim::model::DeleteNodeResponse* response) { return this->DeleteNode(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteNode(
        ::grpc::MessageAllocator< ::onos::ransim::model::DeleteNodeRequest, ::onos::ransim::model::DeleteNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::DeleteNodeRequest, ::onos::ransim::model::DeleteNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteNodeRequest* /*request*/, ::onos::ransim::model::DeleteNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteNode(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::DeleteNodeRequest* /*request*/, ::onos::ransim::model::DeleteNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchNodes() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::model::WatchNodesRequest, ::onos::ransim::model::WatchNodesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::WatchNodesRequest* request) { return this->WatchNodes(context, request); }));
    }
    ~WithCallbackMethod_WatchNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::model::WatchNodesResponse>* WatchNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::WatchNodesRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListNodes() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::model::ListNodesRequest, ::onos::ransim::model::ListNodesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::ListNodesRequest* request) { return this->ListNodes(context, request); }));
    }
    ~WithCallbackMethod_ListNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::model::ListNodesResponse>* ListNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::ListNodesRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AgentControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AgentControl() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::AgentControlRequest, ::onos::ransim::model::AgentControlResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::AgentControlRequest* request, ::onos::ransim::model::AgentControlResponse* response) { return this->AgentControl(context, request, response); }));}
    void SetMessageAllocatorFor_AgentControl(
        ::grpc::MessageAllocator< ::onos::ransim::model::AgentControlRequest, ::onos::ransim::model::AgentControlResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::AgentControlRequest, ::onos::ransim::model::AgentControlResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AgentControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgentControl(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::AgentControlRequest* /*request*/, ::onos::ransim::model::AgentControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AgentControl(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::AgentControlRequest* /*request*/, ::onos::ransim::model::AgentControlResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetPlmnID<WithCallbackMethod_CreateNode<WithCallbackMethod_GetNode<WithCallbackMethod_UpdateNode<WithCallbackMethod_DeleteNode<WithCallbackMethod_WatchNodes<WithCallbackMethod_ListNodes<WithCallbackMethod_AgentControl<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetPlmnID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPlmnID() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetPlmnID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlmnID(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::PlmnIDRequest* /*request*/, ::onos::ransim::model::PlmnIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateNode() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateNodeRequest* /*request*/, ::onos::ransim::model::CreateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNode() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetNodeRequest* /*request*/, ::onos::ransim::model::GetNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateNode() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateNodeRequest* /*request*/, ::onos::ransim::model::UpdateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteNode() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteNodeRequest* /*request*/, ::onos::ransim::model::DeleteNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchNodes() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_WatchNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListNodes() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ListNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AgentControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AgentControl() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_AgentControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgentControl(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::AgentControlRequest* /*request*/, ::onos::ransim::model::AgentControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPlmnID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPlmnID() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetPlmnID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlmnID(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::PlmnIDRequest* /*request*/, ::onos::ransim::model::PlmnIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPlmnID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateNode() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateNodeRequest* /*request*/, ::onos::ransim::model::CreateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNode() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetNodeRequest* /*request*/, ::onos::ransim::model::GetNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateNode() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateNodeRequest* /*request*/, ::onos::ransim::model::UpdateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteNode() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteNodeRequest* /*request*/, ::onos::ransim::model::DeleteNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchNodes() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_WatchNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchNodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListNodes() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ListNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNodes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AgentControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AgentControl() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_AgentControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgentControl(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::AgentControlRequest* /*request*/, ::onos::ransim::model::AgentControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAgentControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPlmnID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPlmnID() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPlmnID(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPlmnID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlmnID(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::PlmnIDRequest* /*request*/, ::onos::ransim::model::PlmnIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPlmnID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateNode() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateNodeRequest* /*request*/, ::onos::ransim::model::CreateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNode() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetNodeRequest* /*request*/, ::onos::ransim::model::GetNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateNode() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateNodeRequest* /*request*/, ::onos::ransim::model::UpdateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteNode() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteNodeRequest* /*request*/, ::onos::ransim::model::DeleteNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchNodes() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchNodes(context, request); }));
    }
    ~WithRawCallbackMethod_WatchNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListNodes() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListNodes(context, request); }));
    }
    ~WithRawCallbackMethod_ListNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListNodes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AgentControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AgentControl() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AgentControl(context, request, response); }));
    }
    ~WithRawCallbackMethod_AgentControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AgentControl(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::AgentControlRequest* /*request*/, ::onos::ransim::model::AgentControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AgentControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPlmnID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPlmnID() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::PlmnIDRequest, ::onos::ransim::model::PlmnIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::PlmnIDRequest, ::onos::ransim::model::PlmnIDResponse>* streamer) {
                       return this->StreamedGetPlmnID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPlmnID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPlmnID(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::PlmnIDRequest* /*request*/, ::onos::ransim::model::PlmnIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPlmnID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::PlmnIDRequest,::onos::ransim::model::PlmnIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateNode() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::CreateNodeRequest, ::onos::ransim::model::CreateNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::CreateNodeRequest, ::onos::ransim::model::CreateNodeResponse>* streamer) {
                       return this->StreamedCreateNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateNodeRequest* /*request*/, ::onos::ransim::model::CreateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::CreateNodeRequest,::onos::ransim::model::CreateNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNode() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::GetNodeRequest, ::onos::ransim::model::GetNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::GetNodeRequest, ::onos::ransim::model::GetNodeResponse>* streamer) {
                       return this->StreamedGetNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetNodeRequest* /*request*/, ::onos::ransim::model::GetNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::GetNodeRequest,::onos::ransim::model::GetNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateNode() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::UpdateNodeRequest, ::onos::ransim::model::UpdateNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::UpdateNodeRequest, ::onos::ransim::model::UpdateNodeResponse>* streamer) {
                       return this->StreamedUpdateNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateNodeRequest* /*request*/, ::onos::ransim::model::UpdateNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::UpdateNodeRequest,::onos::ransim::model::UpdateNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteNode() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::DeleteNodeRequest, ::onos::ransim::model::DeleteNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::DeleteNodeRequest, ::onos::ransim::model::DeleteNodeResponse>* streamer) {
                       return this->StreamedDeleteNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteNode(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteNodeRequest* /*request*/, ::onos::ransim::model::DeleteNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::DeleteNodeRequest,::onos::ransim::model::DeleteNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AgentControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AgentControl() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::AgentControlRequest, ::onos::ransim::model::AgentControlResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::AgentControlRequest, ::onos::ransim::model::AgentControlResponse>* streamer) {
                       return this->StreamedAgentControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AgentControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AgentControl(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::AgentControlRequest* /*request*/, ::onos::ransim::model::AgentControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAgentControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::AgentControlRequest,::onos::ransim::model::AgentControlResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetPlmnID<WithStreamedUnaryMethod_CreateNode<WithStreamedUnaryMethod_GetNode<WithStreamedUnaryMethod_UpdateNode<WithStreamedUnaryMethod_DeleteNode<WithStreamedUnaryMethod_AgentControl<Service > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchNodes() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::model::WatchNodesRequest, ::onos::ransim::model::WatchNodesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::model::WatchNodesRequest, ::onos::ransim::model::WatchNodesResponse>* streamer) {
                       return this->StreamedWatchNodes(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchNodes(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::model::WatchNodesRequest,::onos::ransim::model::WatchNodesResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ListNodes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListNodes() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::model::ListNodesRequest, ::onos::ransim::model::ListNodesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::model::ListNodesRequest, ::onos::ransim::model::ListNodesResponse>* streamer) {
                       return this->StreamedListNodes(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListNodes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListNodes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListNodesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListNodesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListNodes(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::model::ListNodesRequest,::onos::ransim::model::ListNodesResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_WatchNodes<WithSplitStreamingMethod_ListNodes<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetPlmnID<WithStreamedUnaryMethod_CreateNode<WithStreamedUnaryMethod_GetNode<WithStreamedUnaryMethod_UpdateNode<WithStreamedUnaryMethod_DeleteNode<WithSplitStreamingMethod_WatchNodes<WithSplitStreamingMethod_ListNodes<WithStreamedUnaryMethod_AgentControl<Service > > > > > > > > StreamedService;
};

// CellModel provides means to create, delete and read simulated RAN cells.
class CellModel final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.ransim.model.CellModel";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::onos::ransim::model::CreateCellResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateCellResponse>> AsyncCreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateCellResponse>>(AsyncCreateCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateCellResponse>> PrepareAsyncCreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateCellResponse>>(PrepareAsyncCreateCellRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::onos::ransim::model::DeleteCellResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteCellResponse>> AsyncDeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteCellResponse>>(AsyncDeleteCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteCellResponse>> PrepareAsyncDeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteCellResponse>>(PrepareAsyncDeleteCellRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::onos::ransim::model::UpdateCellResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateCellResponse>> AsyncUpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateCellResponse>>(AsyncUpdateCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateCellResponse>> PrepareAsyncUpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateCellResponse>>(PrepareAsyncUpdateCellRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::onos::ransim::model::GetCellResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetCellResponse>> AsyncGetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetCellResponse>>(AsyncGetCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetCellResponse>> PrepareAsyncGetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetCellResponse>>(PrepareAsyncGetCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchCellsResponse>> WatchCells(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchCellsResponse>>(WatchCellsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchCellsResponse>> AsyncWatchCells(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchCellsResponse>>(AsyncWatchCellsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchCellsResponse>> PrepareAsyncWatchCells(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchCellsResponse>>(PrepareAsyncWatchCellsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::ListCellsResponse>> ListCells(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::ListCellsResponse>>(ListCellsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListCellsResponse>> AsyncListCells(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListCellsResponse>>(AsyncListCellsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListCellsResponse>> PrepareAsyncListCells(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListCellsResponse>>(PrepareAsyncListCellsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest* request, ::onos::ransim::model::CreateCellResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest* request, ::onos::ransim::model::CreateCellResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest* request, ::onos::ransim::model::DeleteCellResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest* request, ::onos::ransim::model::DeleteCellResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest* request, ::onos::ransim::model::UpdateCellResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest* request, ::onos::ransim::model::UpdateCellResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest* request, ::onos::ransim::model::GetCellResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest* request, ::onos::ransim::model::GetCellResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WatchCells(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::WatchCellsResponse>* reactor) = 0;
      virtual void ListCells(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::ListCellsResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateCellResponse>* AsyncCreateCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateCellResponse>* PrepareAsyncCreateCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteCellResponse>* AsyncDeleteCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteCellResponse>* PrepareAsyncDeleteCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateCellResponse>* AsyncUpdateCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::UpdateCellResponse>* PrepareAsyncUpdateCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetCellResponse>* AsyncGetCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetCellResponse>* PrepareAsyncGetCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchCellsResponse>* WatchCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchCellsResponse>* AsyncWatchCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchCellsResponse>* PrepareAsyncWatchCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::model::ListCellsResponse>* ListCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListCellsResponse>* AsyncListCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListCellsResponse>* PrepareAsyncListCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::onos::ransim::model::CreateCellResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateCellResponse>> AsyncCreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateCellResponse>>(AsyncCreateCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateCellResponse>> PrepareAsyncCreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateCellResponse>>(PrepareAsyncCreateCellRaw(context, request, cq));
    }
    ::grpc::Status DeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::onos::ransim::model::DeleteCellResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteCellResponse>> AsyncDeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteCellResponse>>(AsyncDeleteCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteCellResponse>> PrepareAsyncDeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteCellResponse>>(PrepareAsyncDeleteCellRaw(context, request, cq));
    }
    ::grpc::Status UpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::onos::ransim::model::UpdateCellResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateCellResponse>> AsyncUpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateCellResponse>>(AsyncUpdateCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateCellResponse>> PrepareAsyncUpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateCellResponse>>(PrepareAsyncUpdateCellRaw(context, request, cq));
    }
    ::grpc::Status GetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::onos::ransim::model::GetCellResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetCellResponse>> AsyncGetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetCellResponse>>(AsyncGetCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetCellResponse>> PrepareAsyncGetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetCellResponse>>(PrepareAsyncGetCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::WatchCellsResponse>> WatchCells(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::WatchCellsResponse>>(WatchCellsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchCellsResponse>> AsyncWatchCells(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchCellsResponse>>(AsyncWatchCellsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchCellsResponse>> PrepareAsyncWatchCells(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchCellsResponse>>(PrepareAsyncWatchCellsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::ListCellsResponse>> ListCells(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::ListCellsResponse>>(ListCellsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListCellsResponse>> AsyncListCells(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListCellsResponse>>(AsyncListCellsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListCellsResponse>> PrepareAsyncListCells(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListCellsResponse>>(PrepareAsyncListCellsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest* request, ::onos::ransim::model::CreateCellResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateCell(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest* request, ::onos::ransim::model::CreateCellResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest* request, ::onos::ransim::model::DeleteCellResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteCell(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest* request, ::onos::ransim::model::DeleteCellResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest* request, ::onos::ransim::model::UpdateCellResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateCell(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest* request, ::onos::ransim::model::UpdateCellResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest* request, ::onos::ransim::model::GetCellResponse* response, std::function<void(::grpc::Status)>) override;
      void GetCell(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest* request, ::onos::ransim::model::GetCellResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WatchCells(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::WatchCellsResponse>* reactor) override;
      void ListCells(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::ListCellsResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateCellResponse>* AsyncCreateCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateCellResponse>* PrepareAsyncCreateCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteCellResponse>* AsyncDeleteCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteCellResponse>* PrepareAsyncDeleteCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateCellResponse>* AsyncUpdateCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::UpdateCellResponse>* PrepareAsyncUpdateCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::UpdateCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetCellResponse>* AsyncGetCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetCellResponse>* PrepareAsyncGetCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::model::WatchCellsResponse>* WatchCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchCellsResponse>* AsyncWatchCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchCellsResponse>* PrepareAsyncWatchCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchCellsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::model::ListCellsResponse>* ListCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::ListCellsResponse>* AsyncListCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::ListCellsResponse>* PrepareAsyncListCellsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListCellsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateCell_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteCell_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCell_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCell_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchCells_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCells_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateCell(::grpc::ServerContext* context, const ::onos::ransim::model::CreateCellRequest* request, ::onos::ransim::model::CreateCellResponse* response);
    virtual ::grpc::Status DeleteCell(::grpc::ServerContext* context, const ::onos::ransim::model::DeleteCellRequest* request, ::onos::ransim::model::DeleteCellResponse* response);
    virtual ::grpc::Status UpdateCell(::grpc::ServerContext* context, const ::onos::ransim::model::UpdateCellRequest* request, ::onos::ransim::model::UpdateCellResponse* response);
    virtual ::grpc::Status GetCell(::grpc::ServerContext* context, const ::onos::ransim::model::GetCellRequest* request, ::onos::ransim::model::GetCellResponse* response);
    virtual ::grpc::Status WatchCells(::grpc::ServerContext* context, const ::onos::ransim::model::WatchCellsRequest* request, ::grpc::ServerWriter< ::onos::ransim::model::WatchCellsResponse>* writer);
    virtual ::grpc::Status ListCells(::grpc::ServerContext* context, const ::onos::ransim::model::ListCellsRequest* request, ::grpc::ServerWriter< ::onos::ransim::model::ListCellsResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateCell() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateCellRequest* /*request*/, ::onos::ransim::model::CreateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCell(::grpc::ServerContext* context, ::onos::ransim::model::CreateCellRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::CreateCellResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteCell() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteCellRequest* /*request*/, ::onos::ransim::model::DeleteCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCell(::grpc::ServerContext* context, ::onos::ransim::model::DeleteCellRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::DeleteCellResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateCell() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateCellRequest* /*request*/, ::onos::ransim::model::UpdateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCell(::grpc::ServerContext* context, ::onos::ransim::model::UpdateCellRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::UpdateCellResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCell() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetCellRequest* /*request*/, ::onos::ransim::model::GetCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCell(::grpc::ServerContext* context, ::onos::ransim::model::GetCellRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::GetCellResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchCells() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_WatchCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchCells(::grpc::ServerContext* context, ::onos::ransim::model::WatchCellsRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::model::WatchCellsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCells() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCells(::grpc::ServerContext* context, ::onos::ransim::model::ListCellsRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::model::ListCellsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateCell<WithAsyncMethod_DeleteCell<WithAsyncMethod_UpdateCell<WithAsyncMethod_GetCell<WithAsyncMethod_WatchCells<WithAsyncMethod_ListCells<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateCell() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::CreateCellRequest, ::onos::ransim::model::CreateCellResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::CreateCellRequest* request, ::onos::ransim::model::CreateCellResponse* response) { return this->CreateCell(context, request, response); }));}
    void SetMessageAllocatorFor_CreateCell(
        ::grpc::MessageAllocator< ::onos::ransim::model::CreateCellRequest, ::onos::ransim::model::CreateCellResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::CreateCellRequest, ::onos::ransim::model::CreateCellResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateCellRequest* /*request*/, ::onos::ransim::model::CreateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCell(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::CreateCellRequest* /*request*/, ::onos::ransim::model::CreateCellResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteCell() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::DeleteCellRequest, ::onos::ransim::model::DeleteCellResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::DeleteCellRequest* request, ::onos::ransim::model::DeleteCellResponse* response) { return this->DeleteCell(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteCell(
        ::grpc::MessageAllocator< ::onos::ransim::model::DeleteCellRequest, ::onos::ransim::model::DeleteCellResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::DeleteCellRequest, ::onos::ransim::model::DeleteCellResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteCellRequest* /*request*/, ::onos::ransim::model::DeleteCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCell(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::DeleteCellRequest* /*request*/, ::onos::ransim::model::DeleteCellResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateCell() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::UpdateCellRequest, ::onos::ransim::model::UpdateCellResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::UpdateCellRequest* request, ::onos::ransim::model::UpdateCellResponse* response) { return this->UpdateCell(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateCell(
        ::grpc::MessageAllocator< ::onos::ransim::model::UpdateCellRequest, ::onos::ransim::model::UpdateCellResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::UpdateCellRequest, ::onos::ransim::model::UpdateCellResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateCellRequest* /*request*/, ::onos::ransim::model::UpdateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCell(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::UpdateCellRequest* /*request*/, ::onos::ransim::model::UpdateCellResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCell() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetCellRequest, ::onos::ransim::model::GetCellResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::GetCellRequest* request, ::onos::ransim::model::GetCellResponse* response) { return this->GetCell(context, request, response); }));}
    void SetMessageAllocatorFor_GetCell(
        ::grpc::MessageAllocator< ::onos::ransim::model::GetCellRequest, ::onos::ransim::model::GetCellResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetCellRequest, ::onos::ransim::model::GetCellResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetCellRequest* /*request*/, ::onos::ransim::model::GetCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCell(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::GetCellRequest* /*request*/, ::onos::ransim::model::GetCellResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchCells() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::model::WatchCellsRequest, ::onos::ransim::model::WatchCellsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::WatchCellsRequest* request) { return this->WatchCells(context, request); }));
    }
    ~WithCallbackMethod_WatchCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::model::WatchCellsResponse>* WatchCells(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::WatchCellsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListCells() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::model::ListCellsRequest, ::onos::ransim::model::ListCellsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::ListCellsRequest* request) { return this->ListCells(context, request); }));
    }
    ~WithCallbackMethod_ListCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::model::ListCellsResponse>* ListCells(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::ListCellsRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateCell<WithCallbackMethod_DeleteCell<WithCallbackMethod_UpdateCell<WithCallbackMethod_GetCell<WithCallbackMethod_WatchCells<WithCallbackMethod_ListCells<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateCell() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateCellRequest* /*request*/, ::onos::ransim::model::CreateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteCell() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteCellRequest* /*request*/, ::onos::ransim::model::DeleteCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateCell() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateCellRequest* /*request*/, ::onos::ransim::model::UpdateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCell() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetCellRequest* /*request*/, ::onos::ransim::model::GetCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchCells() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_WatchCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCells() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateCell() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateCellRequest* /*request*/, ::onos::ransim::model::CreateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCell(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteCell() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DeleteCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteCellRequest* /*request*/, ::onos::ransim::model::DeleteCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCell(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateCell() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateCellRequest* /*request*/, ::onos::ransim::model::UpdateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCell(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCell() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetCellRequest* /*request*/, ::onos::ransim::model::GetCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCell(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchCells() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_WatchCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchCells(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCells() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCells(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateCell() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateCell(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateCellRequest* /*request*/, ::onos::ransim::model::CreateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateCell(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteCell() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteCell(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteCellRequest* /*request*/, ::onos::ransim::model::DeleteCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteCell(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateCell() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateCell(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateCellRequest* /*request*/, ::onos::ransim::model::UpdateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateCell(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCell() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCell(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetCellRequest* /*request*/, ::onos::ransim::model::GetCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCell(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchCells() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchCells(context, request); }));
    }
    ~WithRawCallbackMethod_WatchCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchCells(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListCells() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListCells(context, request); }));
    }
    ~WithRawCallbackMethod_ListCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListCells(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateCell() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::CreateCellRequest, ::onos::ransim::model::CreateCellResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::CreateCellRequest, ::onos::ransim::model::CreateCellResponse>* streamer) {
                       return this->StreamedCreateCell(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateCellRequest* /*request*/, ::onos::ransim::model::CreateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCell(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::CreateCellRequest,::onos::ransim::model::CreateCellResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteCell() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::DeleteCellRequest, ::onos::ransim::model::DeleteCellResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::DeleteCellRequest, ::onos::ransim::model::DeleteCellResponse>* streamer) {
                       return this->StreamedDeleteCell(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteCellRequest* /*request*/, ::onos::ransim::model::DeleteCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteCell(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::DeleteCellRequest,::onos::ransim::model::DeleteCellResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateCell() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::UpdateCellRequest, ::onos::ransim::model::UpdateCellResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::UpdateCellRequest, ::onos::ransim::model::UpdateCellResponse>* streamer) {
                       return this->StreamedUpdateCell(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::UpdateCellRequest* /*request*/, ::onos::ransim::model::UpdateCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCell(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::UpdateCellRequest,::onos::ransim::model::UpdateCellResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCell() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::GetCellRequest, ::onos::ransim::model::GetCellResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::GetCellRequest, ::onos::ransim::model::GetCellResponse>* streamer) {
                       return this->StreamedGetCell(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetCellRequest* /*request*/, ::onos::ransim::model::GetCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCell(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::GetCellRequest,::onos::ransim::model::GetCellResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateCell<WithStreamedUnaryMethod_DeleteCell<WithStreamedUnaryMethod_UpdateCell<WithStreamedUnaryMethod_GetCell<Service > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchCells() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::model::WatchCellsRequest, ::onos::ransim::model::WatchCellsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::model::WatchCellsRequest, ::onos::ransim::model::WatchCellsResponse>* streamer) {
                       return this->StreamedWatchCells(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchCells(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::model::WatchCellsRequest,::onos::ransim::model::WatchCellsResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ListCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListCells() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::model::ListCellsRequest, ::onos::ransim::model::ListCellsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::model::ListCellsRequest, ::onos::ransim::model::ListCellsResponse>* streamer) {
                       return this->StreamedListCells(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCells(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListCellsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListCellsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListCells(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::model::ListCellsRequest,::onos::ransim::model::ListCellsResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_WatchCells<WithSplitStreamingMethod_ListCells<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateCell<WithStreamedUnaryMethod_DeleteCell<WithStreamedUnaryMethod_UpdateCell<WithStreamedUnaryMethod_GetCell<WithSplitStreamingMethod_WatchCells<WithSplitStreamingMethod_ListCells<Service > > > > > > StreamedService;
};

// RouteModel provides means to create, delete and read simulated mobile UE routes.
class RouteModel final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.ransim.model.RouteModel";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::onos::ransim::model::CreateRouteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateRouteResponse>> AsyncCreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateRouteResponse>>(AsyncCreateRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateRouteResponse>> PrepareAsyncCreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateRouteResponse>>(PrepareAsyncCreateRouteRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::onos::ransim::model::DeleteRouteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteRouteResponse>> AsyncDeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteRouteResponse>>(AsyncDeleteRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteRouteResponse>> PrepareAsyncDeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteRouteResponse>>(PrepareAsyncDeleteRouteRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::onos::ransim::model::GetRouteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetRouteResponse>> AsyncGetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetRouteResponse>>(AsyncGetRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetRouteResponse>> PrepareAsyncGetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetRouteResponse>>(PrepareAsyncGetRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchRoutesResponse>> WatchRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchRoutesResponse>>(WatchRoutesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchRoutesResponse>> AsyncWatchRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchRoutesResponse>>(AsyncWatchRoutesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchRoutesResponse>> PrepareAsyncWatchRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchRoutesResponse>>(PrepareAsyncWatchRoutesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::ListRoutesResponse>> ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::ListRoutesResponse>>(ListRoutesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListRoutesResponse>> AsyncListRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListRoutesResponse>>(AsyncListRoutesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListRoutesResponse>> PrepareAsyncListRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListRoutesResponse>>(PrepareAsyncListRoutesRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest* request, ::onos::ransim::model::CreateRouteResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest* request, ::onos::ransim::model::CreateRouteResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest* request, ::onos::ransim::model::DeleteRouteResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest* request, ::onos::ransim::model::DeleteRouteResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest* request, ::onos::ransim::model::GetRouteResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest* request, ::onos::ransim::model::GetRouteResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WatchRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::WatchRoutesResponse>* reactor) = 0;
      virtual void ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::ListRoutesResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateRouteResponse>* AsyncCreateRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::CreateRouteResponse>* PrepareAsyncCreateRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteRouteResponse>* AsyncDeleteRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteRouteResponse>* PrepareAsyncDeleteRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetRouteResponse>* AsyncGetRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetRouteResponse>* PrepareAsyncGetRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchRoutesResponse>* WatchRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchRoutesResponse>* AsyncWatchRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchRoutesResponse>* PrepareAsyncWatchRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::model::ListRoutesResponse>* ListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListRoutesResponse>* AsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListRoutesResponse>* PrepareAsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::onos::ransim::model::CreateRouteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateRouteResponse>> AsyncCreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateRouteResponse>>(AsyncCreateRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateRouteResponse>> PrepareAsyncCreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateRouteResponse>>(PrepareAsyncCreateRouteRaw(context, request, cq));
    }
    ::grpc::Status DeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::onos::ransim::model::DeleteRouteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteRouteResponse>> AsyncDeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteRouteResponse>>(AsyncDeleteRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteRouteResponse>> PrepareAsyncDeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteRouteResponse>>(PrepareAsyncDeleteRouteRaw(context, request, cq));
    }
    ::grpc::Status GetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::onos::ransim::model::GetRouteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetRouteResponse>> AsyncGetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetRouteResponse>>(AsyncGetRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetRouteResponse>> PrepareAsyncGetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetRouteResponse>>(PrepareAsyncGetRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::WatchRoutesResponse>> WatchRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::WatchRoutesResponse>>(WatchRoutesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchRoutesResponse>> AsyncWatchRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchRoutesResponse>>(AsyncWatchRoutesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchRoutesResponse>> PrepareAsyncWatchRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchRoutesResponse>>(PrepareAsyncWatchRoutesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::ListRoutesResponse>> ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::ListRoutesResponse>>(ListRoutesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListRoutesResponse>> AsyncListRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListRoutesResponse>>(AsyncListRoutesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListRoutesResponse>> PrepareAsyncListRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListRoutesResponse>>(PrepareAsyncListRoutesRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest* request, ::onos::ransim::model::CreateRouteResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateRoute(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest* request, ::onos::ransim::model::CreateRouteResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest* request, ::onos::ransim::model::DeleteRouteResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteRoute(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest* request, ::onos::ransim::model::DeleteRouteResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest* request, ::onos::ransim::model::GetRouteResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRoute(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest* request, ::onos::ransim::model::GetRouteResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WatchRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::WatchRoutesResponse>* reactor) override;
      void ListRoutes(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::ListRoutesResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateRouteResponse>* AsyncCreateRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::CreateRouteResponse>* PrepareAsyncCreateRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::CreateRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteRouteResponse>* AsyncDeleteRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteRouteResponse>* PrepareAsyncDeleteRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetRouteResponse>* AsyncGetRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetRouteResponse>* PrepareAsyncGetRouteRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::model::WatchRoutesResponse>* WatchRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchRoutesResponse>* AsyncWatchRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchRoutesResponse>* PrepareAsyncWatchRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchRoutesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::model::ListRoutesResponse>* ListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::ListRoutesResponse>* AsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::ListRoutesResponse>* PrepareAsyncListRoutesRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListRoutesRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRoute_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRoute_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRoute_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchRoutes_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRoutes_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateRoute(::grpc::ServerContext* context, const ::onos::ransim::model::CreateRouteRequest* request, ::onos::ransim::model::CreateRouteResponse* response);
    virtual ::grpc::Status DeleteRoute(::grpc::ServerContext* context, const ::onos::ransim::model::DeleteRouteRequest* request, ::onos::ransim::model::DeleteRouteResponse* response);
    virtual ::grpc::Status GetRoute(::grpc::ServerContext* context, const ::onos::ransim::model::GetRouteRequest* request, ::onos::ransim::model::GetRouteResponse* response);
    virtual ::grpc::Status WatchRoutes(::grpc::ServerContext* context, const ::onos::ransim::model::WatchRoutesRequest* request, ::grpc::ServerWriter< ::onos::ransim::model::WatchRoutesResponse>* writer);
    virtual ::grpc::Status ListRoutes(::grpc::ServerContext* context, const ::onos::ransim::model::ListRoutesRequest* request, ::grpc::ServerWriter< ::onos::ransim::model::ListRoutesResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateRoute() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateRouteRequest* /*request*/, ::onos::ransim::model::CreateRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRoute(::grpc::ServerContext* context, ::onos::ransim::model::CreateRouteRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::CreateRouteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteRoute() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_DeleteRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteRouteRequest* /*request*/, ::onos::ransim::model::DeleteRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRoute(::grpc::ServerContext* context, ::onos::ransim::model::DeleteRouteRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::DeleteRouteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRoute() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetRouteRequest* /*request*/, ::onos::ransim::model::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoute(::grpc::ServerContext* context, ::onos::ransim::model::GetRouteRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::GetRouteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchRoutes() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_WatchRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchRoutes(::grpc::ServerContext* context, ::onos::ransim::model::WatchRoutesRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::model::WatchRoutesResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRoutes() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRoutes(::grpc::ServerContext* context, ::onos::ransim::model::ListRoutesRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::model::ListRoutesResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateRoute<WithAsyncMethod_DeleteRoute<WithAsyncMethod_GetRoute<WithAsyncMethod_WatchRoutes<WithAsyncMethod_ListRoutes<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateRoute() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::CreateRouteRequest, ::onos::ransim::model::CreateRouteResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::CreateRouteRequest* request, ::onos::ransim::model::CreateRouteResponse* response) { return this->CreateRoute(context, request, response); }));}
    void SetMessageAllocatorFor_CreateRoute(
        ::grpc::MessageAllocator< ::onos::ransim::model::CreateRouteRequest, ::onos::ransim::model::CreateRouteResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::CreateRouteRequest, ::onos::ransim::model::CreateRouteResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateRouteRequest* /*request*/, ::onos::ransim::model::CreateRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRoute(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::CreateRouteRequest* /*request*/, ::onos::ransim::model::CreateRouteResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteRoute() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::DeleteRouteRequest, ::onos::ransim::model::DeleteRouteResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::DeleteRouteRequest* request, ::onos::ransim::model::DeleteRouteResponse* response) { return this->DeleteRoute(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteRoute(
        ::grpc::MessageAllocator< ::onos::ransim::model::DeleteRouteRequest, ::onos::ransim::model::DeleteRouteResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::DeleteRouteRequest, ::onos::ransim::model::DeleteRouteResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteRouteRequest* /*request*/, ::onos::ransim::model::DeleteRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRoute(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::DeleteRouteRequest* /*request*/, ::onos::ransim::model::DeleteRouteResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRoute() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetRouteRequest, ::onos::ransim::model::GetRouteResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::GetRouteRequest* request, ::onos::ransim::model::GetRouteResponse* response) { return this->GetRoute(context, request, response); }));}
    void SetMessageAllocatorFor_GetRoute(
        ::grpc::MessageAllocator< ::onos::ransim::model::GetRouteRequest, ::onos::ransim::model::GetRouteResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetRouteRequest, ::onos::ransim::model::GetRouteResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetRouteRequest* /*request*/, ::onos::ransim::model::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoute(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::GetRouteRequest* /*request*/, ::onos::ransim::model::GetRouteResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchRoutes() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::model::WatchRoutesRequest, ::onos::ransim::model::WatchRoutesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::WatchRoutesRequest* request) { return this->WatchRoutes(context, request); }));
    }
    ~WithCallbackMethod_WatchRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::model::WatchRoutesResponse>* WatchRoutes(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::WatchRoutesRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRoutes() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::model::ListRoutesRequest, ::onos::ransim::model::ListRoutesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::ListRoutesRequest* request) { return this->ListRoutes(context, request); }));
    }
    ~WithCallbackMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::model::ListRoutesResponse>* ListRoutes(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::ListRoutesRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateRoute<WithCallbackMethod_DeleteRoute<WithCallbackMethod_GetRoute<WithCallbackMethod_WatchRoutes<WithCallbackMethod_ListRoutes<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateRoute() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateRouteRequest* /*request*/, ::onos::ransim::model::CreateRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteRoute() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_DeleteRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteRouteRequest* /*request*/, ::onos::ransim::model::DeleteRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRoute() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetRouteRequest* /*request*/, ::onos::ransim::model::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchRoutes() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_WatchRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRoutes() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateRoute() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateRouteRequest* /*request*/, ::onos::ransim::model::CreateRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRoute(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteRoute() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_DeleteRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteRouteRequest* /*request*/, ::onos::ransim::model::DeleteRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRoute(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRoute() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetRouteRequest* /*request*/, ::onos::ransim::model::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoute(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchRoutes() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_WatchRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchRoutes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRoutes() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRoutes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateRoute() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateRoute(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateRouteRequest* /*request*/, ::onos::ransim::model::CreateRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRoute(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteRoute() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteRoute(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteRouteRequest* /*request*/, ::onos::ransim::model::DeleteRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRoute(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRoute() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRoute(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetRouteRequest* /*request*/, ::onos::ransim::model::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoute(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchRoutes() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchRoutes(context, request); }));
    }
    ~WithRawCallbackMethod_WatchRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchRoutes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRoutes() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListRoutes(context, request); }));
    }
    ~WithRawCallbackMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListRoutes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateRoute() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::CreateRouteRequest, ::onos::ransim::model::CreateRouteResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::CreateRouteRequest, ::onos::ransim::model::CreateRouteResponse>* streamer) {
                       return this->StreamedCreateRoute(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::CreateRouteRequest* /*request*/, ::onos::ransim::model::CreateRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRoute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::CreateRouteRequest,::onos::ransim::model::CreateRouteResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteRoute() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::DeleteRouteRequest, ::onos::ransim::model::DeleteRouteResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::DeleteRouteRequest, ::onos::ransim::model::DeleteRouteResponse>* streamer) {
                       return this->StreamedDeleteRoute(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteRouteRequest* /*request*/, ::onos::ransim::model::DeleteRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRoute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::DeleteRouteRequest,::onos::ransim::model::DeleteRouteResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRoute() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::GetRouteRequest, ::onos::ransim::model::GetRouteResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::GetRouteRequest, ::onos::ransim::model::GetRouteResponse>* streamer) {
                       return this->StreamedGetRoute(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetRouteRequest* /*request*/, ::onos::ransim::model::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRoute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::GetRouteRequest,::onos::ransim::model::GetRouteResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateRoute<WithStreamedUnaryMethod_DeleteRoute<WithStreamedUnaryMethod_GetRoute<Service > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchRoutes() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::model::WatchRoutesRequest, ::onos::ransim::model::WatchRoutesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::model::WatchRoutesRequest, ::onos::ransim::model::WatchRoutesResponse>* streamer) {
                       return this->StreamedWatchRoutes(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchRoutes(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::model::WatchRoutesRequest,::onos::ransim::model::WatchRoutesResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ListRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListRoutes() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::model::ListRoutesRequest, ::onos::ransim::model::ListRoutesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::model::ListRoutesRequest, ::onos::ransim::model::ListRoutesResponse>* streamer) {
                       return this->StreamedListRoutes(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRoutes(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListRoutesRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListRoutesResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListRoutes(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::model::ListRoutesRequest,::onos::ransim::model::ListRoutesResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_WatchRoutes<WithSplitStreamingMethod_ListRoutes<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateRoute<WithStreamedUnaryMethod_DeleteRoute<WithStreamedUnaryMethod_GetRoute<WithSplitStreamingMethod_WatchRoutes<WithSplitStreamingMethod_ListRoutes<Service > > > > > StreamedService;
};

// UEModel provides means to simulate mobile UEs.
class UEModel final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.ransim.model.UEModel";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::onos::ransim::model::GetUEResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUEResponse>> AsyncGetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUEResponse>>(AsyncGetUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUEResponse>> PrepareAsyncGetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUEResponse>>(PrepareAsyncGetUERaw(context, request, cq));
    }
    virtual ::grpc::Status MoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::onos::ransim::model::MoveToCellResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToCellResponse>> AsyncMoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToCellResponse>>(AsyncMoveToCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToCellResponse>> PrepareAsyncMoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToCellResponse>>(PrepareAsyncMoveToCellRaw(context, request, cq));
    }
    virtual ::grpc::Status MoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::onos::ransim::model::MoveToLocationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToLocationResponse>> AsyncMoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToLocationResponse>>(AsyncMoveToLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToLocationResponse>> PrepareAsyncMoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToLocationResponse>>(PrepareAsyncMoveToLocationRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::onos::ransim::model::DeleteUEResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteUEResponse>> AsyncDeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteUEResponse>>(AsyncDeleteUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteUEResponse>> PrepareAsyncDeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteUEResponse>>(PrepareAsyncDeleteUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchUEsResponse>> WatchUEs(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchUEsResponse>>(WatchUEsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchUEsResponse>> AsyncWatchUEs(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchUEsResponse>>(AsyncWatchUEsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchUEsResponse>> PrepareAsyncWatchUEs(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchUEsResponse>>(PrepareAsyncWatchUEsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::ListUEsResponse>> ListUEs(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::ransim::model::ListUEsResponse>>(ListUEsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListUEsResponse>> AsyncListUEs(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListUEsResponse>>(AsyncListUEsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListUEsResponse>> PrepareAsyncListUEs(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListUEsResponse>>(PrepareAsyncListUEsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::onos::ransim::model::GetUECountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUECountResponse>> AsyncGetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUECountResponse>>(AsyncGetUECountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUECountResponse>> PrepareAsyncGetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUECountResponse>>(PrepareAsyncGetUECountRaw(context, request, cq));
    }
    virtual ::grpc::Status SetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::onos::ransim::model::SetUECountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::SetUECountResponse>> AsyncSetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::SetUECountResponse>>(AsyncSetUECountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::SetUECountResponse>> PrepareAsyncSetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::SetUECountResponse>>(PrepareAsyncSetUECountRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest* request, ::onos::ransim::model::GetUEResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest* request, ::onos::ransim::model::GetUEResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void MoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest* request, ::onos::ransim::model::MoveToCellResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest* request, ::onos::ransim::model::MoveToCellResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void MoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest* request, ::onos::ransim::model::MoveToLocationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest* request, ::onos::ransim::model::MoveToLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest* request, ::onos::ransim::model::DeleteUEResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest* request, ::onos::ransim::model::DeleteUEResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WatchUEs(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::WatchUEsResponse>* reactor) = 0;
      virtual void ListUEs(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::ListUEsResponse>* reactor) = 0;
      virtual void GetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest* request, ::onos::ransim::model::GetUECountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest* request, ::onos::ransim::model::GetUECountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest* request, ::onos::ransim::model::SetUECountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest* request, ::onos::ransim::model::SetUECountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUEResponse>* AsyncGetUERaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUEResponse>* PrepareAsyncGetUERaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToCellResponse>* AsyncMoveToCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToCellResponse>* PrepareAsyncMoveToCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToLocationResponse>* AsyncMoveToLocationRaw(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::MoveToLocationResponse>* PrepareAsyncMoveToLocationRaw(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteUEResponse>* AsyncDeleteUERaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::DeleteUEResponse>* PrepareAsyncDeleteUERaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::model::WatchUEsResponse>* WatchUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchUEsResponse>* AsyncWatchUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::WatchUEsResponse>* PrepareAsyncWatchUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::ransim::model::ListUEsResponse>* ListUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListUEsResponse>* AsyncListUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::ransim::model::ListUEsResponse>* PrepareAsyncListUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUECountResponse>* AsyncGetUECountRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::GetUECountResponse>* PrepareAsyncGetUECountRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::SetUECountResponse>* AsyncSetUECountRaw(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::ransim::model::SetUECountResponse>* PrepareAsyncSetUECountRaw(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::onos::ransim::model::GetUEResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUEResponse>> AsyncGetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUEResponse>>(AsyncGetUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUEResponse>> PrepareAsyncGetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUEResponse>>(PrepareAsyncGetUERaw(context, request, cq));
    }
    ::grpc::Status MoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::onos::ransim::model::MoveToCellResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToCellResponse>> AsyncMoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToCellResponse>>(AsyncMoveToCellRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToCellResponse>> PrepareAsyncMoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToCellResponse>>(PrepareAsyncMoveToCellRaw(context, request, cq));
    }
    ::grpc::Status MoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::onos::ransim::model::MoveToLocationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToLocationResponse>> AsyncMoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToLocationResponse>>(AsyncMoveToLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToLocationResponse>> PrepareAsyncMoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToLocationResponse>>(PrepareAsyncMoveToLocationRaw(context, request, cq));
    }
    ::grpc::Status DeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::onos::ransim::model::DeleteUEResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteUEResponse>> AsyncDeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteUEResponse>>(AsyncDeleteUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteUEResponse>> PrepareAsyncDeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteUEResponse>>(PrepareAsyncDeleteUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::WatchUEsResponse>> WatchUEs(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::WatchUEsResponse>>(WatchUEsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchUEsResponse>> AsyncWatchUEs(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchUEsResponse>>(AsyncWatchUEsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchUEsResponse>> PrepareAsyncWatchUEs(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchUEsResponse>>(PrepareAsyncWatchUEsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::ListUEsResponse>> ListUEs(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::ransim::model::ListUEsResponse>>(ListUEsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListUEsResponse>> AsyncListUEs(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListUEsResponse>>(AsyncListUEsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListUEsResponse>> PrepareAsyncListUEs(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::ransim::model::ListUEsResponse>>(PrepareAsyncListUEsRaw(context, request, cq));
    }
    ::grpc::Status GetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::onos::ransim::model::GetUECountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUECountResponse>> AsyncGetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUECountResponse>>(AsyncGetUECountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUECountResponse>> PrepareAsyncGetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUECountResponse>>(PrepareAsyncGetUECountRaw(context, request, cq));
    }
    ::grpc::Status SetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::onos::ransim::model::SetUECountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::SetUECountResponse>> AsyncSetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::SetUECountResponse>>(AsyncSetUECountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::SetUECountResponse>> PrepareAsyncSetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::SetUECountResponse>>(PrepareAsyncSetUECountRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest* request, ::onos::ransim::model::GetUEResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUE(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest* request, ::onos::ransim::model::GetUEResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest* request, ::onos::ransim::model::MoveToCellResponse* response, std::function<void(::grpc::Status)>) override;
      void MoveToCell(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest* request, ::onos::ransim::model::MoveToCellResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest* request, ::onos::ransim::model::MoveToLocationResponse* response, std::function<void(::grpc::Status)>) override;
      void MoveToLocation(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest* request, ::onos::ransim::model::MoveToLocationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest* request, ::onos::ransim::model::DeleteUEResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteUE(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest* request, ::onos::ransim::model::DeleteUEResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WatchUEs(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::WatchUEsResponse>* reactor) override;
      void ListUEs(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest* request, ::grpc::ClientReadReactor< ::onos::ransim::model::ListUEsResponse>* reactor) override;
      void GetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest* request, ::onos::ransim::model::GetUECountResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest* request, ::onos::ransim::model::GetUECountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest* request, ::onos::ransim::model::SetUECountResponse* response, std::function<void(::grpc::Status)>) override;
      void SetUECount(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest* request, ::onos::ransim::model::SetUECountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUEResponse>* AsyncGetUERaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUEResponse>* PrepareAsyncGetUERaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToCellResponse>* AsyncMoveToCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToCellResponse>* PrepareAsyncMoveToCellRaw(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToCellRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToLocationResponse>* AsyncMoveToLocationRaw(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::MoveToLocationResponse>* PrepareAsyncMoveToLocationRaw(::grpc::ClientContext* context, const ::onos::ransim::model::MoveToLocationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteUEResponse>* AsyncDeleteUERaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::DeleteUEResponse>* PrepareAsyncDeleteUERaw(::grpc::ClientContext* context, const ::onos::ransim::model::DeleteUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::model::WatchUEsResponse>* WatchUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchUEsResponse>* AsyncWatchUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::WatchUEsResponse>* PrepareAsyncWatchUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::WatchUEsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::ransim::model::ListUEsResponse>* ListUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::ListUEsResponse>* AsyncListUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::ransim::model::ListUEsResponse>* PrepareAsyncListUEsRaw(::grpc::ClientContext* context, const ::onos::ransim::model::ListUEsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUECountResponse>* AsyncGetUECountRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::GetUECountResponse>* PrepareAsyncGetUECountRaw(::grpc::ClientContext* context, const ::onos::ransim::model::GetUECountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::SetUECountResponse>* AsyncSetUECountRaw(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::ransim::model::SetUECountResponse>* PrepareAsyncSetUECountRaw(::grpc::ClientContext* context, const ::onos::ransim::model::SetUECountRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetUE_;
    const ::grpc::internal::RpcMethod rpcmethod_MoveToCell_;
    const ::grpc::internal::RpcMethod rpcmethod_MoveToLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteUE_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchUEs_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUEs_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUECount_;
    const ::grpc::internal::RpcMethod rpcmethod_SetUECount_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetUE(::grpc::ServerContext* context, const ::onos::ransim::model::GetUERequest* request, ::onos::ransim::model::GetUEResponse* response);
    virtual ::grpc::Status MoveToCell(::grpc::ServerContext* context, const ::onos::ransim::model::MoveToCellRequest* request, ::onos::ransim::model::MoveToCellResponse* response);
    virtual ::grpc::Status MoveToLocation(::grpc::ServerContext* context, const ::onos::ransim::model::MoveToLocationRequest* request, ::onos::ransim::model::MoveToLocationResponse* response);
    virtual ::grpc::Status DeleteUE(::grpc::ServerContext* context, const ::onos::ransim::model::DeleteUERequest* request, ::onos::ransim::model::DeleteUEResponse* response);
    virtual ::grpc::Status WatchUEs(::grpc::ServerContext* context, const ::onos::ransim::model::WatchUEsRequest* request, ::grpc::ServerWriter< ::onos::ransim::model::WatchUEsResponse>* writer);
    virtual ::grpc::Status ListUEs(::grpc::ServerContext* context, const ::onos::ransim::model::ListUEsRequest* request, ::grpc::ServerWriter< ::onos::ransim::model::ListUEsResponse>* writer);
    virtual ::grpc::Status GetUECount(::grpc::ServerContext* context, const ::onos::ransim::model::GetUECountRequest* request, ::onos::ransim::model::GetUECountResponse* response);
    virtual ::grpc::Status SetUECount(::grpc::ServerContext* context, const ::onos::ransim::model::SetUECountRequest* request, ::onos::ransim::model::SetUECountResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUE() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUERequest* /*request*/, ::onos::ransim::model::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUE(::grpc::ServerContext* context, ::onos::ransim::model::GetUERequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::GetUEResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MoveToCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MoveToCell() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_MoveToCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToCellRequest* /*request*/, ::onos::ransim::model::MoveToCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveToCell(::grpc::ServerContext* context, ::onos::ransim::model::MoveToCellRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::MoveToCellResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MoveToLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MoveToLocation() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_MoveToLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToLocation(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToLocationRequest* /*request*/, ::onos::ransim::model::MoveToLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveToLocation(::grpc::ServerContext* context, ::onos::ransim::model::MoveToLocationRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::MoveToLocationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteUE() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteUERequest* /*request*/, ::onos::ransim::model::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUE(::grpc::ServerContext* context, ::onos::ransim::model::DeleteUERequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::DeleteUEResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchUEs() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchUEs(::grpc::ServerContext* context, ::onos::ransim::model::WatchUEsRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::model::WatchUEsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListUEs() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUEs(::grpc::ServerContext* context, ::onos::ransim::model::ListUEsRequest* request, ::grpc::ServerAsyncWriter< ::onos::ransim::model::ListUEsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUECount() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUECountRequest* /*request*/, ::onos::ransim::model::GetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUECount(::grpc::ServerContext* context, ::onos::ransim::model::GetUECountRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::GetUECountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetUECount() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::SetUECountRequest* /*request*/, ::onos::ransim::model::SetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetUECount(::grpc::ServerContext* context, ::onos::ransim::model::SetUECountRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::ransim::model::SetUECountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetUE<WithAsyncMethod_MoveToCell<WithAsyncMethod_MoveToLocation<WithAsyncMethod_DeleteUE<WithAsyncMethod_WatchUEs<WithAsyncMethod_ListUEs<WithAsyncMethod_GetUECount<WithAsyncMethod_SetUECount<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUE() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetUERequest, ::onos::ransim::model::GetUEResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::GetUERequest* request, ::onos::ransim::model::GetUEResponse* response) { return this->GetUE(context, request, response); }));}
    void SetMessageAllocatorFor_GetUE(
        ::grpc::MessageAllocator< ::onos::ransim::model::GetUERequest, ::onos::ransim::model::GetUEResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetUERequest, ::onos::ransim::model::GetUEResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUERequest* /*request*/, ::onos::ransim::model::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUE(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::GetUERequest* /*request*/, ::onos::ransim::model::GetUEResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MoveToCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MoveToCell() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::MoveToCellRequest, ::onos::ransim::model::MoveToCellResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::MoveToCellRequest* request, ::onos::ransim::model::MoveToCellResponse* response) { return this->MoveToCell(context, request, response); }));}
    void SetMessageAllocatorFor_MoveToCell(
        ::grpc::MessageAllocator< ::onos::ransim::model::MoveToCellRequest, ::onos::ransim::model::MoveToCellResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::MoveToCellRequest, ::onos::ransim::model::MoveToCellResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MoveToCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToCellRequest* /*request*/, ::onos::ransim::model::MoveToCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveToCell(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::MoveToCellRequest* /*request*/, ::onos::ransim::model::MoveToCellResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MoveToLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MoveToLocation() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::MoveToLocationRequest, ::onos::ransim::model::MoveToLocationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::MoveToLocationRequest* request, ::onos::ransim::model::MoveToLocationResponse* response) { return this->MoveToLocation(context, request, response); }));}
    void SetMessageAllocatorFor_MoveToLocation(
        ::grpc::MessageAllocator< ::onos::ransim::model::MoveToLocationRequest, ::onos::ransim::model::MoveToLocationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::MoveToLocationRequest, ::onos::ransim::model::MoveToLocationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MoveToLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToLocation(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToLocationRequest* /*request*/, ::onos::ransim::model::MoveToLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveToLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::MoveToLocationRequest* /*request*/, ::onos::ransim::model::MoveToLocationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteUE() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::DeleteUERequest, ::onos::ransim::model::DeleteUEResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::DeleteUERequest* request, ::onos::ransim::model::DeleteUEResponse* response) { return this->DeleteUE(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteUE(
        ::grpc::MessageAllocator< ::onos::ransim::model::DeleteUERequest, ::onos::ransim::model::DeleteUEResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::DeleteUERequest, ::onos::ransim::model::DeleteUEResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteUERequest* /*request*/, ::onos::ransim::model::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteUE(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::DeleteUERequest* /*request*/, ::onos::ransim::model::DeleteUEResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchUEs() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::model::WatchUEsRequest, ::onos::ransim::model::WatchUEsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::WatchUEsRequest* request) { return this->WatchUEs(context, request); }));
    }
    ~WithCallbackMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::model::WatchUEsResponse>* WatchUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::WatchUEsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListUEs() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::ransim::model::ListUEsRequest, ::onos::ransim::model::ListUEsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::ListUEsRequest* request) { return this->ListUEs(context, request); }));
    }
    ~WithCallbackMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::ransim::model::ListUEsResponse>* ListUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::ListUEsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUECount() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetUECountRequest, ::onos::ransim::model::GetUECountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::GetUECountRequest* request, ::onos::ransim::model::GetUECountResponse* response) { return this->GetUECount(context, request, response); }));}
    void SetMessageAllocatorFor_GetUECount(
        ::grpc::MessageAllocator< ::onos::ransim::model::GetUECountRequest, ::onos::ransim::model::GetUECountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::GetUECountRequest, ::onos::ransim::model::GetUECountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUECountRequest* /*request*/, ::onos::ransim::model::GetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUECount(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::GetUECountRequest* /*request*/, ::onos::ransim::model::GetUECountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetUECount() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::SetUECountRequest, ::onos::ransim::model::SetUECountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::ransim::model::SetUECountRequest* request, ::onos::ransim::model::SetUECountResponse* response) { return this->SetUECount(context, request, response); }));}
    void SetMessageAllocatorFor_SetUECount(
        ::grpc::MessageAllocator< ::onos::ransim::model::SetUECountRequest, ::onos::ransim::model::SetUECountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::ransim::model::SetUECountRequest, ::onos::ransim::model::SetUECountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::SetUECountRequest* /*request*/, ::onos::ransim::model::SetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetUECount(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::ransim::model::SetUECountRequest* /*request*/, ::onos::ransim::model::SetUECountResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetUE<WithCallbackMethod_MoveToCell<WithCallbackMethod_MoveToLocation<WithCallbackMethod_DeleteUE<WithCallbackMethod_WatchUEs<WithCallbackMethod_ListUEs<WithCallbackMethod_GetUECount<WithCallbackMethod_SetUECount<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUE() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUERequest* /*request*/, ::onos::ransim::model::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MoveToCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MoveToCell() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_MoveToCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToCellRequest* /*request*/, ::onos::ransim::model::MoveToCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MoveToLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MoveToLocation() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_MoveToLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToLocation(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToLocationRequest* /*request*/, ::onos::ransim::model::MoveToLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteUE() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteUERequest* /*request*/, ::onos::ransim::model::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchUEs() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListUEs() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUECount() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUECountRequest* /*request*/, ::onos::ransim::model::GetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetUECount() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::SetUECountRequest* /*request*/, ::onos::ransim::model::SetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUE() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUERequest* /*request*/, ::onos::ransim::model::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUE(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MoveToCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MoveToCell() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_MoveToCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToCellRequest* /*request*/, ::onos::ransim::model::MoveToCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveToCell(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MoveToLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MoveToLocation() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_MoveToLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToLocation(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToLocationRequest* /*request*/, ::onos::ransim::model::MoveToLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveToLocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteUE() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteUERequest* /*request*/, ::onos::ransim::model::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUE(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchUEs() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchUEs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListUEs() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUEs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUECount() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUECountRequest* /*request*/, ::onos::ransim::model::GetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUECount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetUECount() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::SetUECountRequest* /*request*/, ::onos::ransim::model::SetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetUECount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUE() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUE(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUERequest* /*request*/, ::onos::ransim::model::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUE(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MoveToCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MoveToCell() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MoveToCell(context, request, response); }));
    }
    ~WithRawCallbackMethod_MoveToCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToCellRequest* /*request*/, ::onos::ransim::model::MoveToCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveToCell(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MoveToLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MoveToLocation() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MoveToLocation(context, request, response); }));
    }
    ~WithRawCallbackMethod_MoveToLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveToLocation(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToLocationRequest* /*request*/, ::onos::ransim::model::MoveToLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveToLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteUE() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteUE(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteUERequest* /*request*/, ::onos::ransim::model::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteUE(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchUEs() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchUEs(context, request); }));
    }
    ~WithRawCallbackMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListUEs() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListUEs(context, request); }));
    }
    ~WithRawCallbackMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUECount() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUECount(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUECountRequest* /*request*/, ::onos::ransim::model::GetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUECount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetUECount() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetUECount(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::SetUECountRequest* /*request*/, ::onos::ransim::model::SetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetUECount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUE() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::GetUERequest, ::onos::ransim::model::GetUEResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::GetUERequest, ::onos::ransim::model::GetUEResponse>* streamer) {
                       return this->StreamedGetUE(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUERequest* /*request*/, ::onos::ransim::model::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUE(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::GetUERequest,::onos::ransim::model::GetUEResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MoveToCell : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MoveToCell() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::MoveToCellRequest, ::onos::ransim::model::MoveToCellResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::MoveToCellRequest, ::onos::ransim::model::MoveToCellResponse>* streamer) {
                       return this->StreamedMoveToCell(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MoveToCell() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MoveToCell(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToCellRequest* /*request*/, ::onos::ransim::model::MoveToCellResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMoveToCell(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::MoveToCellRequest,::onos::ransim::model::MoveToCellResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MoveToLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MoveToLocation() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::MoveToLocationRequest, ::onos::ransim::model::MoveToLocationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::MoveToLocationRequest, ::onos::ransim::model::MoveToLocationResponse>* streamer) {
                       return this->StreamedMoveToLocation(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MoveToLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MoveToLocation(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::MoveToLocationRequest* /*request*/, ::onos::ransim::model::MoveToLocationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMoveToLocation(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::MoveToLocationRequest,::onos::ransim::model::MoveToLocationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteUE() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::DeleteUERequest, ::onos::ransim::model::DeleteUEResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::DeleteUERequest, ::onos::ransim::model::DeleteUEResponse>* streamer) {
                       return this->StreamedDeleteUE(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::DeleteUERequest* /*request*/, ::onos::ransim::model::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUE(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::DeleteUERequest,::onos::ransim::model::DeleteUEResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUECount() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::GetUECountRequest, ::onos::ransim::model::GetUECountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::GetUECountRequest, ::onos::ransim::model::GetUECountResponse>* streamer) {
                       return this->StreamedGetUECount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::GetUECountRequest* /*request*/, ::onos::ransim::model::GetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUECount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::GetUECountRequest,::onos::ransim::model::GetUECountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetUECount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetUECount() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::ransim::model::SetUECountRequest, ::onos::ransim::model::SetUECountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::ransim::model::SetUECountRequest, ::onos::ransim::model::SetUECountResponse>* streamer) {
                       return this->StreamedSetUECount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetUECount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetUECount(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::SetUECountRequest* /*request*/, ::onos::ransim::model::SetUECountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetUECount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::ransim::model::SetUECountRequest,::onos::ransim::model::SetUECountResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetUE<WithStreamedUnaryMethod_MoveToCell<WithStreamedUnaryMethod_MoveToLocation<WithStreamedUnaryMethod_DeleteUE<WithStreamedUnaryMethod_GetUECount<WithStreamedUnaryMethod_SetUECount<Service > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchUEs() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::model::WatchUEsRequest, ::onos::ransim::model::WatchUEsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::model::WatchUEsRequest, ::onos::ransim::model::WatchUEsResponse>* streamer) {
                       return this->StreamedWatchUEs(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::WatchUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::WatchUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchUEs(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::model::WatchUEsRequest,::onos::ransim::model::WatchUEsResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListUEs() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::ransim::model::ListUEsRequest, ::onos::ransim::model::ListUEsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::ransim::model::ListUEsRequest, ::onos::ransim::model::ListUEsResponse>* streamer) {
                       return this->StreamedListUEs(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::ransim::model::ListUEsRequest* /*request*/, ::grpc::ServerWriter< ::onos::ransim::model::ListUEsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListUEs(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::ransim::model::ListUEsRequest,::onos::ransim::model::ListUEsResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_WatchUEs<WithSplitStreamingMethod_ListUEs<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetUE<WithStreamedUnaryMethod_MoveToCell<WithStreamedUnaryMethod_MoveToLocation<WithStreamedUnaryMethod_DeleteUE<WithSplitStreamingMethod_WatchUEs<WithSplitStreamingMethod_ListUEs<WithStreamedUnaryMethod_GetUECount<WithStreamedUnaryMethod_SetUECount<Service > > > > > > > > StreamedService;
};

}  // namespace model
}  // namespace ransim
}  // namespace onos


#endif  // GRPC_onos_2fransim_2fmodel_2fmodel_2eproto__INCLUDED
