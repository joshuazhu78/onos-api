// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/e2t/e2/v1beta1/control.proto

#include "onos/e2t/e2/v1beta1/control.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace e2t {
namespace e2 {
namespace v1beta1 {
constexpr ControlRequest::ControlRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : headers_(nullptr)
  , message_(nullptr){}
struct ControlRequestDefaultTypeInternal {
  constexpr ControlRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ControlRequestDefaultTypeInternal() {}
  union {
    ControlRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ControlRequestDefaultTypeInternal _ControlRequest_default_instance_;
constexpr ControlMessage::ControlMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : header_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payload_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ControlMessageDefaultTypeInternal {
  constexpr ControlMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ControlMessageDefaultTypeInternal() {}
  union {
    ControlMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ControlMessageDefaultTypeInternal _ControlMessage_default_instance_;
constexpr ControlResponse::ControlResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : headers_(nullptr)
  , outcome_(nullptr){}
struct ControlResponseDefaultTypeInternal {
  constexpr ControlResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ControlResponseDefaultTypeInternal() {}
  union {
    ControlResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ControlResponseDefaultTypeInternal _ControlResponse_default_instance_;
constexpr ControlOutcome::ControlOutcome(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : payload_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ControlOutcomeDefaultTypeInternal {
  constexpr ControlOutcomeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ControlOutcomeDefaultTypeInternal() {}
  union {
    ControlOutcome _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ControlOutcomeDefaultTypeInternal _ControlOutcome_default_instance_;
}  // namespace v1beta1
}  // namespace e2
}  // namespace e2t
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto = nullptr;

const uint32_t TableStruct_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlRequest, headers_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlRequest, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlMessage, header_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlMessage, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlResponse, headers_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlResponse, outcome_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlOutcome, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ControlOutcome, payload_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::e2t::e2::v1beta1::ControlRequest)},
  { 8, -1, -1, sizeof(::onos::e2t::e2::v1beta1::ControlMessage)},
  { 16, -1, -1, sizeof(::onos::e2t::e2::v1beta1::ControlResponse)},
  { 24, -1, -1, sizeof(::onos::e2t::e2::v1beta1::ControlOutcome)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_ControlRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_ControlMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_ControlResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_ControlOutcome_default_instance_),
};

const char descriptor_table_protodef_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!onos/e2t/e2/v1beta1/control.proto\022\023ono"
  "s.e2t.e2.v1beta1\032\024gogoproto/gogo.proto\032\034"
  "onos/e2t/e2/v1beta1/e2.proto\"\210\001\n\016Control"
  "Request\022:\n\007headers\030\001 \001(\0132#.onos.e2t.e2.v"
  "1beta1.RequestHeadersB\004\310\336\037\000\022:\n\007message\030\002"
  " \001(\0132#.onos.e2t.e2.v1beta1.ControlMessag"
  "eB\004\310\336\037\000\"1\n\016ControlMessage\022\016\n\006header\030\001 \001("
  "\014\022\017\n\007payload\030\002 \001(\014\"\212\001\n\017ControlResponse\022;"
  "\n\007headers\030\001 \001(\0132$.onos.e2t.e2.v1beta1.Re"
  "sponseHeadersB\004\310\336\037\000\022:\n\007outcome\030\002 \001(\0132#.o"
  "nos.e2t.e2.v1beta1.ControlOutcomeB\004\310\336\037\000\""
  "!\n\016ControlOutcome\022\017\n\007payload\030\001 \001(\0142f\n\016Co"
  "ntrolService\022T\n\007Control\022#.onos.e2t.e2.v1"
  "beta1.ControlRequest\032$.onos.e2t.e2.v1bet"
  "a1.ControlResponseB\004\300\343\036\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_deps[2] = {
  &::descriptor_table_gogoproto_2fgogo_2eproto,
  &::descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto = {
  false, false, 592, descriptor_table_protodef_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto, "onos/e2t/e2/v1beta1/control.proto", 
  &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_once, descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_deps, 2, 4,
  schemas, file_default_instances, TableStruct_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto::offsets,
  file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto, file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto, file_level_service_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_getter() {
  return &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto(&descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto);
namespace onos {
namespace e2t {
namespace e2 {
namespace v1beta1 {

// ===================================================================

class ControlRequest::_Internal {
 public:
  static const ::onos::e2t::e2::v1beta1::RequestHeaders& headers(const ControlRequest* msg);
  static const ::onos::e2t::e2::v1beta1::ControlMessage& message(const ControlRequest* msg);
};

const ::onos::e2t::e2::v1beta1::RequestHeaders&
ControlRequest::_Internal::headers(const ControlRequest* msg) {
  return *msg->headers_;
}
const ::onos::e2t::e2::v1beta1::ControlMessage&
ControlRequest::_Internal::message(const ControlRequest* msg) {
  return *msg->message_;
}
void ControlRequest::clear_headers() {
  if (GetArenaForAllocation() == nullptr && headers_ != nullptr) {
    delete headers_;
  }
  headers_ = nullptr;
}
ControlRequest::ControlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.ControlRequest)
}
ControlRequest::ControlRequest(const ControlRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_headers()) {
    headers_ = new ::onos::e2t::e2::v1beta1::RequestHeaders(*from.headers_);
  } else {
    headers_ = nullptr;
  }
  if (from._internal_has_message()) {
    message_ = new ::onos::e2t::e2::v1beta1::ControlMessage(*from.message_);
  } else {
    message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.ControlRequest)
}

inline void ControlRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&headers_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&message_) -
    reinterpret_cast<char*>(&headers_)) + sizeof(message_));
}

ControlRequest::~ControlRequest() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.ControlRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ControlRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete headers_;
  if (this != internal_default_instance()) delete message_;
}

void ControlRequest::ArenaDtor(void* object) {
  ControlRequest* _this = reinterpret_cast< ControlRequest* >(object);
  (void)_this;
}
void ControlRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ControlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.ControlRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && headers_ != nullptr) {
    delete headers_;
  }
  headers_ = nullptr;
  if (GetArenaForAllocation() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ControlRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.RequestHeaders headers = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_headers(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.ControlMessage message = 2 [(.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ControlRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.ControlRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.RequestHeaders headers = 1 [(.gogoproto.nullable) = false];
  if (this->_internal_has_headers()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::headers(this), target, stream);
  }

  // .onos.e2t.e2.v1beta1.ControlMessage message = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.ControlRequest)
  return target;
}

size_t ControlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.ControlRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.RequestHeaders headers = 1 [(.gogoproto.nullable) = false];
  if (this->_internal_has_headers()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *headers_);
  }

  // .onos.e2t.e2.v1beta1.ControlMessage message = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ControlRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ControlRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ControlRequest::GetClassData() const { return &_class_data_; }

void ControlRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ControlRequest *>(to)->MergeFrom(
      static_cast<const ControlRequest &>(from));
}


void ControlRequest::MergeFrom(const ControlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.ControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_headers()) {
    _internal_mutable_headers()->::onos::e2t::e2::v1beta1::RequestHeaders::MergeFrom(from._internal_headers());
  }
  if (from._internal_has_message()) {
    _internal_mutable_message()->::onos::e2t::e2::v1beta1::ControlMessage::MergeFrom(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ControlRequest::CopyFrom(const ControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.ControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlRequest::IsInitialized() const {
  return true;
}

void ControlRequest::InternalSwap(ControlRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControlRequest, message_)
      + sizeof(ControlRequest::message_)
      - PROTOBUF_FIELD_OFFSET(ControlRequest, headers_)>(
          reinterpret_cast<char*>(&headers_),
          reinterpret_cast<char*>(&other->headers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ControlRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto[0]);
}

// ===================================================================

class ControlMessage::_Internal {
 public:
};

ControlMessage::ControlMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.ControlMessage)
}
ControlMessage::ControlMessage(const ControlMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  header_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    header_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_header().empty()) {
    header_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_header(), 
      GetArenaForAllocation());
  }
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.ControlMessage)
}

inline void ControlMessage::SharedCtor() {
header_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  header_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ControlMessage::~ControlMessage() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.ControlMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ControlMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  header_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ControlMessage::ArenaDtor(void* object) {
  ControlMessage* _this = reinterpret_cast< ControlMessage* >(object);
  (void)_this;
}
void ControlMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ControlMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ControlMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.ControlMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  header_.ClearToEmpty();
  payload_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ControlMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_header();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ControlMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.ControlMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes header = 1;
  if (!this->_internal_header().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_header(), target);
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.ControlMessage)
  return target;
}

size_t ControlMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.ControlMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes header = 1;
  if (!this->_internal_header().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_header());
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ControlMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ControlMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ControlMessage::GetClassData() const { return &_class_data_; }

void ControlMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ControlMessage *>(to)->MergeFrom(
      static_cast<const ControlMessage &>(from));
}


void ControlMessage::MergeFrom(const ControlMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.ControlMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_header().empty()) {
    _internal_set_header(from._internal_header());
  }
  if (!from._internal_payload().empty()) {
    _internal_set_payload(from._internal_payload());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ControlMessage::CopyFrom(const ControlMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.ControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlMessage::IsInitialized() const {
  return true;
}

void ControlMessage::InternalSwap(ControlMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &header_, lhs_arena,
      &other->header_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payload_, lhs_arena,
      &other->payload_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ControlMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto[1]);
}

// ===================================================================

class ControlResponse::_Internal {
 public:
  static const ::onos::e2t::e2::v1beta1::ResponseHeaders& headers(const ControlResponse* msg);
  static const ::onos::e2t::e2::v1beta1::ControlOutcome& outcome(const ControlResponse* msg);
};

const ::onos::e2t::e2::v1beta1::ResponseHeaders&
ControlResponse::_Internal::headers(const ControlResponse* msg) {
  return *msg->headers_;
}
const ::onos::e2t::e2::v1beta1::ControlOutcome&
ControlResponse::_Internal::outcome(const ControlResponse* msg) {
  return *msg->outcome_;
}
void ControlResponse::clear_headers() {
  if (GetArenaForAllocation() == nullptr && headers_ != nullptr) {
    delete headers_;
  }
  headers_ = nullptr;
}
ControlResponse::ControlResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.ControlResponse)
}
ControlResponse::ControlResponse(const ControlResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_headers()) {
    headers_ = new ::onos::e2t::e2::v1beta1::ResponseHeaders(*from.headers_);
  } else {
    headers_ = nullptr;
  }
  if (from._internal_has_outcome()) {
    outcome_ = new ::onos::e2t::e2::v1beta1::ControlOutcome(*from.outcome_);
  } else {
    outcome_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.ControlResponse)
}

inline void ControlResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&headers_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&outcome_) -
    reinterpret_cast<char*>(&headers_)) + sizeof(outcome_));
}

ControlResponse::~ControlResponse() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.ControlResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ControlResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete headers_;
  if (this != internal_default_instance()) delete outcome_;
}

void ControlResponse::ArenaDtor(void* object) {
  ControlResponse* _this = reinterpret_cast< ControlResponse* >(object);
  (void)_this;
}
void ControlResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ControlResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.ControlResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && headers_ != nullptr) {
    delete headers_;
  }
  headers_ = nullptr;
  if (GetArenaForAllocation() == nullptr && outcome_ != nullptr) {
    delete outcome_;
  }
  outcome_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ControlResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.ResponseHeaders headers = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_headers(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.ControlOutcome outcome = 2 [(.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_outcome(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ControlResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.ControlResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.ResponseHeaders headers = 1 [(.gogoproto.nullable) = false];
  if (this->_internal_has_headers()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::headers(this), target, stream);
  }

  // .onos.e2t.e2.v1beta1.ControlOutcome outcome = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_outcome()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::outcome(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.ControlResponse)
  return target;
}

size_t ControlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.ControlResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.ResponseHeaders headers = 1 [(.gogoproto.nullable) = false];
  if (this->_internal_has_headers()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *headers_);
  }

  // .onos.e2t.e2.v1beta1.ControlOutcome outcome = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_outcome()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *outcome_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ControlResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ControlResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ControlResponse::GetClassData() const { return &_class_data_; }

void ControlResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ControlResponse *>(to)->MergeFrom(
      static_cast<const ControlResponse &>(from));
}


void ControlResponse::MergeFrom(const ControlResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.ControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_headers()) {
    _internal_mutable_headers()->::onos::e2t::e2::v1beta1::ResponseHeaders::MergeFrom(from._internal_headers());
  }
  if (from._internal_has_outcome()) {
    _internal_mutable_outcome()->::onos::e2t::e2::v1beta1::ControlOutcome::MergeFrom(from._internal_outcome());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ControlResponse::CopyFrom(const ControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.ControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlResponse::IsInitialized() const {
  return true;
}

void ControlResponse::InternalSwap(ControlResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControlResponse, outcome_)
      + sizeof(ControlResponse::outcome_)
      - PROTOBUF_FIELD_OFFSET(ControlResponse, headers_)>(
          reinterpret_cast<char*>(&headers_),
          reinterpret_cast<char*>(&other->headers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ControlResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto[2]);
}

// ===================================================================

class ControlOutcome::_Internal {
 public:
};

ControlOutcome::ControlOutcome(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.ControlOutcome)
}
ControlOutcome::ControlOutcome(const ControlOutcome& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.ControlOutcome)
}

inline void ControlOutcome::SharedCtor() {
payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ControlOutcome::~ControlOutcome() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.ControlOutcome)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ControlOutcome::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ControlOutcome::ArenaDtor(void* object) {
  ControlOutcome* _this = reinterpret_cast< ControlOutcome* >(object);
  (void)_this;
}
void ControlOutcome::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ControlOutcome::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ControlOutcome::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.ControlOutcome)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ControlOutcome::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes payload = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ControlOutcome::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.ControlOutcome)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes payload = 1;
  if (!this->_internal_payload().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.ControlOutcome)
  return target;
}

size_t ControlOutcome::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.ControlOutcome)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes payload = 1;
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ControlOutcome::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ControlOutcome::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ControlOutcome::GetClassData() const { return &_class_data_; }

void ControlOutcome::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ControlOutcome *>(to)->MergeFrom(
      static_cast<const ControlOutcome &>(from));
}


void ControlOutcome::MergeFrom(const ControlOutcome& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.ControlOutcome)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _internal_set_payload(from._internal_payload());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ControlOutcome::CopyFrom(const ControlOutcome& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.ControlOutcome)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlOutcome::IsInitialized() const {
  return true;
}

void ControlOutcome::InternalSwap(ControlOutcome* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payload_, lhs_arena,
      &other->payload_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ControlOutcome::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fcontrol_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace e2
}  // namespace e2t
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::ControlRequest* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::ControlRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::ControlRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::ControlMessage* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::ControlMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::ControlMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::ControlResponse* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::ControlResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::ControlResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::ControlOutcome* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::ControlOutcome >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::ControlOutcome >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
