// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/e2t/e2/v1beta1/e2.proto

#include "onos/e2t/e2/v1beta1/e2.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace e2t {
namespace e2 {
namespace v1beta1 {
constexpr RequestHeaders::RequestHeaders(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_instance_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , e2_node_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , service_model_(nullptr)
  , encoding_(0)
{}
struct RequestHeadersDefaultTypeInternal {
  constexpr RequestHeadersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RequestHeadersDefaultTypeInternal() {}
  union {
    RequestHeaders _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestHeadersDefaultTypeInternal _RequestHeaders_default_instance_;
constexpr ResponseHeaders::ResponseHeaders(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : encoding_(0)
{}
struct ResponseHeadersDefaultTypeInternal {
  constexpr ResponseHeadersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResponseHeadersDefaultTypeInternal() {}
  union {
    ResponseHeaders _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResponseHeadersDefaultTypeInternal _ResponseHeaders_default_instance_;
constexpr ServiceModel::ServiceModel(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ServiceModelDefaultTypeInternal {
  constexpr ServiceModelDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ServiceModelDefaultTypeInternal() {}
  union {
    ServiceModel _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ServiceModelDefaultTypeInternal _ServiceModel_default_instance_;
constexpr Error_Cause_Unknown::Error_Cause_Unknown(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Error_Cause_UnknownDefaultTypeInternal {
  constexpr Error_Cause_UnknownDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Error_Cause_UnknownDefaultTypeInternal() {}
  union {
    Error_Cause_Unknown _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Error_Cause_UnknownDefaultTypeInternal _Error_Cause_Unknown_default_instance_;
constexpr Error_Cause_Misc::Error_Cause_Misc(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0)
{}
struct Error_Cause_MiscDefaultTypeInternal {
  constexpr Error_Cause_MiscDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Error_Cause_MiscDefaultTypeInternal() {}
  union {
    Error_Cause_Misc _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Error_Cause_MiscDefaultTypeInternal _Error_Cause_Misc_default_instance_;
constexpr Error_Cause_Protocol::Error_Cause_Protocol(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0)
{}
struct Error_Cause_ProtocolDefaultTypeInternal {
  constexpr Error_Cause_ProtocolDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Error_Cause_ProtocolDefaultTypeInternal() {}
  union {
    Error_Cause_Protocol _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Error_Cause_ProtocolDefaultTypeInternal _Error_Cause_Protocol_default_instance_;
constexpr Error_Cause_Ric::Error_Cause_Ric(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0)
{}
struct Error_Cause_RicDefaultTypeInternal {
  constexpr Error_Cause_RicDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Error_Cause_RicDefaultTypeInternal() {}
  union {
    Error_Cause_Ric _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Error_Cause_RicDefaultTypeInternal _Error_Cause_Ric_default_instance_;
constexpr Error_Cause_RicService::Error_Cause_RicService(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0)
{}
struct Error_Cause_RicServiceDefaultTypeInternal {
  constexpr Error_Cause_RicServiceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Error_Cause_RicServiceDefaultTypeInternal() {}
  union {
    Error_Cause_RicService _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Error_Cause_RicServiceDefaultTypeInternal _Error_Cause_RicService_default_instance_;
constexpr Error_Cause_Transport::Error_Cause_Transport(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_(0)
{}
struct Error_Cause_TransportDefaultTypeInternal {
  constexpr Error_Cause_TransportDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Error_Cause_TransportDefaultTypeInternal() {}
  union {
    Error_Cause_Transport _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Error_Cause_TransportDefaultTypeInternal _Error_Cause_Transport_default_instance_;
constexpr Error_Cause::Error_Cause(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct Error_CauseDefaultTypeInternal {
  constexpr Error_CauseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Error_CauseDefaultTypeInternal() {}
  union {
    Error_Cause _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Error_CauseDefaultTypeInternal _Error_Cause_default_instance_;
constexpr Error::Error(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cause_(nullptr){}
struct ErrorDefaultTypeInternal {
  constexpr ErrorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ErrorDefaultTypeInternal() {}
  union {
    Error _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ErrorDefaultTypeInternal _Error_default_instance_;
}  // namespace v1beta1
}  // namespace e2
}  // namespace e2t
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[11];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto = nullptr;

const uint32_t TableStruct_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::RequestHeaders, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::RequestHeaders, app_id_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::RequestHeaders, app_instance_id_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::RequestHeaders, e2_node_id_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::RequestHeaders, service_model_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::RequestHeaders, encoding_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ResponseHeaders, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ResponseHeaders, encoding_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ServiceModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ServiceModel, name_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::ServiceModel, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Unknown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Misc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Misc, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Protocol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Protocol, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Ric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Ric, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_RicService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_RicService, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Transport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause_Transport, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error_Cause, cause_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::e2::v1beta1::Error, cause_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::e2t::e2::v1beta1::RequestHeaders)},
  { 11, -1, -1, sizeof(::onos::e2t::e2::v1beta1::ResponseHeaders)},
  { 18, -1, -1, sizeof(::onos::e2t::e2::v1beta1::ServiceModel)},
  { 26, -1, -1, sizeof(::onos::e2t::e2::v1beta1::Error_Cause_Unknown)},
  { 32, -1, -1, sizeof(::onos::e2t::e2::v1beta1::Error_Cause_Misc)},
  { 39, -1, -1, sizeof(::onos::e2t::e2::v1beta1::Error_Cause_Protocol)},
  { 46, -1, -1, sizeof(::onos::e2t::e2::v1beta1::Error_Cause_Ric)},
  { 53, -1, -1, sizeof(::onos::e2t::e2::v1beta1::Error_Cause_RicService)},
  { 60, -1, -1, sizeof(::onos::e2t::e2::v1beta1::Error_Cause_Transport)},
  { 67, -1, -1, sizeof(::onos::e2t::e2::v1beta1::Error_Cause)},
  { 80, -1, -1, sizeof(::onos::e2t::e2::v1beta1::Error)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_RequestHeaders_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_ResponseHeaders_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_ServiceModel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_Error_Cause_Unknown_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_Error_Cause_Misc_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_Error_Cause_Protocol_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_Error_Cause_Ric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_Error_Cause_RicService_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_Error_Cause_Transport_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_Error_Cause_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::e2::v1beta1::_Error_default_instance_),
};

const char descriptor_table_protodef_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034onos/e2t/e2/v1beta1/e2.proto\022\023onos.e2t"
  ".e2.v1beta1\032\024gogoproto/gogo.proto\"\220\002\n\016Re"
  "questHeaders\022\"\n\006app_id\030\001 \001(\tB\022\342\336\037\005AppID\372"
  "\336\037\005AppID\022;\n\017app_instance_id\030\002 \001(\tB\"\342\336\037\rA"
  "ppInstanceID\372\336\037\rAppInstanceID\022,\n\ne2_node"
  "_id\030\003 \001(\tB\030\372\336\037\010E2NodeID\342\336\037\010E2NodeID\022>\n\rs"
  "ervice_model\030\004 \001(\0132!.onos.e2t.e2.v1beta1"
  ".ServiceModelB\004\310\336\037\000\022/\n\010encoding\030\005 \001(\0162\035."
  "onos.e2t.e2.v1beta1.Encoding\"B\n\017Response"
  "Headers\022/\n\010encoding\030\001 \001(\0162\035.onos.e2t.e2."
  "v1beta1.Encoding\"\\\n\014ServiceModel\022\"\n\004name"
  "\030\001 \001(\tB\024\372\336\037\020ServiceModelName\022(\n\007version\030"
  "\002 \001(\tB\027\372\336\037\023ServiceModelVersion\"\302\r\n\005Error"
  "\022/\n\005cause\030\001 \001(\0132 .onos.e2t.e2.v1beta1.Er"
  "ror.Cause\032\207\r\n\005Cause\022;\n\007unknown\030\001 \001(\0132(.o"
  "nos.e2t.e2.v1beta1.Error.Cause.UnknownH\000"
  "\022=\n\010protocol\030\002 \001(\0132).onos.e2t.e2.v1beta1"
  ".Error.Cause.ProtocolH\000\0223\n\003ric\030\003 \001(\0132$.o"
  "nos.e2t.e2.v1beta1.Error.Cause.RicH\000\022B\n\013"
  "ric_service\030\004 \001(\0132+.onos.e2t.e2.v1beta1."
  "Error.Cause.RicServiceH\000\022\?\n\ttransport\030\005 "
  "\001(\0132*.onos.e2t.e2.v1beta1.Error.Cause.Tr"
  "ansportH\000\0225\n\004misc\030\006 \001(\0132%.onos.e2t.e2.v1"
  "beta1.Error.Cause.MiscH\000\032\t\n\007Unknown\032\245\001\n\004"
  "Misc\0228\n\004type\030\001 \001(\0162*.onos.e2t.e2.v1beta1"
  ".Error.Cause.Misc.Type\"c\n\004Type\022\017\n\013UNSPEC"
  "IFIED\020\000\022\037\n\033CONTROL_PROCESSING_OVERLOAD\020\001"
  "\022\024\n\020HARDWARE_FAILURE\020\002\022\023\n\017OM_INTERVENTIO"
  "N\020\003\032\307\002\n\010Protocol\022<\n\004type\030\001 \001(\0162..onos.e2"
  "t.e2.v1beta1.Error.Cause.Protocol.Type\"\374"
  "\001\n\004Type\022\017\n\013UNSPECIFIED\020\000\022\031\n\025TRANSFER_SYN"
  "TAX_ERROR\020\001\022 \n\034ABSTRACT_SYNTAX_ERROR_REJ"
  "ECT\020\002\022+\n\'ABSTRACT_SYNTAX_ERROR_IGNORE_AN"
  "D_NOTIFY\020\003\022.\n*MESSAGE_NOT_COMPATIBLE_WIT"
  "H_RECEIVER_STATE\020\004\022\022\n\016SEMANTIC_ERROR\020\005\0225"
  "\n1ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUC"
  "TED_MESSAGE\020\006\032\314\003\n\003Ric\0227\n\004type\030\001 \001(\0162).on"
  "os.e2t.e2.v1beta1.Error.Cause.Ric.Type\"\213"
  "\003\n\004Type\022\017\n\013UNSPECIFIED\020\000\022\033\n\027RAN_FUNCTION"
  "_ID_INVALID\020\001\022\030\n\024ACTION_NOT_SUPPORTED\020\002\022"
  "\025\n\021EXCESSIVE_ACTIONS\020\003\022\024\n\020DUPLICATE_ACTI"
  "ON\020\004\022\023\n\017DUPLICATE_EVENT\020\005\022\033\n\027FUNCTION_RE"
  "SOURCE_LIMIT\020\006\022\026\n\022REQUEST_ID_UNKNOWN\020\007\0222"
  "\n.INCONSISTENT_ACTION_SUBSEQUENT_ACTION_"
  "SEQUENCE\020\010\022\033\n\027CONTROL_MESSAGE_INVALID\020\t\022"
  "\033\n\027CALL_PROCESS_ID_INVALID\020\n\022\031\n\025CONTROL_"
  "TIMER_EXPIRED\020\013\022\035\n\031CONTROL_FAILED_TO_EXE"
  "CUTE\020\014\022\034\n\030CONTROL_SYSTEM_NOT_READY\020\r\032\261\001\n"
  "\nRicService\022>\n\004type\030\001 \001(\01620.onos.e2t.e2."
  "v1beta1.Error.Cause.RicService.Type\"c\n\004T"
  "ype\022\017\n\013UNSPECIFIED\020\000\022\031\n\025FUNCTION_NOT_REQ"
  "UIRED\020\001\022\027\n\023EXCESSIVE_FUNCTIONS\020\002\022\026\n\022RIC_"
  "RESOURCE_LIMIT\020\003\032\207\001\n\tTransport\022=\n\004type\030\001"
  " \001(\0162/.onos.e2t.e2.v1beta1.Error.Cause.T"
  "ransport.Type\";\n\004Type\022\017\n\013UNSPECIFIED\020\000\022\""
  "\n\036TRANSPORT_RESOURCE_UNAVAILABLE\020\001B\007\n\005ca"
  "use*1\n\010Encoding\022\t\n\005PROTO\020\000\022\014\n\010ASN1_PER\020\001"
  "\022\014\n\010ASN1_XER\020\002B\004\300\343\036\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_deps[1] = {
  &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto = {
  false, false, 2308, descriptor_table_protodef_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto, "onos/e2t/e2/v1beta1/e2.proto", 
  &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once, descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_deps, 1, 11,
  schemas, file_default_instances, TableStruct_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto::offsets,
  file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto, file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto, file_level_service_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter() {
  return &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto(&descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto);
namespace onos {
namespace e2t {
namespace e2 {
namespace v1beta1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Error_Cause_Misc_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto);
  return file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[0];
}
bool Error_Cause_Misc_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Error_Cause_Misc_Type Error_Cause_Misc::UNSPECIFIED;
constexpr Error_Cause_Misc_Type Error_Cause_Misc::CONTROL_PROCESSING_OVERLOAD;
constexpr Error_Cause_Misc_Type Error_Cause_Misc::HARDWARE_FAILURE;
constexpr Error_Cause_Misc_Type Error_Cause_Misc::OM_INTERVENTION;
constexpr Error_Cause_Misc_Type Error_Cause_Misc::Type_MIN;
constexpr Error_Cause_Misc_Type Error_Cause_Misc::Type_MAX;
constexpr int Error_Cause_Misc::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Error_Cause_Protocol_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto);
  return file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[1];
}
bool Error_Cause_Protocol_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::UNSPECIFIED;
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::TRANSFER_SYNTAX_ERROR;
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::ABSTRACT_SYNTAX_ERROR_REJECT;
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY;
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE;
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::SEMANTIC_ERROR;
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE;
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::Type_MIN;
constexpr Error_Cause_Protocol_Type Error_Cause_Protocol::Type_MAX;
constexpr int Error_Cause_Protocol::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Error_Cause_Ric_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto);
  return file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[2];
}
bool Error_Cause_Ric_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Error_Cause_Ric_Type Error_Cause_Ric::UNSPECIFIED;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::RAN_FUNCTION_ID_INVALID;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::ACTION_NOT_SUPPORTED;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::EXCESSIVE_ACTIONS;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::DUPLICATE_ACTION;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::DUPLICATE_EVENT;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::FUNCTION_RESOURCE_LIMIT;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::REQUEST_ID_UNKNOWN;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::INCONSISTENT_ACTION_SUBSEQUENT_ACTION_SEQUENCE;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::CONTROL_MESSAGE_INVALID;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::CALL_PROCESS_ID_INVALID;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::CONTROL_TIMER_EXPIRED;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::CONTROL_FAILED_TO_EXECUTE;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::CONTROL_SYSTEM_NOT_READY;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::Type_MIN;
constexpr Error_Cause_Ric_Type Error_Cause_Ric::Type_MAX;
constexpr int Error_Cause_Ric::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Error_Cause_RicService_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto);
  return file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[3];
}
bool Error_Cause_RicService_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Error_Cause_RicService_Type Error_Cause_RicService::UNSPECIFIED;
constexpr Error_Cause_RicService_Type Error_Cause_RicService::FUNCTION_NOT_REQUIRED;
constexpr Error_Cause_RicService_Type Error_Cause_RicService::EXCESSIVE_FUNCTIONS;
constexpr Error_Cause_RicService_Type Error_Cause_RicService::RIC_RESOURCE_LIMIT;
constexpr Error_Cause_RicService_Type Error_Cause_RicService::Type_MIN;
constexpr Error_Cause_RicService_Type Error_Cause_RicService::Type_MAX;
constexpr int Error_Cause_RicService::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Error_Cause_Transport_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto);
  return file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[4];
}
bool Error_Cause_Transport_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Error_Cause_Transport_Type Error_Cause_Transport::UNSPECIFIED;
constexpr Error_Cause_Transport_Type Error_Cause_Transport::TRANSPORT_RESOURCE_UNAVAILABLE;
constexpr Error_Cause_Transport_Type Error_Cause_Transport::Type_MIN;
constexpr Error_Cause_Transport_Type Error_Cause_Transport::Type_MAX;
constexpr int Error_Cause_Transport::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Encoding_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto);
  return file_level_enum_descriptors_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[5];
}
bool Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class RequestHeaders::_Internal {
 public:
  static const ::onos::e2t::e2::v1beta1::ServiceModel& service_model(const RequestHeaders* msg);
};

const ::onos::e2t::e2::v1beta1::ServiceModel&
RequestHeaders::_Internal::service_model(const RequestHeaders* msg) {
  return *msg->service_model_;
}
RequestHeaders::RequestHeaders(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.RequestHeaders)
}
RequestHeaders::RequestHeaders(const RequestHeaders& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_id().empty()) {
    app_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_id(), 
      GetArenaForAllocation());
  }
  app_instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app_instance_id().empty()) {
    app_instance_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app_instance_id(), 
      GetArenaForAllocation());
  }
  e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_e2_node_id().empty()) {
    e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_e2_node_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_service_model()) {
    service_model_ = new ::onos::e2t::e2::v1beta1::ServiceModel(*from.service_model_);
  } else {
    service_model_ = nullptr;
  }
  encoding_ = from.encoding_;
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.RequestHeaders)
}

inline void RequestHeaders::SharedCtor() {
app_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
app_instance_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_instance_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&service_model_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&service_model_)) + sizeof(encoding_));
}

RequestHeaders::~RequestHeaders() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.RequestHeaders)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RequestHeaders::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  app_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_instance_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  e2_node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete service_model_;
}

void RequestHeaders::ArenaDtor(void* object) {
  RequestHeaders* _this = reinterpret_cast< RequestHeaders* >(object);
  (void)_this;
}
void RequestHeaders::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RequestHeaders::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RequestHeaders::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.RequestHeaders)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_.ClearToEmpty();
  app_instance_id_.ClearToEmpty();
  e2_node_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && service_model_ != nullptr) {
    delete service_model_;
  }
  service_model_ = nullptr;
  encoding_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestHeaders::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app_id = 1 [(.gogoproto.customname) = "AppID", (.gogoproto.casttype) = "AppID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.e2.v1beta1.RequestHeaders.app_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string app_instance_id = 2 [(.gogoproto.customname) = "AppInstanceID", (.gogoproto.casttype) = "AppInstanceID"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_app_instance_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.e2.v1beta1.RequestHeaders.app_instance_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string e2_node_id = 3 [(.gogoproto.customname) = "E2NodeID", (.gogoproto.casttype) = "E2NodeID"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_e2_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.e2.v1beta1.RequestHeaders.e2_node_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.ServiceModel service_model = 4 [(.gogoproto.nullable) = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_model(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.Encoding encoding = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_encoding(static_cast<::onos::e2t::e2::v1beta1::Encoding>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestHeaders::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.RequestHeaders)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_id = 1 [(.gogoproto.customname) = "AppID", (.gogoproto.casttype) = "AppID"];
  if (!this->_internal_app_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_id().data(), static_cast<int>(this->_internal_app_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.e2.v1beta1.RequestHeaders.app_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app_id(), target);
  }

  // string app_instance_id = 2 [(.gogoproto.customname) = "AppInstanceID", (.gogoproto.casttype) = "AppInstanceID"];
  if (!this->_internal_app_instance_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app_instance_id().data(), static_cast<int>(this->_internal_app_instance_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.e2.v1beta1.RequestHeaders.app_instance_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_app_instance_id(), target);
  }

  // string e2_node_id = 3 [(.gogoproto.customname) = "E2NodeID", (.gogoproto.casttype) = "E2NodeID"];
  if (!this->_internal_e2_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_e2_node_id().data(), static_cast<int>(this->_internal_e2_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.e2.v1beta1.RequestHeaders.e2_node_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_e2_node_id(), target);
  }

  // .onos.e2t.e2.v1beta1.ServiceModel service_model = 4 [(.gogoproto.nullable) = false];
  if (this->_internal_has_service_model()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::service_model(this), target, stream);
  }

  // .onos.e2t.e2.v1beta1.Encoding encoding = 5;
  if (this->_internal_encoding() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_encoding(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.RequestHeaders)
  return target;
}

size_t RequestHeaders::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.RequestHeaders)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1 [(.gogoproto.customname) = "AppID", (.gogoproto.casttype) = "AppID"];
  if (!this->_internal_app_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_id());
  }

  // string app_instance_id = 2 [(.gogoproto.customname) = "AppInstanceID", (.gogoproto.casttype) = "AppInstanceID"];
  if (!this->_internal_app_instance_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app_instance_id());
  }

  // string e2_node_id = 3 [(.gogoproto.customname) = "E2NodeID", (.gogoproto.casttype) = "E2NodeID"];
  if (!this->_internal_e2_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_e2_node_id());
  }

  // .onos.e2t.e2.v1beta1.ServiceModel service_model = 4 [(.gogoproto.nullable) = false];
  if (this->_internal_has_service_model()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_model_);
  }

  // .onos.e2t.e2.v1beta1.Encoding encoding = 5;
  if (this->_internal_encoding() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_encoding());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestHeaders::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RequestHeaders::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestHeaders::GetClassData() const { return &_class_data_; }

void RequestHeaders::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RequestHeaders *>(to)->MergeFrom(
      static_cast<const RequestHeaders &>(from));
}


void RequestHeaders::MergeFrom(const RequestHeaders& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.RequestHeaders)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_app_instance_id().empty()) {
    _internal_set_app_instance_id(from._internal_app_instance_id());
  }
  if (!from._internal_e2_node_id().empty()) {
    _internal_set_e2_node_id(from._internal_e2_node_id());
  }
  if (from._internal_has_service_model()) {
    _internal_mutable_service_model()->::onos::e2t::e2::v1beta1::ServiceModel::MergeFrom(from._internal_service_model());
  }
  if (from._internal_encoding() != 0) {
    _internal_set_encoding(from._internal_encoding());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestHeaders::CopyFrom(const RequestHeaders& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.RequestHeaders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestHeaders::IsInitialized() const {
  return true;
}

void RequestHeaders::InternalSwap(RequestHeaders* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_id_, lhs_arena,
      &other->app_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_instance_id_, lhs_arena,
      &other->app_instance_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &e2_node_id_, lhs_arena,
      &other->e2_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestHeaders, encoding_)
      + sizeof(RequestHeaders::encoding_)
      - PROTOBUF_FIELD_OFFSET(RequestHeaders, service_model_)>(
          reinterpret_cast<char*>(&service_model_),
          reinterpret_cast<char*>(&other->service_model_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestHeaders::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[0]);
}

// ===================================================================

class ResponseHeaders::_Internal {
 public:
};

ResponseHeaders::ResponseHeaders(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.ResponseHeaders)
}
ResponseHeaders::ResponseHeaders(const ResponseHeaders& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  encoding_ = from.encoding_;
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.ResponseHeaders)
}

inline void ResponseHeaders::SharedCtor() {
encoding_ = 0;
}

ResponseHeaders::~ResponseHeaders() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.ResponseHeaders)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ResponseHeaders::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResponseHeaders::ArenaDtor(void* object) {
  ResponseHeaders* _this = reinterpret_cast< ResponseHeaders* >(object);
  (void)_this;
}
void ResponseHeaders::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResponseHeaders::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResponseHeaders::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.ResponseHeaders)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  encoding_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseHeaders::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.Encoding encoding = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_encoding(static_cast<::onos::e2t::e2::v1beta1::Encoding>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseHeaders::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.ResponseHeaders)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Encoding encoding = 1;
  if (this->_internal_encoding() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_encoding(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.ResponseHeaders)
  return target;
}

size_t ResponseHeaders::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.ResponseHeaders)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Encoding encoding = 1;
  if (this->_internal_encoding() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_encoding());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseHeaders::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ResponseHeaders::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseHeaders::GetClassData() const { return &_class_data_; }

void ResponseHeaders::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ResponseHeaders *>(to)->MergeFrom(
      static_cast<const ResponseHeaders &>(from));
}


void ResponseHeaders::MergeFrom(const ResponseHeaders& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.ResponseHeaders)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_encoding() != 0) {
    _internal_set_encoding(from._internal_encoding());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseHeaders::CopyFrom(const ResponseHeaders& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.ResponseHeaders)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseHeaders::IsInitialized() const {
  return true;
}

void ResponseHeaders::InternalSwap(ResponseHeaders* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(encoding_, other->encoding_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseHeaders::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[1]);
}

// ===================================================================

class ServiceModel::_Internal {
 public:
};

ServiceModel::ServiceModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.ServiceModel)
}
ServiceModel::ServiceModel(const ServiceModel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.ServiceModel)
}

inline void ServiceModel::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ServiceModel::~ServiceModel() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.ServiceModel)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ServiceModel::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ServiceModel::ArenaDtor(void* object) {
  ServiceModel* _this = reinterpret_cast< ServiceModel* >(object);
  (void)_this;
}
void ServiceModel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServiceModel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ServiceModel::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.ServiceModel)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceModel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.gogoproto.casttype) = "ServiceModelName"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.e2.v1beta1.ServiceModel.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string version = 2 [(.gogoproto.casttype) = "ServiceModelVersion"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.e2.v1beta1.ServiceModel.version"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ServiceModel::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.ServiceModel)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.gogoproto.casttype) = "ServiceModelName"];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.e2.v1beta1.ServiceModel.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2 [(.gogoproto.casttype) = "ServiceModelVersion"];
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.e2.v1beta1.ServiceModel.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.ServiceModel)
  return target;
}

size_t ServiceModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.ServiceModel)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.gogoproto.casttype) = "ServiceModelName"];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2 [(.gogoproto.casttype) = "ServiceModelVersion"];
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ServiceModel::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ServiceModel::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ServiceModel::GetClassData() const { return &_class_data_; }

void ServiceModel::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ServiceModel *>(to)->MergeFrom(
      static_cast<const ServiceModel &>(from));
}


void ServiceModel::MergeFrom(const ServiceModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.ServiceModel)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceModel::CopyFrom(const ServiceModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.ServiceModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceModel::IsInitialized() const {
  return true;
}

void ServiceModel::InternalSwap(ServiceModel* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceModel::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[2]);
}

// ===================================================================

class Error_Cause_Unknown::_Internal {
 public:
};

Error_Cause_Unknown::Error_Cause_Unknown(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.Error.Cause.Unknown)
}
Error_Cause_Unknown::Error_Cause_Unknown(const Error_Cause_Unknown& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.Error.Cause.Unknown)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Error_Cause_Unknown::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Error_Cause_Unknown::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Error_Cause_Unknown::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[3]);
}

// ===================================================================

class Error_Cause_Misc::_Internal {
 public:
};

Error_Cause_Misc::Error_Cause_Misc(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.Error.Cause.Misc)
}
Error_Cause_Misc::Error_Cause_Misc(const Error_Cause_Misc& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.Error.Cause.Misc)
}

inline void Error_Cause_Misc::SharedCtor() {
type_ = 0;
}

Error_Cause_Misc::~Error_Cause_Misc() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.Error.Cause.Misc)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Error_Cause_Misc::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Error_Cause_Misc::ArenaDtor(void* object) {
  Error_Cause_Misc* _this = reinterpret_cast< Error_Cause_Misc* >(object);
  (void)_this;
}
void Error_Cause_Misc::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error_Cause_Misc::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Error_Cause_Misc::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.Error.Cause.Misc)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error_Cause_Misc::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.Error.Cause.Misc.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::e2t::e2::v1beta1::Error_Cause_Misc_Type>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Error_Cause_Misc::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.Error.Cause.Misc)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Misc.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.Error.Cause.Misc)
  return target;
}

size_t Error_Cause_Misc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.Error.Cause.Misc)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Misc.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Error_Cause_Misc::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Error_Cause_Misc::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Error_Cause_Misc::GetClassData() const { return &_class_data_; }

void Error_Cause_Misc::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Error_Cause_Misc *>(to)->MergeFrom(
      static_cast<const Error_Cause_Misc &>(from));
}


void Error_Cause_Misc::MergeFrom(const Error_Cause_Misc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.Error.Cause.Misc)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Error_Cause_Misc::CopyFrom(const Error_Cause_Misc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.Error.Cause.Misc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_Cause_Misc::IsInitialized() const {
  return true;
}

void Error_Cause_Misc::InternalSwap(Error_Cause_Misc* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error_Cause_Misc::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[4]);
}

// ===================================================================

class Error_Cause_Protocol::_Internal {
 public:
};

Error_Cause_Protocol::Error_Cause_Protocol(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
}
Error_Cause_Protocol::Error_Cause_Protocol(const Error_Cause_Protocol& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
}

inline void Error_Cause_Protocol::SharedCtor() {
type_ = 0;
}

Error_Cause_Protocol::~Error_Cause_Protocol() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Error_Cause_Protocol::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Error_Cause_Protocol::ArenaDtor(void* object) {
  Error_Cause_Protocol* _this = reinterpret_cast< Error_Cause_Protocol* >(object);
  (void)_this;
}
void Error_Cause_Protocol::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error_Cause_Protocol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Error_Cause_Protocol::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error_Cause_Protocol::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.Error.Cause.Protocol.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::e2t::e2::v1beta1::Error_Cause_Protocol_Type>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Error_Cause_Protocol::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Protocol.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
  return target;
}

size_t Error_Cause_Protocol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Protocol.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Error_Cause_Protocol::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Error_Cause_Protocol::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Error_Cause_Protocol::GetClassData() const { return &_class_data_; }

void Error_Cause_Protocol::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Error_Cause_Protocol *>(to)->MergeFrom(
      static_cast<const Error_Cause_Protocol &>(from));
}


void Error_Cause_Protocol::MergeFrom(const Error_Cause_Protocol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Error_Cause_Protocol::CopyFrom(const Error_Cause_Protocol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.Error.Cause.Protocol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_Cause_Protocol::IsInitialized() const {
  return true;
}

void Error_Cause_Protocol::InternalSwap(Error_Cause_Protocol* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error_Cause_Protocol::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[5]);
}

// ===================================================================

class Error_Cause_Ric::_Internal {
 public:
};

Error_Cause_Ric::Error_Cause_Ric(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.Error.Cause.Ric)
}
Error_Cause_Ric::Error_Cause_Ric(const Error_Cause_Ric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.Error.Cause.Ric)
}

inline void Error_Cause_Ric::SharedCtor() {
type_ = 0;
}

Error_Cause_Ric::~Error_Cause_Ric() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.Error.Cause.Ric)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Error_Cause_Ric::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Error_Cause_Ric::ArenaDtor(void* object) {
  Error_Cause_Ric* _this = reinterpret_cast< Error_Cause_Ric* >(object);
  (void)_this;
}
void Error_Cause_Ric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error_Cause_Ric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Error_Cause_Ric::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.Error.Cause.Ric)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error_Cause_Ric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.Error.Cause.Ric.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::e2t::e2::v1beta1::Error_Cause_Ric_Type>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Error_Cause_Ric::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.Error.Cause.Ric)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Ric.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.Error.Cause.Ric)
  return target;
}

size_t Error_Cause_Ric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.Error.Cause.Ric)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Ric.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Error_Cause_Ric::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Error_Cause_Ric::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Error_Cause_Ric::GetClassData() const { return &_class_data_; }

void Error_Cause_Ric::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Error_Cause_Ric *>(to)->MergeFrom(
      static_cast<const Error_Cause_Ric &>(from));
}


void Error_Cause_Ric::MergeFrom(const Error_Cause_Ric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.Error.Cause.Ric)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Error_Cause_Ric::CopyFrom(const Error_Cause_Ric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.Error.Cause.Ric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_Cause_Ric::IsInitialized() const {
  return true;
}

void Error_Cause_Ric::InternalSwap(Error_Cause_Ric* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error_Cause_Ric::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[6]);
}

// ===================================================================

class Error_Cause_RicService::_Internal {
 public:
};

Error_Cause_RicService::Error_Cause_RicService(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.Error.Cause.RicService)
}
Error_Cause_RicService::Error_Cause_RicService(const Error_Cause_RicService& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.Error.Cause.RicService)
}

inline void Error_Cause_RicService::SharedCtor() {
type_ = 0;
}

Error_Cause_RicService::~Error_Cause_RicService() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.Error.Cause.RicService)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Error_Cause_RicService::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Error_Cause_RicService::ArenaDtor(void* object) {
  Error_Cause_RicService* _this = reinterpret_cast< Error_Cause_RicService* >(object);
  (void)_this;
}
void Error_Cause_RicService::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error_Cause_RicService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Error_Cause_RicService::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.Error.Cause.RicService)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error_Cause_RicService::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.Error.Cause.RicService.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::e2t::e2::v1beta1::Error_Cause_RicService_Type>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Error_Cause_RicService::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.Error.Cause.RicService)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.RicService.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.Error.Cause.RicService)
  return target;
}

size_t Error_Cause_RicService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.Error.Cause.RicService)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.RicService.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Error_Cause_RicService::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Error_Cause_RicService::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Error_Cause_RicService::GetClassData() const { return &_class_data_; }

void Error_Cause_RicService::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Error_Cause_RicService *>(to)->MergeFrom(
      static_cast<const Error_Cause_RicService &>(from));
}


void Error_Cause_RicService::MergeFrom(const Error_Cause_RicService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.Error.Cause.RicService)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Error_Cause_RicService::CopyFrom(const Error_Cause_RicService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.Error.Cause.RicService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_Cause_RicService::IsInitialized() const {
  return true;
}

void Error_Cause_RicService::InternalSwap(Error_Cause_RicService* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error_Cause_RicService::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[7]);
}

// ===================================================================

class Error_Cause_Transport::_Internal {
 public:
};

Error_Cause_Transport::Error_Cause_Transport(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.Error.Cause.Transport)
}
Error_Cause_Transport::Error_Cause_Transport(const Error_Cause_Transport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.Error.Cause.Transport)
}

inline void Error_Cause_Transport::SharedCtor() {
type_ = 0;
}

Error_Cause_Transport::~Error_Cause_Transport() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.Error.Cause.Transport)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Error_Cause_Transport::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Error_Cause_Transport::ArenaDtor(void* object) {
  Error_Cause_Transport* _this = reinterpret_cast< Error_Cause_Transport* >(object);
  (void)_this;
}
void Error_Cause_Transport::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error_Cause_Transport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Error_Cause_Transport::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.Error.Cause.Transport)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error_Cause_Transport::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.Error.Cause.Transport.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::e2t::e2::v1beta1::Error_Cause_Transport_Type>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Error_Cause_Transport::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.Error.Cause.Transport)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Transport.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.Error.Cause.Transport)
  return target;
}

size_t Error_Cause_Transport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.Error.Cause.Transport)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Transport.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Error_Cause_Transport::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Error_Cause_Transport::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Error_Cause_Transport::GetClassData() const { return &_class_data_; }

void Error_Cause_Transport::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Error_Cause_Transport *>(to)->MergeFrom(
      static_cast<const Error_Cause_Transport &>(from));
}


void Error_Cause_Transport::MergeFrom(const Error_Cause_Transport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.Error.Cause.Transport)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Error_Cause_Transport::CopyFrom(const Error_Cause_Transport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.Error.Cause.Transport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_Cause_Transport::IsInitialized() const {
  return true;
}

void Error_Cause_Transport::InternalSwap(Error_Cause_Transport* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error_Cause_Transport::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[8]);
}

// ===================================================================

class Error_Cause::_Internal {
 public:
  static const ::onos::e2t::e2::v1beta1::Error_Cause_Unknown& unknown(const Error_Cause* msg);
  static const ::onos::e2t::e2::v1beta1::Error_Cause_Protocol& protocol(const Error_Cause* msg);
  static const ::onos::e2t::e2::v1beta1::Error_Cause_Ric& ric(const Error_Cause* msg);
  static const ::onos::e2t::e2::v1beta1::Error_Cause_RicService& ric_service(const Error_Cause* msg);
  static const ::onos::e2t::e2::v1beta1::Error_Cause_Transport& transport(const Error_Cause* msg);
  static const ::onos::e2t::e2::v1beta1::Error_Cause_Misc& misc(const Error_Cause* msg);
};

const ::onos::e2t::e2::v1beta1::Error_Cause_Unknown&
Error_Cause::_Internal::unknown(const Error_Cause* msg) {
  return *msg->cause_.unknown_;
}
const ::onos::e2t::e2::v1beta1::Error_Cause_Protocol&
Error_Cause::_Internal::protocol(const Error_Cause* msg) {
  return *msg->cause_.protocol_;
}
const ::onos::e2t::e2::v1beta1::Error_Cause_Ric&
Error_Cause::_Internal::ric(const Error_Cause* msg) {
  return *msg->cause_.ric_;
}
const ::onos::e2t::e2::v1beta1::Error_Cause_RicService&
Error_Cause::_Internal::ric_service(const Error_Cause* msg) {
  return *msg->cause_.ric_service_;
}
const ::onos::e2t::e2::v1beta1::Error_Cause_Transport&
Error_Cause::_Internal::transport(const Error_Cause* msg) {
  return *msg->cause_.transport_;
}
const ::onos::e2t::e2::v1beta1::Error_Cause_Misc&
Error_Cause::_Internal::misc(const Error_Cause* msg) {
  return *msg->cause_.misc_;
}
void Error_Cause::set_allocated_unknown(::onos::e2t::e2::v1beta1::Error_Cause_Unknown* unknown) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_cause();
  if (unknown) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::e2t::e2::v1beta1::Error_Cause_Unknown>::GetOwningArena(unknown);
    if (message_arena != submessage_arena) {
      unknown = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unknown, submessage_arena);
    }
    set_has_unknown();
    cause_.unknown_ = unknown;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.e2t.e2.v1beta1.Error.Cause.unknown)
}
void Error_Cause::set_allocated_protocol(::onos::e2t::e2::v1beta1::Error_Cause_Protocol* protocol) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_cause();
  if (protocol) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::e2t::e2::v1beta1::Error_Cause_Protocol>::GetOwningArena(protocol);
    if (message_arena != submessage_arena) {
      protocol = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, protocol, submessage_arena);
    }
    set_has_protocol();
    cause_.protocol_ = protocol;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.e2t.e2.v1beta1.Error.Cause.protocol)
}
void Error_Cause::set_allocated_ric(::onos::e2t::e2::v1beta1::Error_Cause_Ric* ric) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_cause();
  if (ric) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::e2t::e2::v1beta1::Error_Cause_Ric>::GetOwningArena(ric);
    if (message_arena != submessage_arena) {
      ric = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ric, submessage_arena);
    }
    set_has_ric();
    cause_.ric_ = ric;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.e2t.e2.v1beta1.Error.Cause.ric)
}
void Error_Cause::set_allocated_ric_service(::onos::e2t::e2::v1beta1::Error_Cause_RicService* ric_service) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_cause();
  if (ric_service) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::e2t::e2::v1beta1::Error_Cause_RicService>::GetOwningArena(ric_service);
    if (message_arena != submessage_arena) {
      ric_service = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ric_service, submessage_arena);
    }
    set_has_ric_service();
    cause_.ric_service_ = ric_service;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.e2t.e2.v1beta1.Error.Cause.ric_service)
}
void Error_Cause::set_allocated_transport(::onos::e2t::e2::v1beta1::Error_Cause_Transport* transport) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_cause();
  if (transport) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::e2t::e2::v1beta1::Error_Cause_Transport>::GetOwningArena(transport);
    if (message_arena != submessage_arena) {
      transport = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, transport, submessage_arena);
    }
    set_has_transport();
    cause_.transport_ = transport;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.e2t.e2.v1beta1.Error.Cause.transport)
}
void Error_Cause::set_allocated_misc(::onos::e2t::e2::v1beta1::Error_Cause_Misc* misc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_cause();
  if (misc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::e2t::e2::v1beta1::Error_Cause_Misc>::GetOwningArena(misc);
    if (message_arena != submessage_arena) {
      misc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, misc, submessage_arena);
    }
    set_has_misc();
    cause_.misc_ = misc;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.e2t.e2.v1beta1.Error.Cause.misc)
}
Error_Cause::Error_Cause(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.Error.Cause)
}
Error_Cause::Error_Cause(const Error_Cause& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_cause();
  switch (from.cause_case()) {
    case kUnknown: {
      _internal_mutable_unknown()->::onos::e2t::e2::v1beta1::Error_Cause_Unknown::MergeFrom(from._internal_unknown());
      break;
    }
    case kProtocol: {
      _internal_mutable_protocol()->::onos::e2t::e2::v1beta1::Error_Cause_Protocol::MergeFrom(from._internal_protocol());
      break;
    }
    case kRic: {
      _internal_mutable_ric()->::onos::e2t::e2::v1beta1::Error_Cause_Ric::MergeFrom(from._internal_ric());
      break;
    }
    case kRicService: {
      _internal_mutable_ric_service()->::onos::e2t::e2::v1beta1::Error_Cause_RicService::MergeFrom(from._internal_ric_service());
      break;
    }
    case kTransport: {
      _internal_mutable_transport()->::onos::e2t::e2::v1beta1::Error_Cause_Transport::MergeFrom(from._internal_transport());
      break;
    }
    case kMisc: {
      _internal_mutable_misc()->::onos::e2t::e2::v1beta1::Error_Cause_Misc::MergeFrom(from._internal_misc());
      break;
    }
    case CAUSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.Error.Cause)
}

inline void Error_Cause::SharedCtor() {
clear_has_cause();
}

Error_Cause::~Error_Cause() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.Error.Cause)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Error_Cause::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_cause()) {
    clear_cause();
  }
}

void Error_Cause::ArenaDtor(void* object) {
  Error_Cause* _this = reinterpret_cast< Error_Cause* >(object);
  (void)_this;
}
void Error_Cause::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error_Cause::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Error_Cause::clear_cause() {
// @@protoc_insertion_point(one_of_clear_start:onos.e2t.e2.v1beta1.Error.Cause)
  switch (cause_case()) {
    case kUnknown: {
      if (GetArenaForAllocation() == nullptr) {
        delete cause_.unknown_;
      }
      break;
    }
    case kProtocol: {
      if (GetArenaForAllocation() == nullptr) {
        delete cause_.protocol_;
      }
      break;
    }
    case kRic: {
      if (GetArenaForAllocation() == nullptr) {
        delete cause_.ric_;
      }
      break;
    }
    case kRicService: {
      if (GetArenaForAllocation() == nullptr) {
        delete cause_.ric_service_;
      }
      break;
    }
    case kTransport: {
      if (GetArenaForAllocation() == nullptr) {
        delete cause_.transport_;
      }
      break;
    }
    case kMisc: {
      if (GetArenaForAllocation() == nullptr) {
        delete cause_.misc_;
      }
      break;
    }
    case CAUSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CAUSE_NOT_SET;
}


void Error_Cause::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.Error.Cause)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cause();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error_Cause::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.Error.Cause.Unknown unknown = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_unknown(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.Error.Cause.Protocol protocol = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_protocol(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.Error.Cause.Ric ric = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_ric(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.Error.Cause.RicService ric_service = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ric_service(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.Error.Cause.Transport transport = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_transport(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.e2.v1beta1.Error.Cause.Misc misc = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_misc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Error_Cause::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.Error.Cause)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause.Unknown unknown = 1;
  if (_internal_has_unknown()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::unknown(this), target, stream);
  }

  // .onos.e2t.e2.v1beta1.Error.Cause.Protocol protocol = 2;
  if (_internal_has_protocol()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::protocol(this), target, stream);
  }

  // .onos.e2t.e2.v1beta1.Error.Cause.Ric ric = 3;
  if (_internal_has_ric()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::ric(this), target, stream);
  }

  // .onos.e2t.e2.v1beta1.Error.Cause.RicService ric_service = 4;
  if (_internal_has_ric_service()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::ric_service(this), target, stream);
  }

  // .onos.e2t.e2.v1beta1.Error.Cause.Transport transport = 5;
  if (_internal_has_transport()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::transport(this), target, stream);
  }

  // .onos.e2t.e2.v1beta1.Error.Cause.Misc misc = 6;
  if (_internal_has_misc()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::misc(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.Error.Cause)
  return target;
}

size_t Error_Cause::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.Error.Cause)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (cause_case()) {
    // .onos.e2t.e2.v1beta1.Error.Cause.Unknown unknown = 1;
    case kUnknown: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cause_.unknown_);
      break;
    }
    // .onos.e2t.e2.v1beta1.Error.Cause.Protocol protocol = 2;
    case kProtocol: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cause_.protocol_);
      break;
    }
    // .onos.e2t.e2.v1beta1.Error.Cause.Ric ric = 3;
    case kRic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cause_.ric_);
      break;
    }
    // .onos.e2t.e2.v1beta1.Error.Cause.RicService ric_service = 4;
    case kRicService: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cause_.ric_service_);
      break;
    }
    // .onos.e2t.e2.v1beta1.Error.Cause.Transport transport = 5;
    case kTransport: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cause_.transport_);
      break;
    }
    // .onos.e2t.e2.v1beta1.Error.Cause.Misc misc = 6;
    case kMisc: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *cause_.misc_);
      break;
    }
    case CAUSE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Error_Cause::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Error_Cause::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Error_Cause::GetClassData() const { return &_class_data_; }

void Error_Cause::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Error_Cause *>(to)->MergeFrom(
      static_cast<const Error_Cause &>(from));
}


void Error_Cause::MergeFrom(const Error_Cause& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.Error.Cause)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.cause_case()) {
    case kUnknown: {
      _internal_mutable_unknown()->::onos::e2t::e2::v1beta1::Error_Cause_Unknown::MergeFrom(from._internal_unknown());
      break;
    }
    case kProtocol: {
      _internal_mutable_protocol()->::onos::e2t::e2::v1beta1::Error_Cause_Protocol::MergeFrom(from._internal_protocol());
      break;
    }
    case kRic: {
      _internal_mutable_ric()->::onos::e2t::e2::v1beta1::Error_Cause_Ric::MergeFrom(from._internal_ric());
      break;
    }
    case kRicService: {
      _internal_mutable_ric_service()->::onos::e2t::e2::v1beta1::Error_Cause_RicService::MergeFrom(from._internal_ric_service());
      break;
    }
    case kTransport: {
      _internal_mutable_transport()->::onos::e2t::e2::v1beta1::Error_Cause_Transport::MergeFrom(from._internal_transport());
      break;
    }
    case kMisc: {
      _internal_mutable_misc()->::onos::e2t::e2::v1beta1::Error_Cause_Misc::MergeFrom(from._internal_misc());
      break;
    }
    case CAUSE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Error_Cause::CopyFrom(const Error_Cause& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.Error.Cause)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_Cause::IsInitialized() const {
  return true;
}

void Error_Cause::InternalSwap(Error_Cause* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(cause_, other->cause_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error_Cause::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[9]);
}

// ===================================================================

class Error::_Internal {
 public:
  static const ::onos::e2t::e2::v1beta1::Error_Cause& cause(const Error* msg);
};

const ::onos::e2t::e2::v1beta1::Error_Cause&
Error::_Internal::cause(const Error* msg) {
  return *msg->cause_;
}
Error::Error(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.e2.v1beta1.Error)
}
Error::Error(const Error& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cause()) {
    cause_ = new ::onos::e2t::e2::v1beta1::Error_Cause(*from.cause_);
  } else {
    cause_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.e2.v1beta1.Error)
}

inline void Error::SharedCtor() {
cause_ = nullptr;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:onos.e2t.e2.v1beta1.Error)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Error::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete cause_;
}

void Error::ArenaDtor(void* object) {
  Error* _this = reinterpret_cast< Error* >(object);
  (void)_this;
}
void Error::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.e2.v1beta1.Error)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && cause_ != nullptr) {
    delete cause_;
  }
  cause_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Error::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.e2t.e2.v1beta1.Error.Cause cause = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cause(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Error::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.e2.v1beta1.Error)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause cause = 1;
  if (this->_internal_has_cause()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::cause(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.e2.v1beta1.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.e2.v1beta1.Error)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.e2t.e2.v1beta1.Error.Cause cause = 1;
  if (this->_internal_has_cause()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cause_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Error::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Error::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Error::GetClassData() const { return &_class_data_; }

void Error::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Error *>(to)->MergeFrom(
      static_cast<const Error &>(from));
}


void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.e2.v1beta1.Error)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_cause()) {
    _internal_mutable_cause()->::onos::e2t::e2::v1beta1::Error_Cause::MergeFrom(from._internal_cause());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.e2.v1beta1.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::InternalSwap(Error* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(cause_, other->cause_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Error::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_getter, &descriptor_table_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto_once,
      file_level_metadata_onos_2fe2t_2fe2_2fv1beta1_2fe2_2eproto[10]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace e2
}  // namespace e2t
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::RequestHeaders* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::RequestHeaders >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::RequestHeaders >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::ResponseHeaders* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::ResponseHeaders >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::ResponseHeaders >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::ServiceModel* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::ServiceModel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::ServiceModel >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::Error_Cause_Unknown* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::Error_Cause_Unknown >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::Error_Cause_Unknown >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::Error_Cause_Misc* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::Error_Cause_Misc >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::Error_Cause_Misc >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::Error_Cause_Protocol* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::Error_Cause_Protocol >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::Error_Cause_Protocol >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::Error_Cause_Ric* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::Error_Cause_Ric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::Error_Cause_Ric >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::Error_Cause_RicService* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::Error_Cause_RicService >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::Error_Cause_RicService >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::Error_Cause_Transport* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::Error_Cause_Transport >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::Error_Cause_Transport >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::Error_Cause* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::Error_Cause >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::Error_Cause >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::e2::v1beta1::Error* Arena::CreateMaybeMessage< ::onos::e2t::e2::v1beta1::Error >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::e2::v1beta1::Error >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
