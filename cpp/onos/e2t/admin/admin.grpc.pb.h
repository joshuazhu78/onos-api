// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/e2t/admin/admin.proto
// Original file comments:
// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef GRPC_onos_2fe2t_2fadmin_2fadmin_2eproto__INCLUDED
#define GRPC_onos_2fe2t_2fadmin_2fadmin_2eproto__INCLUDED

#include "onos/e2t/admin/admin.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace e2t {
namespace admin {

// E2TAdminService provides means for enhanced interactions with the ONOS RIC E2 Termination service.
class E2TAdminService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.e2t.admin.E2TAdminService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // UploadRegisterServiceModel uploads and adds the model plugin to the list of supported models.
    // The file is serialized in to Chunks of less than 4MB so as not to break the
    // gRPC byte array limit
    std::unique_ptr< ::grpc::ClientWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>> UploadRegisterServiceModel(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>>(UploadRegisterServiceModelRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>> AsyncUploadRegisterServiceModel(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>>(AsyncUploadRegisterServiceModelRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>> PrepareAsyncUploadRegisterServiceModel(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>>(PrepareAsyncUploadRegisterServiceModelRaw(context, response, cq));
    }
    // ListRegisteredServiceModels returns a stream of registered service models.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>> ListRegisteredServiceModels(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>>(ListRegisteredServiceModelsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>> AsyncListRegisteredServiceModels(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>>(AsyncListRegisteredServiceModelsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>> PrepareAsyncListRegisteredServiceModels(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>>(PrepareAsyncListRegisteredServiceModelsRaw(context, request, cq));
    }
    // ListE2NodeConnections returns a stream of existing SCTP connections.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>> ListE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>>(ListE2NodeConnectionsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>> AsyncListE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>>(AsyncListE2NodeConnectionsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>> PrepareAsyncListE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>>(PrepareAsyncListE2NodeConnectionsRaw(context, request, cq));
    }
    // DropE2NodeConnections drops the specified E2 node SCTP connections
    virtual ::grpc::Status DropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::onos::e2t::admin::DropE2NodeConnectionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::e2t::admin::DropE2NodeConnectionsResponse>> AsyncDropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::e2t::admin::DropE2NodeConnectionsResponse>>(AsyncDropE2NodeConnectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::e2t::admin::DropE2NodeConnectionsResponse>> PrepareAsyncDropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::e2t::admin::DropE2NodeConnectionsResponse>>(PrepareAsyncDropE2NodeConnectionsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // UploadRegisterServiceModel uploads and adds the model plugin to the list of supported models.
      // The file is serialized in to Chunks of less than 4MB so as not to break the
      // gRPC byte array limit
      virtual void UploadRegisterServiceModel(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::ClientWriteReactor< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* reactor) = 0;
      // ListRegisteredServiceModels returns a stream of registered service models.
      virtual void ListRegisteredServiceModels(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* request, ::grpc::ClientReadReactor< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* reactor) = 0;
      // ListE2NodeConnections returns a stream of existing SCTP connections.
      virtual void ListE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* request, ::grpc::ClientReadReactor< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* reactor) = 0;
      // DropE2NodeConnections drops the specified E2 node SCTP connections
      virtual void DropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* request, ::onos::e2t::admin::DropE2NodeConnectionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* request, ::onos::e2t::admin::DropE2NodeConnectionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* UploadRegisterServiceModelRaw(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* AsyncUploadRegisterServiceModelRaw(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* PrepareAsyncUploadRegisterServiceModelRaw(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* ListRegisteredServiceModelsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* AsyncListRegisteredServiceModelsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* PrepareAsyncListRegisteredServiceModelsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* ListE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* AsyncListE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* PrepareAsyncListE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::e2t::admin::DropE2NodeConnectionsResponse>* AsyncDropE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::e2t::admin::DropE2NodeConnectionsResponse>* PrepareAsyncDropE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    std::unique_ptr< ::grpc::ClientWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>> UploadRegisterServiceModel(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>>(UploadRegisterServiceModelRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>> AsyncUploadRegisterServiceModel(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>>(AsyncUploadRegisterServiceModelRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>> PrepareAsyncUploadRegisterServiceModel(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>>(PrepareAsyncUploadRegisterServiceModelRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>> ListRegisteredServiceModels(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>>(ListRegisteredServiceModelsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>> AsyncListRegisteredServiceModels(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>>(AsyncListRegisteredServiceModelsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>> PrepareAsyncListRegisteredServiceModels(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>>(PrepareAsyncListRegisteredServiceModelsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>> ListE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>>(ListE2NodeConnectionsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>> AsyncListE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>>(AsyncListE2NodeConnectionsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>> PrepareAsyncListE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>>(PrepareAsyncListE2NodeConnectionsRaw(context, request, cq));
    }
    ::grpc::Status DropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::onos::e2t::admin::DropE2NodeConnectionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::e2t::admin::DropE2NodeConnectionsResponse>> AsyncDropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::e2t::admin::DropE2NodeConnectionsResponse>>(AsyncDropE2NodeConnectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::e2t::admin::DropE2NodeConnectionsResponse>> PrepareAsyncDropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::e2t::admin::DropE2NodeConnectionsResponse>>(PrepareAsyncDropE2NodeConnectionsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void UploadRegisterServiceModel(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::ClientWriteReactor< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* reactor) override;
      void ListRegisteredServiceModels(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* request, ::grpc::ClientReadReactor< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* reactor) override;
      void ListE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* request, ::grpc::ClientReadReactor< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* reactor) override;
      void DropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* request, ::onos::e2t::admin::DropE2NodeConnectionsResponse* response, std::function<void(::grpc::Status)>) override;
      void DropE2NodeConnections(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* request, ::onos::e2t::admin::DropE2NodeConnectionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* UploadRegisterServiceModelRaw(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response) override;
    ::grpc::ClientAsyncWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* AsyncUploadRegisterServiceModelRaw(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* PrepareAsyncUploadRegisterServiceModelRaw(::grpc::ClientContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* ListRegisteredServiceModelsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* AsyncListRegisteredServiceModelsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* PrepareAsyncListRegisteredServiceModelsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* ListE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* AsyncListE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* PrepareAsyncListE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::e2t::admin::DropE2NodeConnectionsResponse>* AsyncDropE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::e2t::admin::DropE2NodeConnectionsResponse>* PrepareAsyncDropE2NodeConnectionsRaw(::grpc::ClientContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_UploadRegisterServiceModel_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRegisteredServiceModels_;
    const ::grpc::internal::RpcMethod rpcmethod_ListE2NodeConnections_;
    const ::grpc::internal::RpcMethod rpcmethod_DropE2NodeConnections_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // UploadRegisterServiceModel uploads and adds the model plugin to the list of supported models.
    // The file is serialized in to Chunks of less than 4MB so as not to break the
    // gRPC byte array limit
    virtual ::grpc::Status UploadRegisterServiceModel(::grpc::ServerContext* context, ::grpc::ServerReader< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* reader, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response);
    // ListRegisteredServiceModels returns a stream of registered service models.
    virtual ::grpc::Status ListRegisteredServiceModels(::grpc::ServerContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* request, ::grpc::ServerWriter< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* writer);
    // ListE2NodeConnections returns a stream of existing SCTP connections.
    virtual ::grpc::Status ListE2NodeConnections(::grpc::ServerContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* request, ::grpc::ServerWriter< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* writer);
    // DropE2NodeConnections drops the specified E2 node SCTP connections
    virtual ::grpc::Status DropE2NodeConnections(::grpc::ServerContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* request, ::onos::e2t::admin::DropE2NodeConnectionsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_UploadRegisterServiceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UploadRegisterServiceModel() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_UploadRegisterServiceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadRegisterServiceModel(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* /*reader*/, ::onos::e2t::admin::UploadRegisterServiceModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadRegisterServiceModel(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::onos::e2t::admin::UploadRegisterServiceModelResponse, ::onos::e2t::admin::UploadRegisterServiceModelRequest>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(0, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRegisteredServiceModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRegisteredServiceModels() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListRegisteredServiceModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredServiceModels(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRegisteredServiceModels(::grpc::ServerContext* context, ::onos::e2t::admin::ListRegisteredServiceModelsRequest* request, ::grpc::ServerAsyncWriter< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListE2NodeConnections() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListE2NodeConnections(::grpc::ServerContext* context, ::onos::e2t::admin::ListE2NodeConnectionsRequest* request, ::grpc::ServerAsyncWriter< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DropE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DropE2NodeConnections() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DropE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* /*request*/, ::onos::e2t::admin::DropE2NodeConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropE2NodeConnections(::grpc::ServerContext* context, ::onos::e2t::admin::DropE2NodeConnectionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::e2t::admin::DropE2NodeConnectionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_UploadRegisterServiceModel<WithAsyncMethod_ListRegisteredServiceModels<WithAsyncMethod_ListE2NodeConnections<WithAsyncMethod_DropE2NodeConnections<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_UploadRegisterServiceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UploadRegisterServiceModel() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackClientStreamingHandler< ::onos::e2t::admin::UploadRegisterServiceModelRequest, ::onos::e2t::admin::UploadRegisterServiceModelResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, ::onos::e2t::admin::UploadRegisterServiceModelResponse* response) { return this->UploadRegisterServiceModel(context, response); }));
    }
    ~WithCallbackMethod_UploadRegisterServiceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadRegisterServiceModel(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* /*reader*/, ::onos::e2t::admin::UploadRegisterServiceModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* UploadRegisterServiceModel(
      ::grpc::CallbackServerContext* /*context*/, ::onos::e2t::admin::UploadRegisterServiceModelResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRegisteredServiceModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRegisteredServiceModels() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::e2t::admin::ListRegisteredServiceModelsRequest, ::onos::e2t::admin::ListRegisteredServiceModelsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* request) { return this->ListRegisteredServiceModels(context, request); }));
    }
    ~WithCallbackMethod_ListRegisteredServiceModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredServiceModels(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* ListRegisteredServiceModels(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListE2NodeConnections() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::e2t::admin::ListE2NodeConnectionsRequest, ::onos::e2t::admin::ListE2NodeConnectionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* request) { return this->ListE2NodeConnections(context, request); }));
    }
    ~WithCallbackMethod_ListE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* ListE2NodeConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DropE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DropE2NodeConnections() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::e2t::admin::DropE2NodeConnectionsRequest, ::onos::e2t::admin::DropE2NodeConnectionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* request, ::onos::e2t::admin::DropE2NodeConnectionsResponse* response) { return this->DropE2NodeConnections(context, request, response); }));}
    void SetMessageAllocatorFor_DropE2NodeConnections(
        ::grpc::MessageAllocator< ::onos::e2t::admin::DropE2NodeConnectionsRequest, ::onos::e2t::admin::DropE2NodeConnectionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::e2t::admin::DropE2NodeConnectionsRequest, ::onos::e2t::admin::DropE2NodeConnectionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DropE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* /*request*/, ::onos::e2t::admin::DropE2NodeConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DropE2NodeConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* /*request*/, ::onos::e2t::admin::DropE2NodeConnectionsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_UploadRegisterServiceModel<WithCallbackMethod_ListRegisteredServiceModels<WithCallbackMethod_ListE2NodeConnections<WithCallbackMethod_DropE2NodeConnections<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_UploadRegisterServiceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UploadRegisterServiceModel() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_UploadRegisterServiceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadRegisterServiceModel(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* /*reader*/, ::onos::e2t::admin::UploadRegisterServiceModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRegisteredServiceModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRegisteredServiceModels() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListRegisteredServiceModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredServiceModels(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListE2NodeConnections() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DropE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DropE2NodeConnections() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DropE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* /*request*/, ::onos::e2t::admin::DropE2NodeConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_UploadRegisterServiceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UploadRegisterServiceModel() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_UploadRegisterServiceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadRegisterServiceModel(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* /*reader*/, ::onos::e2t::admin::UploadRegisterServiceModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadRegisterServiceModel(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(0, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRegisteredServiceModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRegisteredServiceModels() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListRegisteredServiceModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredServiceModels(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRegisteredServiceModels(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListE2NodeConnections() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListE2NodeConnections(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DropE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DropE2NodeConnections() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DropE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* /*request*/, ::onos::e2t::admin::DropE2NodeConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropE2NodeConnections(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UploadRegisterServiceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UploadRegisterServiceModel() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->UploadRegisterServiceModel(context, response); }));
    }
    ~WithRawCallbackMethod_UploadRegisterServiceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadRegisterServiceModel(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::onos::e2t::admin::UploadRegisterServiceModelRequest>* /*reader*/, ::onos::e2t::admin::UploadRegisterServiceModelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* UploadRegisterServiceModel(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRegisteredServiceModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRegisteredServiceModels() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListRegisteredServiceModels(context, request); }));
    }
    ~WithRawCallbackMethod_ListRegisteredServiceModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredServiceModels(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListRegisteredServiceModels(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListE2NodeConnections() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListE2NodeConnections(context, request); }));
    }
    ~WithRawCallbackMethod_ListE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListE2NodeConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DropE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DropE2NodeConnections() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DropE2NodeConnections(context, request, response); }));
    }
    ~WithRawCallbackMethod_DropE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* /*request*/, ::onos::e2t::admin::DropE2NodeConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DropE2NodeConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DropE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DropE2NodeConnections() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::e2t::admin::DropE2NodeConnectionsRequest, ::onos::e2t::admin::DropE2NodeConnectionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::e2t::admin::DropE2NodeConnectionsRequest, ::onos::e2t::admin::DropE2NodeConnectionsResponse>* streamer) {
                       return this->StreamedDropE2NodeConnections(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DropE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DropE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::DropE2NodeConnectionsRequest* /*request*/, ::onos::e2t::admin::DropE2NodeConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDropE2NodeConnections(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::e2t::admin::DropE2NodeConnectionsRequest,::onos::e2t::admin::DropE2NodeConnectionsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_DropE2NodeConnections<Service > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_ListRegisteredServiceModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListRegisteredServiceModels() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::e2t::admin::ListRegisteredServiceModelsRequest, ::onos::e2t::admin::ListRegisteredServiceModelsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::e2t::admin::ListRegisteredServiceModelsRequest, ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* streamer) {
                       return this->StreamedListRegisteredServiceModels(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListRegisteredServiceModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRegisteredServiceModels(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListRegisteredServiceModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListRegisteredServiceModelsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListRegisteredServiceModels(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::e2t::admin::ListRegisteredServiceModelsRequest,::onos::e2t::admin::ListRegisteredServiceModelsResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_ListE2NodeConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListE2NodeConnections() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::e2t::admin::ListE2NodeConnectionsRequest, ::onos::e2t::admin::ListE2NodeConnectionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::e2t::admin::ListE2NodeConnectionsRequest, ::onos::e2t::admin::ListE2NodeConnectionsResponse>* streamer) {
                       return this->StreamedListE2NodeConnections(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListE2NodeConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListE2NodeConnections(::grpc::ServerContext* /*context*/, const ::onos::e2t::admin::ListE2NodeConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::e2t::admin::ListE2NodeConnectionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListE2NodeConnections(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::e2t::admin::ListE2NodeConnectionsRequest,::onos::e2t::admin::ListE2NodeConnectionsResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_ListRegisteredServiceModels<WithSplitStreamingMethod_ListE2NodeConnections<Service > > SplitStreamedService;
  typedef WithSplitStreamingMethod_ListRegisteredServiceModels<WithSplitStreamingMethod_ListE2NodeConnections<WithStreamedUnaryMethod_DropE2NodeConnections<Service > > > StreamedService;
};

}  // namespace admin
}  // namespace e2t
}  // namespace onos


#endif  // GRPC_onos_2fe2t_2fadmin_2fadmin_2eproto__INCLUDED
