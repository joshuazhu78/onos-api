// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/e2t/admin/admin.proto

#include "onos/e2t/admin/admin.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace e2t {
namespace admin {
constexpr UploadRegisterServiceModelRequest::UploadRegisterServiceModelRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : so_file_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , content_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UploadRegisterServiceModelRequestDefaultTypeInternal {
  constexpr UploadRegisterServiceModelRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UploadRegisterServiceModelRequestDefaultTypeInternal() {}
  union {
    UploadRegisterServiceModelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UploadRegisterServiceModelRequestDefaultTypeInternal _UploadRegisterServiceModelRequest_default_instance_;
constexpr UploadRegisterServiceModelResponse::UploadRegisterServiceModelResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UploadRegisterServiceModelResponseDefaultTypeInternal {
  constexpr UploadRegisterServiceModelResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UploadRegisterServiceModelResponseDefaultTypeInternal() {}
  union {
    UploadRegisterServiceModelResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UploadRegisterServiceModelResponseDefaultTypeInternal _UploadRegisterServiceModelResponse_default_instance_;
constexpr ListRegisteredServiceModelsResponse::ListRegisteredServiceModelsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListRegisteredServiceModelsResponseDefaultTypeInternal {
  constexpr ListRegisteredServiceModelsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRegisteredServiceModelsResponseDefaultTypeInternal() {}
  union {
    ListRegisteredServiceModelsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRegisteredServiceModelsResponseDefaultTypeInternal _ListRegisteredServiceModelsResponse_default_instance_;
constexpr ListRegisteredServiceModelsRequest::ListRegisteredServiceModelsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : model_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , model_version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ListRegisteredServiceModelsRequestDefaultTypeInternal {
  constexpr ListRegisteredServiceModelsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListRegisteredServiceModelsRequestDefaultTypeInternal() {}
  union {
    ListRegisteredServiceModelsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListRegisteredServiceModelsRequestDefaultTypeInternal _ListRegisteredServiceModelsRequest_default_instance_;
constexpr ListE2NodeConnectionsRequest::ListE2NodeConnectionsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ListE2NodeConnectionsRequestDefaultTypeInternal {
  constexpr ListE2NodeConnectionsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListE2NodeConnectionsRequestDefaultTypeInternal() {}
  union {
    ListE2NodeConnectionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListE2NodeConnectionsRequestDefaultTypeInternal _ListE2NodeConnectionsRequest_default_instance_;
constexpr RANFunction::RANFunction(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : oid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ran_function_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RANFunctionDefaultTypeInternal {
  constexpr RANFunctionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RANFunctionDefaultTypeInternal() {}
  union {
    RANFunction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RANFunctionDefaultTypeInternal _RANFunction_default_instance_;
constexpr ListE2NodeConnectionsResponse::ListE2NodeConnectionsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : remote_ip_()
  , ran_functions_()
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , plmn_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , node_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , remote_port_(0u)
  , connection_type_(0)

  , age_ms_(0){}
struct ListE2NodeConnectionsResponseDefaultTypeInternal {
  constexpr ListE2NodeConnectionsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListE2NodeConnectionsResponseDefaultTypeInternal() {}
  union {
    ListE2NodeConnectionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListE2NodeConnectionsResponseDefaultTypeInternal _ListE2NodeConnectionsResponse_default_instance_;
constexpr DropE2NodeConnectionsRequest::DropE2NodeConnectionsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : connections_(){}
struct DropE2NodeConnectionsRequestDefaultTypeInternal {
  constexpr DropE2NodeConnectionsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DropE2NodeConnectionsRequestDefaultTypeInternal() {}
  union {
    DropE2NodeConnectionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DropE2NodeConnectionsRequestDefaultTypeInternal _DropE2NodeConnectionsRequest_default_instance_;
constexpr DropE2NodeConnectionsResponse::DropE2NodeConnectionsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(){}
struct DropE2NodeConnectionsResponseDefaultTypeInternal {
  constexpr DropE2NodeConnectionsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DropE2NodeConnectionsResponseDefaultTypeInternal() {}
  union {
    DropE2NodeConnectionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DropE2NodeConnectionsResponseDefaultTypeInternal _DropE2NodeConnectionsResponse_default_instance_;
}  // namespace admin
}  // namespace e2t
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_onos_2fe2t_2fadmin_2fadmin_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fe2t_2fadmin_2fadmin_2eproto = nullptr;

const uint32_t TableStruct_onos_2fe2t_2fadmin_2fadmin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::UploadRegisterServiceModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::UploadRegisterServiceModelRequest, so_file_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::UploadRegisterServiceModelRequest, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::UploadRegisterServiceModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::UploadRegisterServiceModelResponse, name_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::UploadRegisterServiceModelResponse, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListRegisteredServiceModelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListRegisteredServiceModelsResponse, name_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListRegisteredServiceModelsResponse, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListRegisteredServiceModelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListRegisteredServiceModelsRequest, model_name_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListRegisteredServiceModelsRequest, model_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::RANFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::RANFunction, oid_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::RANFunction, ran_function_id_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::RANFunction, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, id_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, remote_ip_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, remote_port_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, node_id_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, plmn_id_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, connection_type_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, ran_functions_),
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::ListE2NodeConnectionsResponse, age_ms_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::DropE2NodeConnectionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::DropE2NodeConnectionsRequest, connections_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::DropE2NodeConnectionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::e2t::admin::DropE2NodeConnectionsResponse, success_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::e2t::admin::UploadRegisterServiceModelRequest)},
  { 8, -1, -1, sizeof(::onos::e2t::admin::UploadRegisterServiceModelResponse)},
  { 16, -1, -1, sizeof(::onos::e2t::admin::ListRegisteredServiceModelsResponse)},
  { 24, -1, -1, sizeof(::onos::e2t::admin::ListRegisteredServiceModelsRequest)},
  { 32, -1, -1, sizeof(::onos::e2t::admin::ListE2NodeConnectionsRequest)},
  { 38, -1, -1, sizeof(::onos::e2t::admin::RANFunction)},
  { 47, -1, -1, sizeof(::onos::e2t::admin::ListE2NodeConnectionsResponse)},
  { 61, -1, -1, sizeof(::onos::e2t::admin::DropE2NodeConnectionsRequest)},
  { 68, -1, -1, sizeof(::onos::e2t::admin::DropE2NodeConnectionsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_UploadRegisterServiceModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_UploadRegisterServiceModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_ListRegisteredServiceModelsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_ListRegisteredServiceModelsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_ListE2NodeConnectionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_RANFunction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_ListE2NodeConnectionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_DropE2NodeConnectionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::e2t::admin::_DropE2NodeConnectionsResponse_default_instance_),
};

const char descriptor_table_protodef_onos_2fe2t_2fadmin_2fadmin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032onos/e2t/admin/admin.proto\022\016onos.e2t.a"
  "dmin\"E\n!UploadRegisterServiceModelReques"
  "t\022\017\n\007so_file\030\001 \001(\t\022\017\n\007content\030\002 \001(\014\"C\n\"U"
  "ploadRegisterServiceModelResponse\022\014\n\004nam"
  "e\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\"D\n#ListRegister"
  "edServiceModelsResponse\022\014\n\004name\030\001 \001(\t\022\017\n"
  "\007version\030\002 \001(\t\"O\n\"ListRegisteredServiceM"
  "odelsRequest\022\022\n\nmodel_name\030\001 \001(\t\022\025\n\rmode"
  "l_version\030\002 \001(\t\"\036\n\034ListE2NodeConnections"
  "Request\"H\n\013RANFunction\022\013\n\003oid\030\001 \001(\t\022\027\n\017r"
  "an_function_id\030\002 \001(\t\022\023\n\013description\030\003 \001("
  "\014\"\370\001\n\035ListE2NodeConnectionsResponse\022\n\n\002i"
  "d\030\003 \001(\t\022\021\n\tremote_ip\030\001 \003(\t\022\023\n\013remote_por"
  "t\030\002 \001(\r\022\017\n\007node_id\030\007 \001(\t\022\017\n\007plmn_id\030\004 \001("
  "\t\022=\n\017connection_type\030\005 \001(\0162$.onos.e2t.ad"
  "min.E2NodeConnectionType\0222\n\rran_function"
  "s\030\006 \003(\0132\033.onos.e2t.admin.RANFunction\022\016\n\006"
  "age_ms\030\010 \001(\005\"b\n\034DropE2NodeConnectionsReq"
  "uest\022B\n\013connections\030\001 \003(\0132-.onos.e2t.adm"
  "in.ListE2NodeConnectionsResponse\"0\n\035Drop"
  "E2NodeConnectionsResponse\022\017\n\007success\030\001 \003"
  "(\010*O\n\024E2NodeConnectionType\022\013\n\007UNKNOWN\020\000\022"
  "\010\n\004G_NB\020\001\022\010\n\004E_NB\020\002\022\n\n\006ENG_MB\020\003\022\n\n\006NGE_N"
  "B\020\0042\222\004\n\017E2TAdminService\022\205\001\n\032UploadRegist"
  "erServiceModel\0221.onos.e2t.admin.UploadRe"
  "gisterServiceModelRequest\0322.onos.e2t.adm"
  "in.UploadRegisterServiceModelResponse(\001\022"
  "\210\001\n\033ListRegisteredServiceModels\0222.onos.e"
  "2t.admin.ListRegisteredServiceModelsRequ"
  "est\0323.onos.e2t.admin.ListRegisteredServi"
  "ceModelsResponse0\001\022v\n\025ListE2NodeConnecti"
  "ons\022,.onos.e2t.admin.ListE2NodeConnectio"
  "nsRequest\032-.onos.e2t.admin.ListE2NodeCon"
  "nectionsResponse0\001\022t\n\025DropE2NodeConnecti"
  "ons\022,.onos.e2t.admin.DropE2NodeConnectio"
  "nsRequest\032-.onos.e2t.admin.DropE2NodeCon"
  "nectionsResponseb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto = {
  false, false, 1464, descriptor_table_protodef_onos_2fe2t_2fadmin_2fadmin_2eproto, "onos/e2t/admin/admin.proto", 
  &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once, nullptr, 0, 9,
  schemas, file_default_instances, TableStruct_onos_2fe2t_2fadmin_2fadmin_2eproto::offsets,
  file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto, file_level_enum_descriptors_onos_2fe2t_2fadmin_2fadmin_2eproto, file_level_service_descriptors_onos_2fe2t_2fadmin_2fadmin_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter() {
  return &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fe2t_2fadmin_2fadmin_2eproto(&descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto);
namespace onos {
namespace e2t {
namespace admin {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* E2NodeConnectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto);
  return file_level_enum_descriptors_onos_2fe2t_2fadmin_2fadmin_2eproto[0];
}
bool E2NodeConnectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class UploadRegisterServiceModelRequest::_Internal {
 public:
};

UploadRegisterServiceModelRequest::UploadRegisterServiceModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.UploadRegisterServiceModelRequest)
}
UploadRegisterServiceModelRequest::UploadRegisterServiceModelRequest(const UploadRegisterServiceModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  so_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    so_file_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_so_file().empty()) {
    so_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_so_file(), 
      GetArenaForAllocation());
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.UploadRegisterServiceModelRequest)
}

inline void UploadRegisterServiceModelRequest::SharedCtor() {
so_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  so_file_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  content_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadRegisterServiceModelRequest::~UploadRegisterServiceModelRequest() {
  // @@protoc_insertion_point(destructor:onos.e2t.admin.UploadRegisterServiceModelRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UploadRegisterServiceModelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  so_file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UploadRegisterServiceModelRequest::ArenaDtor(void* object) {
  UploadRegisterServiceModelRequest* _this = reinterpret_cast< UploadRegisterServiceModelRequest* >(object);
  (void)_this;
}
void UploadRegisterServiceModelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadRegisterServiceModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadRegisterServiceModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.admin.UploadRegisterServiceModelRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  so_file_.ClearToEmpty();
  content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadRegisterServiceModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string so_file = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_so_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.UploadRegisterServiceModelRequest.so_file"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadRegisterServiceModelRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.admin.UploadRegisterServiceModelRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string so_file = 1;
  if (!this->_internal_so_file().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_so_file().data(), static_cast<int>(this->_internal_so_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.UploadRegisterServiceModelRequest.so_file");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_so_file(), target);
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.admin.UploadRegisterServiceModelRequest)
  return target;
}

size_t UploadRegisterServiceModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.admin.UploadRegisterServiceModelRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string so_file = 1;
  if (!this->_internal_so_file().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_so_file());
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadRegisterServiceModelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadRegisterServiceModelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadRegisterServiceModelRequest::GetClassData() const { return &_class_data_; }

void UploadRegisterServiceModelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadRegisterServiceModelRequest *>(to)->MergeFrom(
      static_cast<const UploadRegisterServiceModelRequest &>(from));
}


void UploadRegisterServiceModelRequest::MergeFrom(const UploadRegisterServiceModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.admin.UploadRegisterServiceModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_so_file().empty()) {
    _internal_set_so_file(from._internal_so_file());
  }
  if (!from._internal_content().empty()) {
    _internal_set_content(from._internal_content());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadRegisterServiceModelRequest::CopyFrom(const UploadRegisterServiceModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.admin.UploadRegisterServiceModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadRegisterServiceModelRequest::IsInitialized() const {
  return true;
}

void UploadRegisterServiceModelRequest::InternalSwap(UploadRegisterServiceModelRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &so_file_, lhs_arena,
      &other->so_file_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &content_, lhs_arena,
      &other->content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadRegisterServiceModelRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[0]);
}

// ===================================================================

class UploadRegisterServiceModelResponse::_Internal {
 public:
};

UploadRegisterServiceModelResponse::UploadRegisterServiceModelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.UploadRegisterServiceModelResponse)
}
UploadRegisterServiceModelResponse::UploadRegisterServiceModelResponse(const UploadRegisterServiceModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.UploadRegisterServiceModelResponse)
}

inline void UploadRegisterServiceModelResponse::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UploadRegisterServiceModelResponse::~UploadRegisterServiceModelResponse() {
  // @@protoc_insertion_point(destructor:onos.e2t.admin.UploadRegisterServiceModelResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UploadRegisterServiceModelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UploadRegisterServiceModelResponse::ArenaDtor(void* object) {
  UploadRegisterServiceModelResponse* _this = reinterpret_cast< UploadRegisterServiceModelResponse* >(object);
  (void)_this;
}
void UploadRegisterServiceModelResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UploadRegisterServiceModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UploadRegisterServiceModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.admin.UploadRegisterServiceModelResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UploadRegisterServiceModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.UploadRegisterServiceModelResponse.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.UploadRegisterServiceModelResponse.version"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UploadRegisterServiceModelResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.admin.UploadRegisterServiceModelResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.UploadRegisterServiceModelResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.UploadRegisterServiceModelResponse.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.admin.UploadRegisterServiceModelResponse)
  return target;
}

size_t UploadRegisterServiceModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.admin.UploadRegisterServiceModelResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UploadRegisterServiceModelResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UploadRegisterServiceModelResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UploadRegisterServiceModelResponse::GetClassData() const { return &_class_data_; }

void UploadRegisterServiceModelResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UploadRegisterServiceModelResponse *>(to)->MergeFrom(
      static_cast<const UploadRegisterServiceModelResponse &>(from));
}


void UploadRegisterServiceModelResponse::MergeFrom(const UploadRegisterServiceModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.admin.UploadRegisterServiceModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UploadRegisterServiceModelResponse::CopyFrom(const UploadRegisterServiceModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.admin.UploadRegisterServiceModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadRegisterServiceModelResponse::IsInitialized() const {
  return true;
}

void UploadRegisterServiceModelResponse::InternalSwap(UploadRegisterServiceModelResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UploadRegisterServiceModelResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[1]);
}

// ===================================================================

class ListRegisteredServiceModelsResponse::_Internal {
 public:
};

ListRegisteredServiceModelsResponse::ListRegisteredServiceModelsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.ListRegisteredServiceModelsResponse)
}
ListRegisteredServiceModelsResponse::ListRegisteredServiceModelsResponse(const ListRegisteredServiceModelsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.ListRegisteredServiceModelsResponse)
}

inline void ListRegisteredServiceModelsResponse::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListRegisteredServiceModelsResponse::~ListRegisteredServiceModelsResponse() {
  // @@protoc_insertion_point(destructor:onos.e2t.admin.ListRegisteredServiceModelsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRegisteredServiceModelsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRegisteredServiceModelsResponse::ArenaDtor(void* object) {
  ListRegisteredServiceModelsResponse* _this = reinterpret_cast< ListRegisteredServiceModelsResponse* >(object);
  (void)_this;
}
void ListRegisteredServiceModelsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRegisteredServiceModelsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRegisteredServiceModelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.admin.ListRegisteredServiceModelsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRegisteredServiceModelsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.ListRegisteredServiceModelsResponse.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.ListRegisteredServiceModelsResponse.version"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRegisteredServiceModelsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.admin.ListRegisteredServiceModelsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.ListRegisteredServiceModelsResponse.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.ListRegisteredServiceModelsResponse.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.admin.ListRegisteredServiceModelsResponse)
  return target;
}

size_t ListRegisteredServiceModelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.admin.ListRegisteredServiceModelsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRegisteredServiceModelsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRegisteredServiceModelsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRegisteredServiceModelsResponse::GetClassData() const { return &_class_data_; }

void ListRegisteredServiceModelsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRegisteredServiceModelsResponse *>(to)->MergeFrom(
      static_cast<const ListRegisteredServiceModelsResponse &>(from));
}


void ListRegisteredServiceModelsResponse::MergeFrom(const ListRegisteredServiceModelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.admin.ListRegisteredServiceModelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRegisteredServiceModelsResponse::CopyFrom(const ListRegisteredServiceModelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.admin.ListRegisteredServiceModelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRegisteredServiceModelsResponse::IsInitialized() const {
  return true;
}

void ListRegisteredServiceModelsResponse::InternalSwap(ListRegisteredServiceModelsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRegisteredServiceModelsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[2]);
}

// ===================================================================

class ListRegisteredServiceModelsRequest::_Internal {
 public:
};

ListRegisteredServiceModelsRequest::ListRegisteredServiceModelsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.ListRegisteredServiceModelsRequest)
}
ListRegisteredServiceModelsRequest::ListRegisteredServiceModelsRequest(const ListRegisteredServiceModelsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    model_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_model_name(), 
      GetArenaForAllocation());
  }
  model_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_version().empty()) {
    model_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_model_version(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.ListRegisteredServiceModelsRequest)
}

inline void ListRegisteredServiceModelsRequest::SharedCtor() {
model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListRegisteredServiceModelsRequest::~ListRegisteredServiceModelsRequest() {
  // @@protoc_insertion_point(destructor:onos.e2t.admin.ListRegisteredServiceModelsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListRegisteredServiceModelsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListRegisteredServiceModelsRequest::ArenaDtor(void* object) {
  ListRegisteredServiceModelsRequest* _this = reinterpret_cast< ListRegisteredServiceModelsRequest* >(object);
  (void)_this;
}
void ListRegisteredServiceModelsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListRegisteredServiceModelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListRegisteredServiceModelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.admin.ListRegisteredServiceModelsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_name_.ClearToEmpty();
  model_version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListRegisteredServiceModelsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.ListRegisteredServiceModelsRequest.model_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string model_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.ListRegisteredServiceModelsRequest.model_version"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListRegisteredServiceModelsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.admin.ListRegisteredServiceModelsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.ListRegisteredServiceModelsRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.ListRegisteredServiceModelsRequest.model_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.admin.ListRegisteredServiceModelsRequest)
  return target;
}

size_t ListRegisteredServiceModelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.admin.ListRegisteredServiceModelsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model_name = 1;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 2;
  if (!this->_internal_model_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListRegisteredServiceModelsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListRegisteredServiceModelsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListRegisteredServiceModelsRequest::GetClassData() const { return &_class_data_; }

void ListRegisteredServiceModelsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListRegisteredServiceModelsRequest *>(to)->MergeFrom(
      static_cast<const ListRegisteredServiceModelsRequest &>(from));
}


void ListRegisteredServiceModelsRequest::MergeFrom(const ListRegisteredServiceModelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.admin.ListRegisteredServiceModelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_model_name().empty()) {
    _internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_model_version().empty()) {
    _internal_set_model_version(from._internal_model_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListRegisteredServiceModelsRequest::CopyFrom(const ListRegisteredServiceModelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.admin.ListRegisteredServiceModelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRegisteredServiceModelsRequest::IsInitialized() const {
  return true;
}

void ListRegisteredServiceModelsRequest::InternalSwap(ListRegisteredServiceModelsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &model_name_, lhs_arena,
      &other->model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &model_version_, lhs_arena,
      &other->model_version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListRegisteredServiceModelsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[3]);
}

// ===================================================================

class ListE2NodeConnectionsRequest::_Internal {
 public:
};

ListE2NodeConnectionsRequest::ListE2NodeConnectionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.ListE2NodeConnectionsRequest)
}
ListE2NodeConnectionsRequest::ListE2NodeConnectionsRequest(const ListE2NodeConnectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.ListE2NodeConnectionsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListE2NodeConnectionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListE2NodeConnectionsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListE2NodeConnectionsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[4]);
}

// ===================================================================

class RANFunction::_Internal {
 public:
};

RANFunction::RANFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.RANFunction)
}
RANFunction::RANFunction(const RANFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    oid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_oid().empty()) {
    oid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_oid(), 
      GetArenaForAllocation());
  }
  ran_function_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ran_function_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ran_function_id().empty()) {
    ran_function_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ran_function_id(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.RANFunction)
}

inline void RANFunction::SharedCtor() {
oid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  oid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ran_function_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ran_function_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RANFunction::~RANFunction() {
  // @@protoc_insertion_point(destructor:onos.e2t.admin.RANFunction)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RANFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  oid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ran_function_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RANFunction::ArenaDtor(void* object) {
  RANFunction* _this = reinterpret_cast< RANFunction* >(object);
  (void)_this;
}
void RANFunction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RANFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RANFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.admin.RANFunction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oid_.ClearToEmpty();
  ran_function_id_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RANFunction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string oid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_oid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.RANFunction.oid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ran_function_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_ran_function_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.RANFunction.ran_function_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RANFunction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.admin.RANFunction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string oid = 1;
  if (!this->_internal_oid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oid().data(), static_cast<int>(this->_internal_oid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.RANFunction.oid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_oid(), target);
  }

  // string ran_function_id = 2;
  if (!this->_internal_ran_function_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ran_function_id().data(), static_cast<int>(this->_internal_ran_function_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.RANFunction.ran_function_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ran_function_id(), target);
  }

  // bytes description = 3;
  if (!this->_internal_description().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.admin.RANFunction)
  return target;
}

size_t RANFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.admin.RANFunction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string oid = 1;
  if (!this->_internal_oid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oid());
  }

  // string ran_function_id = 2;
  if (!this->_internal_ran_function_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ran_function_id());
  }

  // bytes description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RANFunction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RANFunction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RANFunction::GetClassData() const { return &_class_data_; }

void RANFunction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RANFunction *>(to)->MergeFrom(
      static_cast<const RANFunction &>(from));
}


void RANFunction::MergeFrom(const RANFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.admin.RANFunction)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_oid().empty()) {
    _internal_set_oid(from._internal_oid());
  }
  if (!from._internal_ran_function_id().empty()) {
    _internal_set_ran_function_id(from._internal_ran_function_id());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RANFunction::CopyFrom(const RANFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.admin.RANFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RANFunction::IsInitialized() const {
  return true;
}

void RANFunction::InternalSwap(RANFunction* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &oid_, lhs_arena,
      &other->oid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ran_function_id_, lhs_arena,
      &other->ran_function_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RANFunction::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[5]);
}

// ===================================================================

class ListE2NodeConnectionsResponse::_Internal {
 public:
};

ListE2NodeConnectionsResponse::ListE2NodeConnectionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  remote_ip_(arena),
  ran_functions_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.ListE2NodeConnectionsResponse)
}
ListE2NodeConnectionsResponse::ListE2NodeConnectionsResponse(const ListE2NodeConnectionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      remote_ip_(from.remote_ip_),
      ran_functions_(from.ran_functions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  plmn_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    plmn_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_plmn_id().empty()) {
    plmn_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_plmn_id(), 
      GetArenaForAllocation());
  }
  node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_node_id().empty()) {
    node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_node_id(), 
      GetArenaForAllocation());
  }
  ::memcpy(&remote_port_, &from.remote_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&age_ms_) -
    reinterpret_cast<char*>(&remote_port_)) + sizeof(age_ms_));
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.ListE2NodeConnectionsResponse)
}

inline void ListE2NodeConnectionsResponse::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
plmn_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  plmn_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&remote_port_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&age_ms_) -
    reinterpret_cast<char*>(&remote_port_)) + sizeof(age_ms_));
}

ListE2NodeConnectionsResponse::~ListE2NodeConnectionsResponse() {
  // @@protoc_insertion_point(destructor:onos.e2t.admin.ListE2NodeConnectionsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListE2NodeConnectionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  plmn_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListE2NodeConnectionsResponse::ArenaDtor(void* object) {
  ListE2NodeConnectionsResponse* _this = reinterpret_cast< ListE2NodeConnectionsResponse* >(object);
  (void)_this;
}
void ListE2NodeConnectionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListE2NodeConnectionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListE2NodeConnectionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.admin.ListE2NodeConnectionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remote_ip_.Clear();
  ran_functions_.Clear();
  id_.ClearToEmpty();
  plmn_id_.ClearToEmpty();
  node_id_.ClearToEmpty();
  ::memset(&remote_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&age_ms_) -
      reinterpret_cast<char*>(&remote_port_)) + sizeof(age_ms_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListE2NodeConnectionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string remote_ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_remote_ip();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.ListE2NodeConnectionsResponse.remote_ip"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 remote_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          remote_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.ListE2NodeConnectionsResponse.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string plmn_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_plmn_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.ListE2NodeConnectionsResponse.plmn_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.e2t.admin.E2NodeConnectionType connection_type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_connection_type(static_cast<::onos::e2t::admin::E2NodeConnectionType>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .onos.e2t.admin.RANFunction ran_functions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ran_functions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string node_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.e2t.admin.ListE2NodeConnectionsResponse.node_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 age_ms = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          age_ms_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListE2NodeConnectionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.admin.ListE2NodeConnectionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string remote_ip = 1;
  for (int i = 0, n = this->_internal_remote_ip_size(); i < n; i++) {
    const auto& s = this->_internal_remote_ip(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.ListE2NodeConnectionsResponse.remote_ip");
    target = stream->WriteString(1, s, target);
  }

  // uint32 remote_port = 2;
  if (this->_internal_remote_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_remote_port(), target);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.ListE2NodeConnectionsResponse.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // string plmn_id = 4;
  if (!this->_internal_plmn_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_plmn_id().data(), static_cast<int>(this->_internal_plmn_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.ListE2NodeConnectionsResponse.plmn_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_plmn_id(), target);
  }

  // .onos.e2t.admin.E2NodeConnectionType connection_type = 5;
  if (this->_internal_connection_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_connection_type(), target);
  }

  // repeated .onos.e2t.admin.RANFunction ran_functions = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ran_functions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_ran_functions(i), target, stream);
  }

  // string node_id = 7;
  if (!this->_internal_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node_id().data(), static_cast<int>(this->_internal_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.e2t.admin.ListE2NodeConnectionsResponse.node_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_node_id(), target);
  }

  // int32 age_ms = 8;
  if (this->_internal_age_ms() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_age_ms(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.admin.ListE2NodeConnectionsResponse)
  return target;
}

size_t ListE2NodeConnectionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.admin.ListE2NodeConnectionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string remote_ip = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(remote_ip_.size());
  for (int i = 0, n = remote_ip_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      remote_ip_.Get(i));
  }

  // repeated .onos.e2t.admin.RANFunction ran_functions = 6;
  total_size += 1UL * this->_internal_ran_functions_size();
  for (const auto& msg : this->ran_functions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string plmn_id = 4;
  if (!this->_internal_plmn_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_plmn_id());
  }

  // string node_id = 7;
  if (!this->_internal_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node_id());
  }

  // uint32 remote_port = 2;
  if (this->_internal_remote_port() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_remote_port());
  }

  // .onos.e2t.admin.E2NodeConnectionType connection_type = 5;
  if (this->_internal_connection_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_connection_type());
  }

  // int32 age_ms = 8;
  if (this->_internal_age_ms() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_age_ms());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListE2NodeConnectionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListE2NodeConnectionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListE2NodeConnectionsResponse::GetClassData() const { return &_class_data_; }

void ListE2NodeConnectionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListE2NodeConnectionsResponse *>(to)->MergeFrom(
      static_cast<const ListE2NodeConnectionsResponse &>(from));
}


void ListE2NodeConnectionsResponse::MergeFrom(const ListE2NodeConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.admin.ListE2NodeConnectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  remote_ip_.MergeFrom(from.remote_ip_);
  ran_functions_.MergeFrom(from.ran_functions_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_plmn_id().empty()) {
    _internal_set_plmn_id(from._internal_plmn_id());
  }
  if (!from._internal_node_id().empty()) {
    _internal_set_node_id(from._internal_node_id());
  }
  if (from._internal_remote_port() != 0) {
    _internal_set_remote_port(from._internal_remote_port());
  }
  if (from._internal_connection_type() != 0) {
    _internal_set_connection_type(from._internal_connection_type());
  }
  if (from._internal_age_ms() != 0) {
    _internal_set_age_ms(from._internal_age_ms());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListE2NodeConnectionsResponse::CopyFrom(const ListE2NodeConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.admin.ListE2NodeConnectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListE2NodeConnectionsResponse::IsInitialized() const {
  return true;
}

void ListE2NodeConnectionsResponse::InternalSwap(ListE2NodeConnectionsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  remote_ip_.InternalSwap(&other->remote_ip_);
  ran_functions_.InternalSwap(&other->ran_functions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &plmn_id_, lhs_arena,
      &other->plmn_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &node_id_, lhs_arena,
      &other->node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListE2NodeConnectionsResponse, age_ms_)
      + sizeof(ListE2NodeConnectionsResponse::age_ms_)
      - PROTOBUF_FIELD_OFFSET(ListE2NodeConnectionsResponse, remote_port_)>(
          reinterpret_cast<char*>(&remote_port_),
          reinterpret_cast<char*>(&other->remote_port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListE2NodeConnectionsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[6]);
}

// ===================================================================

class DropE2NodeConnectionsRequest::_Internal {
 public:
};

DropE2NodeConnectionsRequest::DropE2NodeConnectionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  connections_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.DropE2NodeConnectionsRequest)
}
DropE2NodeConnectionsRequest::DropE2NodeConnectionsRequest(const DropE2NodeConnectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      connections_(from.connections_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.DropE2NodeConnectionsRequest)
}

inline void DropE2NodeConnectionsRequest::SharedCtor() {
}

DropE2NodeConnectionsRequest::~DropE2NodeConnectionsRequest() {
  // @@protoc_insertion_point(destructor:onos.e2t.admin.DropE2NodeConnectionsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DropE2NodeConnectionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DropE2NodeConnectionsRequest::ArenaDtor(void* object) {
  DropE2NodeConnectionsRequest* _this = reinterpret_cast< DropE2NodeConnectionsRequest* >(object);
  (void)_this;
}
void DropE2NodeConnectionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DropE2NodeConnectionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DropE2NodeConnectionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.admin.DropE2NodeConnectionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connections_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DropE2NodeConnectionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .onos.e2t.admin.ListE2NodeConnectionsResponse connections = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_connections(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DropE2NodeConnectionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.admin.DropE2NodeConnectionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onos.e2t.admin.ListE2NodeConnectionsResponse connections = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_connections_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_connections(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.admin.DropE2NodeConnectionsRequest)
  return target;
}

size_t DropE2NodeConnectionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.admin.DropE2NodeConnectionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.e2t.admin.ListE2NodeConnectionsResponse connections = 1;
  total_size += 1UL * this->_internal_connections_size();
  for (const auto& msg : this->connections_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DropE2NodeConnectionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DropE2NodeConnectionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DropE2NodeConnectionsRequest::GetClassData() const { return &_class_data_; }

void DropE2NodeConnectionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DropE2NodeConnectionsRequest *>(to)->MergeFrom(
      static_cast<const DropE2NodeConnectionsRequest &>(from));
}


void DropE2NodeConnectionsRequest::MergeFrom(const DropE2NodeConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.admin.DropE2NodeConnectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  connections_.MergeFrom(from.connections_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DropE2NodeConnectionsRequest::CopyFrom(const DropE2NodeConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.admin.DropE2NodeConnectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropE2NodeConnectionsRequest::IsInitialized() const {
  return true;
}

void DropE2NodeConnectionsRequest::InternalSwap(DropE2NodeConnectionsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  connections_.InternalSwap(&other->connections_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DropE2NodeConnectionsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[7]);
}

// ===================================================================

class DropE2NodeConnectionsResponse::_Internal {
 public:
};

DropE2NodeConnectionsResponse::DropE2NodeConnectionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  success_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.e2t.admin.DropE2NodeConnectionsResponse)
}
DropE2NodeConnectionsResponse::DropE2NodeConnectionsResponse(const DropE2NodeConnectionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      success_(from.success_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.e2t.admin.DropE2NodeConnectionsResponse)
}

inline void DropE2NodeConnectionsResponse::SharedCtor() {
}

DropE2NodeConnectionsResponse::~DropE2NodeConnectionsResponse() {
  // @@protoc_insertion_point(destructor:onos.e2t.admin.DropE2NodeConnectionsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DropE2NodeConnectionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DropE2NodeConnectionsResponse::ArenaDtor(void* object) {
  DropE2NodeConnectionsResponse* _this = reinterpret_cast< DropE2NodeConnectionsResponse* >(object);
  (void)_this;
}
void DropE2NodeConnectionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DropE2NodeConnectionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DropE2NodeConnectionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.e2t.admin.DropE2NodeConnectionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DropE2NodeConnectionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_success(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_success(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DropE2NodeConnectionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.e2t.admin.DropE2NodeConnectionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bool success = 1;
  if (this->_internal_success_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.e2t.admin.DropE2NodeConnectionsResponse)
  return target;
}

size_t DropE2NodeConnectionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.e2t.admin.DropE2NodeConnectionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bool success = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_success_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DropE2NodeConnectionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DropE2NodeConnectionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DropE2NodeConnectionsResponse::GetClassData() const { return &_class_data_; }

void DropE2NodeConnectionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DropE2NodeConnectionsResponse *>(to)->MergeFrom(
      static_cast<const DropE2NodeConnectionsResponse &>(from));
}


void DropE2NodeConnectionsResponse::MergeFrom(const DropE2NodeConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.e2t.admin.DropE2NodeConnectionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  success_.MergeFrom(from.success_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DropE2NodeConnectionsResponse::CopyFrom(const DropE2NodeConnectionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.e2t.admin.DropE2NodeConnectionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropE2NodeConnectionsResponse::IsInitialized() const {
  return true;
}

void DropE2NodeConnectionsResponse::InternalSwap(DropE2NodeConnectionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  success_.InternalSwap(&other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DropE2NodeConnectionsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fe2t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fe2t_2fadmin_2fadmin_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace e2t
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::UploadRegisterServiceModelRequest* Arena::CreateMaybeMessage< ::onos::e2t::admin::UploadRegisterServiceModelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::UploadRegisterServiceModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::UploadRegisterServiceModelResponse* Arena::CreateMaybeMessage< ::onos::e2t::admin::UploadRegisterServiceModelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::UploadRegisterServiceModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::ListRegisteredServiceModelsResponse* Arena::CreateMaybeMessage< ::onos::e2t::admin::ListRegisteredServiceModelsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::ListRegisteredServiceModelsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::ListRegisteredServiceModelsRequest* Arena::CreateMaybeMessage< ::onos::e2t::admin::ListRegisteredServiceModelsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::ListRegisteredServiceModelsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::ListE2NodeConnectionsRequest* Arena::CreateMaybeMessage< ::onos::e2t::admin::ListE2NodeConnectionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::ListE2NodeConnectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::RANFunction* Arena::CreateMaybeMessage< ::onos::e2t::admin::RANFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::RANFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::ListE2NodeConnectionsResponse* Arena::CreateMaybeMessage< ::onos::e2t::admin::ListE2NodeConnectionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::ListE2NodeConnectionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::DropE2NodeConnectionsRequest* Arena::CreateMaybeMessage< ::onos::e2t::admin::DropE2NodeConnectionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::DropE2NodeConnectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::e2t::admin::DropE2NodeConnectionsResponse* Arena::CreateMaybeMessage< ::onos::e2t::admin::DropE2NodeConnectionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::e2t::admin::DropE2NodeConnectionsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
