// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/a1t/admin/admin.proto

#include "onos/a1t/admin/admin.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace a1t {
namespace admin {
constexpr GetXAppConnectionsRequest::GetXAppConnectionsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xapp_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetXAppConnectionsRequestDefaultTypeInternal {
  constexpr GetXAppConnectionsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetXAppConnectionsRequestDefaultTypeInternal() {}
  union {
    GetXAppConnectionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetXAppConnectionsRequestDefaultTypeInternal _GetXAppConnectionsRequest_default_instance_;
constexpr GetXAppConnectionResponse::GetXAppConnectionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : xapp_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , supported_a1_service_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , supported_a1_service_type_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , xapp_a1_endpoint_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetXAppConnectionResponseDefaultTypeInternal {
  constexpr GetXAppConnectionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetXAppConnectionResponseDefaultTypeInternal() {}
  union {
    GetXAppConnectionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetXAppConnectionResponseDefaultTypeInternal _GetXAppConnectionResponse_default_instance_;
constexpr GetPolicyTypeObjectRequest::GetPolicyTypeObjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : policy_type_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPolicyTypeObjectRequestDefaultTypeInternal {
  constexpr GetPolicyTypeObjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPolicyTypeObjectRequestDefaultTypeInternal() {}
  union {
    GetPolicyTypeObjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPolicyTypeObjectRequestDefaultTypeInternal _GetPolicyTypeObjectRequest_default_instance_;
constexpr GetPolicyTypeObjectResponse::GetPolicyTypeObjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : policy_ids_()
  , policy_type_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , policy_type_object_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPolicyTypeObjectResponseDefaultTypeInternal {
  constexpr GetPolicyTypeObjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPolicyTypeObjectResponseDefaultTypeInternal() {}
  union {
    GetPolicyTypeObjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPolicyTypeObjectResponseDefaultTypeInternal _GetPolicyTypeObjectResponse_default_instance_;
constexpr GetPolicyObjectRequest::GetPolicyObjectRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : policy_type_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , policy_object_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPolicyObjectRequestDefaultTypeInternal {
  constexpr GetPolicyObjectRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPolicyObjectRequestDefaultTypeInternal() {}
  union {
    GetPolicyObjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPolicyObjectRequestDefaultTypeInternal _GetPolicyObjectRequest_default_instance_;
constexpr GetPolicyObjectResponse::GetPolicyObjectResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : policy_type_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , policy_object_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , policy_object_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPolicyObjectResponseDefaultTypeInternal {
  constexpr GetPolicyObjectResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPolicyObjectResponseDefaultTypeInternal() {}
  union {
    GetPolicyObjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPolicyObjectResponseDefaultTypeInternal _GetPolicyObjectResponse_default_instance_;
constexpr GetPolicyObjectStatusRequest::GetPolicyObjectStatusRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : policy_type_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , policy_object_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPolicyObjectStatusRequestDefaultTypeInternal {
  constexpr GetPolicyObjectStatusRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPolicyObjectStatusRequestDefaultTypeInternal() {}
  union {
    GetPolicyObjectStatusRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPolicyObjectStatusRequestDefaultTypeInternal _GetPolicyObjectStatusRequest_default_instance_;
constexpr GetPolicyObjectStatusResponse::GetPolicyObjectStatusResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : policy_type_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , policy_object_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , policy_object_status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetPolicyObjectStatusResponseDefaultTypeInternal {
  constexpr GetPolicyObjectStatusResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetPolicyObjectStatusResponseDefaultTypeInternal() {}
  union {
    GetPolicyObjectStatusResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetPolicyObjectStatusResponseDefaultTypeInternal _GetPolicyObjectStatusResponse_default_instance_;
}  // namespace admin
}  // namespace a1t
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_onos_2fa1t_2fadmin_2fadmin_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fa1t_2fadmin_2fadmin_2eproto = nullptr;

const uint32_t TableStruct_onos_2fa1t_2fadmin_2fadmin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetXAppConnectionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetXAppConnectionsRequest, xapp_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetXAppConnectionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetXAppConnectionResponse, xapp_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetXAppConnectionResponse, supported_a1_service_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetXAppConnectionResponse, supported_a1_service_type_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetXAppConnectionResponse, xapp_a1_endpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyTypeObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyTypeObjectRequest, policy_type_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyTypeObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyTypeObjectResponse, policy_type_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyTypeObjectResponse, policy_ids_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyTypeObjectResponse, policy_type_object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectRequest, policy_type_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectRequest, policy_object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectResponse, policy_type_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectResponse, policy_object_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectResponse, policy_object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectStatusRequest, policy_type_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectStatusRequest, policy_object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectStatusResponse, policy_type_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectStatusResponse, policy_object_id_),
  PROTOBUF_FIELD_OFFSET(::onos::a1t::admin::GetPolicyObjectStatusResponse, policy_object_status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::a1t::admin::GetXAppConnectionsRequest)},
  { 7, -1, -1, sizeof(::onos::a1t::admin::GetXAppConnectionResponse)},
  { 17, -1, -1, sizeof(::onos::a1t::admin::GetPolicyTypeObjectRequest)},
  { 24, -1, -1, sizeof(::onos::a1t::admin::GetPolicyTypeObjectResponse)},
  { 33, -1, -1, sizeof(::onos::a1t::admin::GetPolicyObjectRequest)},
  { 41, -1, -1, sizeof(::onos::a1t::admin::GetPolicyObjectResponse)},
  { 50, -1, -1, sizeof(::onos::a1t::admin::GetPolicyObjectStatusRequest)},
  { 58, -1, -1, sizeof(::onos::a1t::admin::GetPolicyObjectStatusResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::a1t::admin::_GetXAppConnectionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::a1t::admin::_GetXAppConnectionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::a1t::admin::_GetPolicyTypeObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::a1t::admin::_GetPolicyTypeObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::a1t::admin::_GetPolicyObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::a1t::admin::_GetPolicyObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::a1t::admin::_GetPolicyObjectStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::a1t::admin::_GetPolicyObjectStatusResponse_default_instance_),
};

const char descriptor_table_protodef_onos_2fa1t_2fadmin_2fadmin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032onos/a1t/admin/admin.proto\022\016onos.a1t.a"
  "dmin\032\024gogoproto/gogo.proto\",\n\031GetXAppCon"
  "nectionsRequest\022\017\n\007xapp_id\030\001 \001(\t\"\212\001\n\031Get"
  "XAppConnectionResponse\022\017\n\007xapp_id\030\001 \001(\t\022"
  "\034\n\024supported_a1_service\030\002 \001(\t\022$\n\034support"
  "ed_a1_service_type_id\030\003 \001(\t\022\030\n\020xapp_a1_e"
  "ndpoint\030\004 \001(\t\"4\n\032GetPolicyTypeObjectRequ"
  "est\022\026\n\016policy_type_id\030\001 \001(\t\"e\n\033GetPolicy"
  "TypeObjectResponse\022\026\n\016policy_type_id\030\001 \001"
  "(\t\022\022\n\npolicy_ids\030\002 \003(\t\022\032\n\022policy_type_ob"
  "ject\030\003 \001(\t\"J\n\026GetPolicyObjectRequest\022\026\n\016"
  "policy_type_id\030\001 \001(\t\022\030\n\020policy_object_id"
  "\030\002 \001(\t\"b\n\027GetPolicyObjectResponse\022\026\n\016pol"
  "icy_type_id\030\001 \001(\t\022\030\n\020policy_object_id\030\002 "
  "\001(\t\022\025\n\rpolicy_object\030\003 \001(\t\"P\n\034GetPolicyO"
  "bjectStatusRequest\022\026\n\016policy_type_id\030\001 \001"
  "(\t\022\030\n\020policy_object_id\030\002 \001(\t\"o\n\035GetPolic"
  "yObjectStatusResponse\022\026\n\016policy_type_id\030"
  "\001 \001(\t\022\030\n\020policy_object_id\030\002 \001(\t\022\034\n\024polic"
  "y_object_status\030\003 \001(\t2\317\003\n\017A1TAdminServic"
  "e\022l\n\022GetXAppConnections\022).onos.a1t.admin"
  ".GetXAppConnectionsRequest\032).onos.a1t.ad"
  "min.GetXAppConnectionResponse0\001\022p\n\023GetPo"
  "licyTypeObject\022*.onos.a1t.admin.GetPolic"
  "yTypeObjectRequest\032+.onos.a1t.admin.GetP"
  "olicyTypeObjectResponse0\001\022d\n\017GetPolicyOb"
  "ject\022&.onos.a1t.admin.GetPolicyObjectReq"
  "uest\032\'.onos.a1t.admin.GetPolicyObjectRes"
  "ponse0\001\022v\n\025GetPolicyObjectStatus\022,.onos."
  "a1t.admin.GetPolicyObjectStatusRequest\032-"
  ".onos.a1t.admin.GetPolicyObjectStatusRes"
  "ponse0\001B\004\300\343\036\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_deps[1] = {
  &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto = {
  false, false, 1261, descriptor_table_protodef_onos_2fa1t_2fadmin_2fadmin_2eproto, "onos/a1t/admin/admin.proto", 
  &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once, descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_deps, 1, 8,
  schemas, file_default_instances, TableStruct_onos_2fa1t_2fadmin_2fadmin_2eproto::offsets,
  file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto, file_level_enum_descriptors_onos_2fa1t_2fadmin_2fadmin_2eproto, file_level_service_descriptors_onos_2fa1t_2fadmin_2fadmin_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter() {
  return &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fa1t_2fadmin_2fadmin_2eproto(&descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto);
namespace onos {
namespace a1t {
namespace admin {

// ===================================================================

class GetXAppConnectionsRequest::_Internal {
 public:
};

GetXAppConnectionsRequest::GetXAppConnectionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.a1t.admin.GetXAppConnectionsRequest)
}
GetXAppConnectionsRequest::GetXAppConnectionsRequest(const GetXAppConnectionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xapp_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    xapp_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xapp_id().empty()) {
    xapp_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xapp_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.a1t.admin.GetXAppConnectionsRequest)
}

inline void GetXAppConnectionsRequest::SharedCtor() {
xapp_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  xapp_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetXAppConnectionsRequest::~GetXAppConnectionsRequest() {
  // @@protoc_insertion_point(destructor:onos.a1t.admin.GetXAppConnectionsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetXAppConnectionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  xapp_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetXAppConnectionsRequest::ArenaDtor(void* object) {
  GetXAppConnectionsRequest* _this = reinterpret_cast< GetXAppConnectionsRequest* >(object);
  (void)_this;
}
void GetXAppConnectionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetXAppConnectionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetXAppConnectionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.a1t.admin.GetXAppConnectionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xapp_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetXAppConnectionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string xapp_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xapp_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetXAppConnectionsRequest.xapp_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetXAppConnectionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.a1t.admin.GetXAppConnectionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string xapp_id = 1;
  if (!this->_internal_xapp_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_xapp_id().data(), static_cast<int>(this->_internal_xapp_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetXAppConnectionsRequest.xapp_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_xapp_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.a1t.admin.GetXAppConnectionsRequest)
  return target;
}

size_t GetXAppConnectionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.a1t.admin.GetXAppConnectionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string xapp_id = 1;
  if (!this->_internal_xapp_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_xapp_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetXAppConnectionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetXAppConnectionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetXAppConnectionsRequest::GetClassData() const { return &_class_data_; }

void GetXAppConnectionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetXAppConnectionsRequest *>(to)->MergeFrom(
      static_cast<const GetXAppConnectionsRequest &>(from));
}


void GetXAppConnectionsRequest::MergeFrom(const GetXAppConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.a1t.admin.GetXAppConnectionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xapp_id().empty()) {
    _internal_set_xapp_id(from._internal_xapp_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetXAppConnectionsRequest::CopyFrom(const GetXAppConnectionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.a1t.admin.GetXAppConnectionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetXAppConnectionsRequest::IsInitialized() const {
  return true;
}

void GetXAppConnectionsRequest::InternalSwap(GetXAppConnectionsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &xapp_id_, lhs_arena,
      &other->xapp_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetXAppConnectionsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[0]);
}

// ===================================================================

class GetXAppConnectionResponse::_Internal {
 public:
};

GetXAppConnectionResponse::GetXAppConnectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.a1t.admin.GetXAppConnectionResponse)
}
GetXAppConnectionResponse::GetXAppConnectionResponse(const GetXAppConnectionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  xapp_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    xapp_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xapp_id().empty()) {
    xapp_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xapp_id(), 
      GetArenaForAllocation());
  }
  supported_a1_service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    supported_a1_service_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_supported_a1_service().empty()) {
    supported_a1_service_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_supported_a1_service(), 
      GetArenaForAllocation());
  }
  supported_a1_service_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    supported_a1_service_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_supported_a1_service_type_id().empty()) {
    supported_a1_service_type_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_supported_a1_service_type_id(), 
      GetArenaForAllocation());
  }
  xapp_a1_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    xapp_a1_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_xapp_a1_endpoint().empty()) {
    xapp_a1_endpoint_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_xapp_a1_endpoint(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.a1t.admin.GetXAppConnectionResponse)
}

inline void GetXAppConnectionResponse::SharedCtor() {
xapp_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  xapp_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
supported_a1_service_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  supported_a1_service_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
supported_a1_service_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  supported_a1_service_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
xapp_a1_endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  xapp_a1_endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetXAppConnectionResponse::~GetXAppConnectionResponse() {
  // @@protoc_insertion_point(destructor:onos.a1t.admin.GetXAppConnectionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetXAppConnectionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  xapp_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  supported_a1_service_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  supported_a1_service_type_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  xapp_a1_endpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetXAppConnectionResponse::ArenaDtor(void* object) {
  GetXAppConnectionResponse* _this = reinterpret_cast< GetXAppConnectionResponse* >(object);
  (void)_this;
}
void GetXAppConnectionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetXAppConnectionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetXAppConnectionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.a1t.admin.GetXAppConnectionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xapp_id_.ClearToEmpty();
  supported_a1_service_.ClearToEmpty();
  supported_a1_service_type_id_.ClearToEmpty();
  xapp_a1_endpoint_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetXAppConnectionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string xapp_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_xapp_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetXAppConnectionResponse.xapp_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string supported_a1_service = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_supported_a1_service();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetXAppConnectionResponse.supported_a1_service"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string supported_a1_service_type_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_supported_a1_service_type_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetXAppConnectionResponse.supported_a1_service_type_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string xapp_a1_endpoint = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_xapp_a1_endpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetXAppConnectionResponse.xapp_a1_endpoint"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetXAppConnectionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.a1t.admin.GetXAppConnectionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string xapp_id = 1;
  if (!this->_internal_xapp_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_xapp_id().data(), static_cast<int>(this->_internal_xapp_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetXAppConnectionResponse.xapp_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_xapp_id(), target);
  }

  // string supported_a1_service = 2;
  if (!this->_internal_supported_a1_service().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_supported_a1_service().data(), static_cast<int>(this->_internal_supported_a1_service().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetXAppConnectionResponse.supported_a1_service");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_supported_a1_service(), target);
  }

  // string supported_a1_service_type_id = 3;
  if (!this->_internal_supported_a1_service_type_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_supported_a1_service_type_id().data(), static_cast<int>(this->_internal_supported_a1_service_type_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetXAppConnectionResponse.supported_a1_service_type_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_supported_a1_service_type_id(), target);
  }

  // string xapp_a1_endpoint = 4;
  if (!this->_internal_xapp_a1_endpoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_xapp_a1_endpoint().data(), static_cast<int>(this->_internal_xapp_a1_endpoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetXAppConnectionResponse.xapp_a1_endpoint");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_xapp_a1_endpoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.a1t.admin.GetXAppConnectionResponse)
  return target;
}

size_t GetXAppConnectionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.a1t.admin.GetXAppConnectionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string xapp_id = 1;
  if (!this->_internal_xapp_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_xapp_id());
  }

  // string supported_a1_service = 2;
  if (!this->_internal_supported_a1_service().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_supported_a1_service());
  }

  // string supported_a1_service_type_id = 3;
  if (!this->_internal_supported_a1_service_type_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_supported_a1_service_type_id());
  }

  // string xapp_a1_endpoint = 4;
  if (!this->_internal_xapp_a1_endpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_xapp_a1_endpoint());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetXAppConnectionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetXAppConnectionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetXAppConnectionResponse::GetClassData() const { return &_class_data_; }

void GetXAppConnectionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetXAppConnectionResponse *>(to)->MergeFrom(
      static_cast<const GetXAppConnectionResponse &>(from));
}


void GetXAppConnectionResponse::MergeFrom(const GetXAppConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.a1t.admin.GetXAppConnectionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xapp_id().empty()) {
    _internal_set_xapp_id(from._internal_xapp_id());
  }
  if (!from._internal_supported_a1_service().empty()) {
    _internal_set_supported_a1_service(from._internal_supported_a1_service());
  }
  if (!from._internal_supported_a1_service_type_id().empty()) {
    _internal_set_supported_a1_service_type_id(from._internal_supported_a1_service_type_id());
  }
  if (!from._internal_xapp_a1_endpoint().empty()) {
    _internal_set_xapp_a1_endpoint(from._internal_xapp_a1_endpoint());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetXAppConnectionResponse::CopyFrom(const GetXAppConnectionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.a1t.admin.GetXAppConnectionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetXAppConnectionResponse::IsInitialized() const {
  return true;
}

void GetXAppConnectionResponse::InternalSwap(GetXAppConnectionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &xapp_id_, lhs_arena,
      &other->xapp_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &supported_a1_service_, lhs_arena,
      &other->supported_a1_service_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &supported_a1_service_type_id_, lhs_arena,
      &other->supported_a1_service_type_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &xapp_a1_endpoint_, lhs_arena,
      &other->xapp_a1_endpoint_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetXAppConnectionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[1]);
}

// ===================================================================

class GetPolicyTypeObjectRequest::_Internal {
 public:
};

GetPolicyTypeObjectRequest::GetPolicyTypeObjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.a1t.admin.GetPolicyTypeObjectRequest)
}
GetPolicyTypeObjectRequest::GetPolicyTypeObjectRequest(const GetPolicyTypeObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_type_id().empty()) {
    policy_type_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_type_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.a1t.admin.GetPolicyTypeObjectRequest)
}

inline void GetPolicyTypeObjectRequest::SharedCtor() {
policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPolicyTypeObjectRequest::~GetPolicyTypeObjectRequest() {
  // @@protoc_insertion_point(destructor:onos.a1t.admin.GetPolicyTypeObjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPolicyTypeObjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  policy_type_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPolicyTypeObjectRequest::ArenaDtor(void* object) {
  GetPolicyTypeObjectRequest* _this = reinterpret_cast< GetPolicyTypeObjectRequest* >(object);
  (void)_this;
}
void GetPolicyTypeObjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPolicyTypeObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPolicyTypeObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.a1t.admin.GetPolicyTypeObjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  policy_type_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPolicyTypeObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string policy_type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy_type_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyTypeObjectRequest.policy_type_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPolicyTypeObjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.a1t.admin.GetPolicyTypeObjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_type_id().data(), static_cast<int>(this->_internal_policy_type_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyTypeObjectRequest.policy_type_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy_type_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.a1t.admin.GetPolicyTypeObjectRequest)
  return target;
}

size_t GetPolicyTypeObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.a1t.admin.GetPolicyTypeObjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_type_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPolicyTypeObjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPolicyTypeObjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPolicyTypeObjectRequest::GetClassData() const { return &_class_data_; }

void GetPolicyTypeObjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPolicyTypeObjectRequest *>(to)->MergeFrom(
      static_cast<const GetPolicyTypeObjectRequest &>(from));
}


void GetPolicyTypeObjectRequest::MergeFrom(const GetPolicyTypeObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.a1t.admin.GetPolicyTypeObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_policy_type_id().empty()) {
    _internal_set_policy_type_id(from._internal_policy_type_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPolicyTypeObjectRequest::CopyFrom(const GetPolicyTypeObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.a1t.admin.GetPolicyTypeObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPolicyTypeObjectRequest::IsInitialized() const {
  return true;
}

void GetPolicyTypeObjectRequest::InternalSwap(GetPolicyTypeObjectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_type_id_, lhs_arena,
      &other->policy_type_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPolicyTypeObjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[2]);
}

// ===================================================================

class GetPolicyTypeObjectResponse::_Internal {
 public:
};

GetPolicyTypeObjectResponse::GetPolicyTypeObjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  policy_ids_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.a1t.admin.GetPolicyTypeObjectResponse)
}
GetPolicyTypeObjectResponse::GetPolicyTypeObjectResponse(const GetPolicyTypeObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      policy_ids_(from.policy_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_type_id().empty()) {
    policy_type_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_type_id(), 
      GetArenaForAllocation());
  }
  policy_type_object_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_type_object_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_type_object().empty()) {
    policy_type_object_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_type_object(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.a1t.admin.GetPolicyTypeObjectResponse)
}

inline void GetPolicyTypeObjectResponse::SharedCtor() {
policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
policy_type_object_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_type_object_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPolicyTypeObjectResponse::~GetPolicyTypeObjectResponse() {
  // @@protoc_insertion_point(destructor:onos.a1t.admin.GetPolicyTypeObjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPolicyTypeObjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  policy_type_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_type_object_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPolicyTypeObjectResponse::ArenaDtor(void* object) {
  GetPolicyTypeObjectResponse* _this = reinterpret_cast< GetPolicyTypeObjectResponse* >(object);
  (void)_this;
}
void GetPolicyTypeObjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPolicyTypeObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPolicyTypeObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.a1t.admin.GetPolicyTypeObjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  policy_ids_.Clear();
  policy_type_id_.ClearToEmpty();
  policy_type_object_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPolicyTypeObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string policy_type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy_type_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyTypeObjectResponse.policy_type_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string policy_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_policy_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyTypeObjectResponse.policy_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string policy_type_object = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_policy_type_object();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyTypeObjectResponse.policy_type_object"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPolicyTypeObjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.a1t.admin.GetPolicyTypeObjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_type_id().data(), static_cast<int>(this->_internal_policy_type_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyTypeObjectResponse.policy_type_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy_type_id(), target);
  }

  // repeated string policy_ids = 2;
  for (int i = 0, n = this->_internal_policy_ids_size(); i < n; i++) {
    const auto& s = this->_internal_policy_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyTypeObjectResponse.policy_ids");
    target = stream->WriteString(2, s, target);
  }

  // string policy_type_object = 3;
  if (!this->_internal_policy_type_object().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_type_object().data(), static_cast<int>(this->_internal_policy_type_object().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyTypeObjectResponse.policy_type_object");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_policy_type_object(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.a1t.admin.GetPolicyTypeObjectResponse)
  return target;
}

size_t GetPolicyTypeObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.a1t.admin.GetPolicyTypeObjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string policy_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(policy_ids_.size());
  for (int i = 0, n = policy_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      policy_ids_.Get(i));
  }

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_type_id());
  }

  // string policy_type_object = 3;
  if (!this->_internal_policy_type_object().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_type_object());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPolicyTypeObjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPolicyTypeObjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPolicyTypeObjectResponse::GetClassData() const { return &_class_data_; }

void GetPolicyTypeObjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPolicyTypeObjectResponse *>(to)->MergeFrom(
      static_cast<const GetPolicyTypeObjectResponse &>(from));
}


void GetPolicyTypeObjectResponse::MergeFrom(const GetPolicyTypeObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.a1t.admin.GetPolicyTypeObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  policy_ids_.MergeFrom(from.policy_ids_);
  if (!from._internal_policy_type_id().empty()) {
    _internal_set_policy_type_id(from._internal_policy_type_id());
  }
  if (!from._internal_policy_type_object().empty()) {
    _internal_set_policy_type_object(from._internal_policy_type_object());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPolicyTypeObjectResponse::CopyFrom(const GetPolicyTypeObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.a1t.admin.GetPolicyTypeObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPolicyTypeObjectResponse::IsInitialized() const {
  return true;
}

void GetPolicyTypeObjectResponse::InternalSwap(GetPolicyTypeObjectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  policy_ids_.InternalSwap(&other->policy_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_type_id_, lhs_arena,
      &other->policy_type_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_type_object_, lhs_arena,
      &other->policy_type_object_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPolicyTypeObjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[3]);
}

// ===================================================================

class GetPolicyObjectRequest::_Internal {
 public:
};

GetPolicyObjectRequest::GetPolicyObjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.a1t.admin.GetPolicyObjectRequest)
}
GetPolicyObjectRequest::GetPolicyObjectRequest(const GetPolicyObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_type_id().empty()) {
    policy_type_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_type_id(), 
      GetArenaForAllocation());
  }
  policy_object_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_object_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_object_id().empty()) {
    policy_object_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_object_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.a1t.admin.GetPolicyObjectRequest)
}

inline void GetPolicyObjectRequest::SharedCtor() {
policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
policy_object_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_object_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPolicyObjectRequest::~GetPolicyObjectRequest() {
  // @@protoc_insertion_point(destructor:onos.a1t.admin.GetPolicyObjectRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPolicyObjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  policy_type_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_object_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPolicyObjectRequest::ArenaDtor(void* object) {
  GetPolicyObjectRequest* _this = reinterpret_cast< GetPolicyObjectRequest* >(object);
  (void)_this;
}
void GetPolicyObjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPolicyObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPolicyObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.a1t.admin.GetPolicyObjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  policy_type_id_.ClearToEmpty();
  policy_object_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPolicyObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string policy_type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy_type_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectRequest.policy_type_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string policy_object_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_policy_object_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectRequest.policy_object_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPolicyObjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.a1t.admin.GetPolicyObjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_type_id().data(), static_cast<int>(this->_internal_policy_type_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectRequest.policy_type_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy_type_id(), target);
  }

  // string policy_object_id = 2;
  if (!this->_internal_policy_object_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_object_id().data(), static_cast<int>(this->_internal_policy_object_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectRequest.policy_object_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_policy_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.a1t.admin.GetPolicyObjectRequest)
  return target;
}

size_t GetPolicyObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.a1t.admin.GetPolicyObjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_type_id());
  }

  // string policy_object_id = 2;
  if (!this->_internal_policy_object_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPolicyObjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPolicyObjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPolicyObjectRequest::GetClassData() const { return &_class_data_; }

void GetPolicyObjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPolicyObjectRequest *>(to)->MergeFrom(
      static_cast<const GetPolicyObjectRequest &>(from));
}


void GetPolicyObjectRequest::MergeFrom(const GetPolicyObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.a1t.admin.GetPolicyObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_policy_type_id().empty()) {
    _internal_set_policy_type_id(from._internal_policy_type_id());
  }
  if (!from._internal_policy_object_id().empty()) {
    _internal_set_policy_object_id(from._internal_policy_object_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPolicyObjectRequest::CopyFrom(const GetPolicyObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.a1t.admin.GetPolicyObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPolicyObjectRequest::IsInitialized() const {
  return true;
}

void GetPolicyObjectRequest::InternalSwap(GetPolicyObjectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_type_id_, lhs_arena,
      &other->policy_type_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_object_id_, lhs_arena,
      &other->policy_object_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPolicyObjectRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[4]);
}

// ===================================================================

class GetPolicyObjectResponse::_Internal {
 public:
};

GetPolicyObjectResponse::GetPolicyObjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.a1t.admin.GetPolicyObjectResponse)
}
GetPolicyObjectResponse::GetPolicyObjectResponse(const GetPolicyObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_type_id().empty()) {
    policy_type_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_type_id(), 
      GetArenaForAllocation());
  }
  policy_object_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_object_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_object_id().empty()) {
    policy_object_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_object_id(), 
      GetArenaForAllocation());
  }
  policy_object_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_object_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_object().empty()) {
    policy_object_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_object(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.a1t.admin.GetPolicyObjectResponse)
}

inline void GetPolicyObjectResponse::SharedCtor() {
policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
policy_object_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_object_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
policy_object_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_object_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPolicyObjectResponse::~GetPolicyObjectResponse() {
  // @@protoc_insertion_point(destructor:onos.a1t.admin.GetPolicyObjectResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPolicyObjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  policy_type_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_object_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_object_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPolicyObjectResponse::ArenaDtor(void* object) {
  GetPolicyObjectResponse* _this = reinterpret_cast< GetPolicyObjectResponse* >(object);
  (void)_this;
}
void GetPolicyObjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPolicyObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPolicyObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.a1t.admin.GetPolicyObjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  policy_type_id_.ClearToEmpty();
  policy_object_id_.ClearToEmpty();
  policy_object_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPolicyObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string policy_type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy_type_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectResponse.policy_type_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string policy_object_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_policy_object_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectResponse.policy_object_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string policy_object = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_policy_object();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectResponse.policy_object"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPolicyObjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.a1t.admin.GetPolicyObjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_type_id().data(), static_cast<int>(this->_internal_policy_type_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectResponse.policy_type_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy_type_id(), target);
  }

  // string policy_object_id = 2;
  if (!this->_internal_policy_object_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_object_id().data(), static_cast<int>(this->_internal_policy_object_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectResponse.policy_object_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_policy_object_id(), target);
  }

  // string policy_object = 3;
  if (!this->_internal_policy_object().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_object().data(), static_cast<int>(this->_internal_policy_object().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectResponse.policy_object");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_policy_object(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.a1t.admin.GetPolicyObjectResponse)
  return target;
}

size_t GetPolicyObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.a1t.admin.GetPolicyObjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_type_id());
  }

  // string policy_object_id = 2;
  if (!this->_internal_policy_object_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_object_id());
  }

  // string policy_object = 3;
  if (!this->_internal_policy_object().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_object());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPolicyObjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPolicyObjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPolicyObjectResponse::GetClassData() const { return &_class_data_; }

void GetPolicyObjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPolicyObjectResponse *>(to)->MergeFrom(
      static_cast<const GetPolicyObjectResponse &>(from));
}


void GetPolicyObjectResponse::MergeFrom(const GetPolicyObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.a1t.admin.GetPolicyObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_policy_type_id().empty()) {
    _internal_set_policy_type_id(from._internal_policy_type_id());
  }
  if (!from._internal_policy_object_id().empty()) {
    _internal_set_policy_object_id(from._internal_policy_object_id());
  }
  if (!from._internal_policy_object().empty()) {
    _internal_set_policy_object(from._internal_policy_object());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPolicyObjectResponse::CopyFrom(const GetPolicyObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.a1t.admin.GetPolicyObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPolicyObjectResponse::IsInitialized() const {
  return true;
}

void GetPolicyObjectResponse::InternalSwap(GetPolicyObjectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_type_id_, lhs_arena,
      &other->policy_type_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_object_id_, lhs_arena,
      &other->policy_object_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_object_, lhs_arena,
      &other->policy_object_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPolicyObjectResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[5]);
}

// ===================================================================

class GetPolicyObjectStatusRequest::_Internal {
 public:
};

GetPolicyObjectStatusRequest::GetPolicyObjectStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.a1t.admin.GetPolicyObjectStatusRequest)
}
GetPolicyObjectStatusRequest::GetPolicyObjectStatusRequest(const GetPolicyObjectStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_type_id().empty()) {
    policy_type_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_type_id(), 
      GetArenaForAllocation());
  }
  policy_object_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_object_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_object_id().empty()) {
    policy_object_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_object_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.a1t.admin.GetPolicyObjectStatusRequest)
}

inline void GetPolicyObjectStatusRequest::SharedCtor() {
policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
policy_object_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_object_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPolicyObjectStatusRequest::~GetPolicyObjectStatusRequest() {
  // @@protoc_insertion_point(destructor:onos.a1t.admin.GetPolicyObjectStatusRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPolicyObjectStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  policy_type_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_object_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPolicyObjectStatusRequest::ArenaDtor(void* object) {
  GetPolicyObjectStatusRequest* _this = reinterpret_cast< GetPolicyObjectStatusRequest* >(object);
  (void)_this;
}
void GetPolicyObjectStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPolicyObjectStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPolicyObjectStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.a1t.admin.GetPolicyObjectStatusRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  policy_type_id_.ClearToEmpty();
  policy_object_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPolicyObjectStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string policy_type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy_type_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectStatusRequest.policy_type_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string policy_object_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_policy_object_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectStatusRequest.policy_object_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPolicyObjectStatusRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.a1t.admin.GetPolicyObjectStatusRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_type_id().data(), static_cast<int>(this->_internal_policy_type_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectStatusRequest.policy_type_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy_type_id(), target);
  }

  // string policy_object_id = 2;
  if (!this->_internal_policy_object_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_object_id().data(), static_cast<int>(this->_internal_policy_object_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectStatusRequest.policy_object_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_policy_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.a1t.admin.GetPolicyObjectStatusRequest)
  return target;
}

size_t GetPolicyObjectStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.a1t.admin.GetPolicyObjectStatusRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_type_id());
  }

  // string policy_object_id = 2;
  if (!this->_internal_policy_object_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPolicyObjectStatusRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPolicyObjectStatusRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPolicyObjectStatusRequest::GetClassData() const { return &_class_data_; }

void GetPolicyObjectStatusRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPolicyObjectStatusRequest *>(to)->MergeFrom(
      static_cast<const GetPolicyObjectStatusRequest &>(from));
}


void GetPolicyObjectStatusRequest::MergeFrom(const GetPolicyObjectStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.a1t.admin.GetPolicyObjectStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_policy_type_id().empty()) {
    _internal_set_policy_type_id(from._internal_policy_type_id());
  }
  if (!from._internal_policy_object_id().empty()) {
    _internal_set_policy_object_id(from._internal_policy_object_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPolicyObjectStatusRequest::CopyFrom(const GetPolicyObjectStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.a1t.admin.GetPolicyObjectStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPolicyObjectStatusRequest::IsInitialized() const {
  return true;
}

void GetPolicyObjectStatusRequest::InternalSwap(GetPolicyObjectStatusRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_type_id_, lhs_arena,
      &other->policy_type_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_object_id_, lhs_arena,
      &other->policy_object_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPolicyObjectStatusRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[6]);
}

// ===================================================================

class GetPolicyObjectStatusResponse::_Internal {
 public:
};

GetPolicyObjectStatusResponse::GetPolicyObjectStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.a1t.admin.GetPolicyObjectStatusResponse)
}
GetPolicyObjectStatusResponse::GetPolicyObjectStatusResponse(const GetPolicyObjectStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_type_id().empty()) {
    policy_type_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_type_id(), 
      GetArenaForAllocation());
  }
  policy_object_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_object_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_object_id().empty()) {
    policy_object_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_object_id(), 
      GetArenaForAllocation());
  }
  policy_object_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    policy_object_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_policy_object_status().empty()) {
    policy_object_status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_policy_object_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.a1t.admin.GetPolicyObjectStatusResponse)
}

inline void GetPolicyObjectStatusResponse::SharedCtor() {
policy_type_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_type_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
policy_object_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_object_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
policy_object_status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  policy_object_status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPolicyObjectStatusResponse::~GetPolicyObjectStatusResponse() {
  // @@protoc_insertion_point(destructor:onos.a1t.admin.GetPolicyObjectStatusResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetPolicyObjectStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  policy_type_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_object_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  policy_object_status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPolicyObjectStatusResponse::ArenaDtor(void* object) {
  GetPolicyObjectStatusResponse* _this = reinterpret_cast< GetPolicyObjectStatusResponse* >(object);
  (void)_this;
}
void GetPolicyObjectStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPolicyObjectStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPolicyObjectStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.a1t.admin.GetPolicyObjectStatusResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  policy_type_id_.ClearToEmpty();
  policy_object_id_.ClearToEmpty();
  policy_object_status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPolicyObjectStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string policy_type_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_policy_type_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectStatusResponse.policy_type_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string policy_object_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_policy_object_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectStatusResponse.policy_object_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string policy_object_status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_policy_object_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.a1t.admin.GetPolicyObjectStatusResponse.policy_object_status"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPolicyObjectStatusResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.a1t.admin.GetPolicyObjectStatusResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_type_id().data(), static_cast<int>(this->_internal_policy_type_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectStatusResponse.policy_type_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_policy_type_id(), target);
  }

  // string policy_object_id = 2;
  if (!this->_internal_policy_object_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_object_id().data(), static_cast<int>(this->_internal_policy_object_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectStatusResponse.policy_object_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_policy_object_id(), target);
  }

  // string policy_object_status = 3;
  if (!this->_internal_policy_object_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_policy_object_status().data(), static_cast<int>(this->_internal_policy_object_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.a1t.admin.GetPolicyObjectStatusResponse.policy_object_status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_policy_object_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.a1t.admin.GetPolicyObjectStatusResponse)
  return target;
}

size_t GetPolicyObjectStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.a1t.admin.GetPolicyObjectStatusResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string policy_type_id = 1;
  if (!this->_internal_policy_type_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_type_id());
  }

  // string policy_object_id = 2;
  if (!this->_internal_policy_object_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_object_id());
  }

  // string policy_object_status = 3;
  if (!this->_internal_policy_object_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_policy_object_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPolicyObjectStatusResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPolicyObjectStatusResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPolicyObjectStatusResponse::GetClassData() const { return &_class_data_; }

void GetPolicyObjectStatusResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPolicyObjectStatusResponse *>(to)->MergeFrom(
      static_cast<const GetPolicyObjectStatusResponse &>(from));
}


void GetPolicyObjectStatusResponse::MergeFrom(const GetPolicyObjectStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.a1t.admin.GetPolicyObjectStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_policy_type_id().empty()) {
    _internal_set_policy_type_id(from._internal_policy_type_id());
  }
  if (!from._internal_policy_object_id().empty()) {
    _internal_set_policy_object_id(from._internal_policy_object_id());
  }
  if (!from._internal_policy_object_status().empty()) {
    _internal_set_policy_object_status(from._internal_policy_object_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPolicyObjectStatusResponse::CopyFrom(const GetPolicyObjectStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.a1t.admin.GetPolicyObjectStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPolicyObjectStatusResponse::IsInitialized() const {
  return true;
}

void GetPolicyObjectStatusResponse::InternalSwap(GetPolicyObjectStatusResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_type_id_, lhs_arena,
      &other->policy_type_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_object_id_, lhs_arena,
      &other->policy_object_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &policy_object_status_, lhs_arena,
      &other->policy_object_status_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPolicyObjectStatusResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fa1t_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fa1t_2fadmin_2fadmin_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace a1t
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::a1t::admin::GetXAppConnectionsRequest* Arena::CreateMaybeMessage< ::onos::a1t::admin::GetXAppConnectionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::a1t::admin::GetXAppConnectionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::a1t::admin::GetXAppConnectionResponse* Arena::CreateMaybeMessage< ::onos::a1t::admin::GetXAppConnectionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::a1t::admin::GetXAppConnectionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::a1t::admin::GetPolicyTypeObjectRequest* Arena::CreateMaybeMessage< ::onos::a1t::admin::GetPolicyTypeObjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::a1t::admin::GetPolicyTypeObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::a1t::admin::GetPolicyTypeObjectResponse* Arena::CreateMaybeMessage< ::onos::a1t::admin::GetPolicyTypeObjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::a1t::admin::GetPolicyTypeObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::a1t::admin::GetPolicyObjectRequest* Arena::CreateMaybeMessage< ::onos::a1t::admin::GetPolicyObjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::a1t::admin::GetPolicyObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::a1t::admin::GetPolicyObjectResponse* Arena::CreateMaybeMessage< ::onos::a1t::admin::GetPolicyObjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::a1t::admin::GetPolicyObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::a1t::admin::GetPolicyObjectStatusRequest* Arena::CreateMaybeMessage< ::onos::a1t::admin::GetPolicyObjectStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::a1t::admin::GetPolicyObjectStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::a1t::admin::GetPolicyObjectStatusResponse* Arena::CreateMaybeMessage< ::onos::a1t::admin::GetPolicyObjectStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::a1t::admin::GetPolicyObjectStatusResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
