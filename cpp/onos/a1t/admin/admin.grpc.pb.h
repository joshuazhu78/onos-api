// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/a1t/admin/admin.proto
// Original file comments:
// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef GRPC_onos_2fa1t_2fadmin_2fadmin_2eproto__INCLUDED
#define GRPC_onos_2fa1t_2fadmin_2fadmin_2eproto__INCLUDED

#include "onos/a1t/admin/admin.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace a1t {
namespace admin {

class A1TAdminService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.a1t.admin.A1TAdminService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // GetXAppConnections
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>> GetXAppConnections(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>>(GetXAppConnectionsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>> AsyncGetXAppConnections(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>>(AsyncGetXAppConnectionsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>> PrepareAsyncGetXAppConnections(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>>(PrepareAsyncGetXAppConnectionsRaw(context, request, cq));
    }
    // GetPolicyTypeObject
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>> GetPolicyTypeObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>>(GetPolicyTypeObjectRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>> AsyncGetPolicyTypeObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>>(AsyncGetPolicyTypeObjectRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>> PrepareAsyncGetPolicyTypeObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>>(PrepareAsyncGetPolicyTypeObjectRaw(context, request, cq));
    }
    // GetPolicyObject
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>> GetPolicyObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>>(GetPolicyObjectRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>> AsyncGetPolicyObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>>(AsyncGetPolicyObjectRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>> PrepareAsyncGetPolicyObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>>(PrepareAsyncGetPolicyObjectRaw(context, request, cq));
    }
    // GetPolicyObjectStatus
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>> GetPolicyObjectStatus(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>>(GetPolicyObjectStatusRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>> AsyncGetPolicyObjectStatus(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>>(AsyncGetPolicyObjectStatusRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>> PrepareAsyncGetPolicyObjectStatus(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>>(PrepareAsyncGetPolicyObjectStatusRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // GetXAppConnections
      virtual void GetXAppConnections(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest* request, ::grpc::ClientReadReactor< ::onos::a1t::admin::GetXAppConnectionResponse>* reactor) = 0;
      // GetPolicyTypeObject
      virtual void GetPolicyTypeObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* request, ::grpc::ClientReadReactor< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* reactor) = 0;
      // GetPolicyObject
      virtual void GetPolicyObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest* request, ::grpc::ClientReadReactor< ::onos::a1t::admin::GetPolicyObjectResponse>* reactor) = 0;
      // GetPolicyObjectStatus
      virtual void GetPolicyObjectStatus(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* request, ::grpc::ClientReadReactor< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>* GetXAppConnectionsRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>* AsyncGetXAppConnectionsRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetXAppConnectionResponse>* PrepareAsyncGetXAppConnectionsRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* GetPolicyTypeObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* AsyncGetPolicyTypeObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* PrepareAsyncGetPolicyTypeObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>* GetPolicyObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>* AsyncGetPolicyObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectResponse>* PrepareAsyncGetPolicyObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* GetPolicyObjectStatusRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* AsyncGetPolicyObjectStatusRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* PrepareAsyncGetPolicyObjectStatusRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    std::unique_ptr< ::grpc::ClientReader< ::onos::a1t::admin::GetXAppConnectionResponse>> GetXAppConnections(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::a1t::admin::GetXAppConnectionResponse>>(GetXAppConnectionsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetXAppConnectionResponse>> AsyncGetXAppConnections(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetXAppConnectionResponse>>(AsyncGetXAppConnectionsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetXAppConnectionResponse>> PrepareAsyncGetXAppConnections(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetXAppConnectionResponse>>(PrepareAsyncGetXAppConnectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>> GetPolicyTypeObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>>(GetPolicyTypeObjectRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>> AsyncGetPolicyTypeObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>>(AsyncGetPolicyTypeObjectRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>> PrepareAsyncGetPolicyTypeObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>>(PrepareAsyncGetPolicyTypeObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyObjectResponse>> GetPolicyObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyObjectResponse>>(GetPolicyObjectRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectResponse>> AsyncGetPolicyObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectResponse>>(AsyncGetPolicyObjectRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectResponse>> PrepareAsyncGetPolicyObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectResponse>>(PrepareAsyncGetPolicyObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>> GetPolicyObjectStatus(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>>(GetPolicyObjectStatusRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>> AsyncGetPolicyObjectStatus(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>>(AsyncGetPolicyObjectStatusRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>> PrepareAsyncGetPolicyObjectStatus(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>>(PrepareAsyncGetPolicyObjectStatusRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetXAppConnections(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest* request, ::grpc::ClientReadReactor< ::onos::a1t::admin::GetXAppConnectionResponse>* reactor) override;
      void GetPolicyTypeObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* request, ::grpc::ClientReadReactor< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* reactor) override;
      void GetPolicyObject(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest* request, ::grpc::ClientReadReactor< ::onos::a1t::admin::GetPolicyObjectResponse>* reactor) override;
      void GetPolicyObjectStatus(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* request, ::grpc::ClientReadReactor< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientReader< ::onos::a1t::admin::GetXAppConnectionResponse>* GetXAppConnectionsRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetXAppConnectionResponse>* AsyncGetXAppConnectionsRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetXAppConnectionResponse>* PrepareAsyncGetXAppConnectionsRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* GetPolicyTypeObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* AsyncGetPolicyTypeObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* PrepareAsyncGetPolicyTypeObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyObjectResponse>* GetPolicyObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectResponse>* AsyncGetPolicyObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectResponse>* PrepareAsyncGetPolicyObjectRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* GetPolicyObjectStatusRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* AsyncGetPolicyObjectStatusRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* PrepareAsyncGetPolicyObjectStatusRaw(::grpc::ClientContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetXAppConnections_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPolicyTypeObject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPolicyObject_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPolicyObjectStatus_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // GetXAppConnections
    virtual ::grpc::Status GetXAppConnections(::grpc::ServerContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest* request, ::grpc::ServerWriter< ::onos::a1t::admin::GetXAppConnectionResponse>* writer);
    // GetPolicyTypeObject
    virtual ::grpc::Status GetPolicyTypeObject(::grpc::ServerContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* request, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* writer);
    // GetPolicyObject
    virtual ::grpc::Status GetPolicyObject(::grpc::ServerContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest* request, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectResponse>* writer);
    // GetPolicyObjectStatus
    virtual ::grpc::Status GetPolicyObjectStatus(::grpc::ServerContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* request, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetXAppConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetXAppConnections() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetXAppConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetXAppConnections(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetXAppConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetXAppConnectionResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetXAppConnections(::grpc::ServerContext* context, ::onos::a1t::admin::GetXAppConnectionsRequest* request, ::grpc::ServerAsyncWriter< ::onos::a1t::admin::GetXAppConnectionResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPolicyTypeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPolicyTypeObject() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetPolicyTypeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyTypeObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPolicyTypeObject(::grpc::ServerContext* context, ::onos::a1t::admin::GetPolicyTypeObjectRequest* request, ::grpc::ServerAsyncWriter< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPolicyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPolicyObject() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetPolicyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPolicyObject(::grpc::ServerContext* context, ::onos::a1t::admin::GetPolicyObjectRequest* request, ::grpc::ServerAsyncWriter< ::onos::a1t::admin::GetPolicyObjectResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPolicyObjectStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPolicyObjectStatus() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetPolicyObjectStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObjectStatus(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPolicyObjectStatus(::grpc::ServerContext* context, ::onos::a1t::admin::GetPolicyObjectStatusRequest* request, ::grpc::ServerAsyncWriter< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetXAppConnections<WithAsyncMethod_GetPolicyTypeObject<WithAsyncMethod_GetPolicyObject<WithAsyncMethod_GetPolicyObjectStatus<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetXAppConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetXAppConnections() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::a1t::admin::GetXAppConnectionsRequest, ::onos::a1t::admin::GetXAppConnectionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::a1t::admin::GetXAppConnectionsRequest* request) { return this->GetXAppConnections(context, request); }));
    }
    ~WithCallbackMethod_GetXAppConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetXAppConnections(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetXAppConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetXAppConnectionResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::a1t::admin::GetXAppConnectionResponse>* GetXAppConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::a1t::admin::GetXAppConnectionsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPolicyTypeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPolicyTypeObject() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::a1t::admin::GetPolicyTypeObjectRequest, ::onos::a1t::admin::GetPolicyTypeObjectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* request) { return this->GetPolicyTypeObject(context, request); }));
    }
    ~WithCallbackMethod_GetPolicyTypeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyTypeObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* GetPolicyTypeObject(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPolicyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPolicyObject() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::a1t::admin::GetPolicyObjectRequest, ::onos::a1t::admin::GetPolicyObjectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::a1t::admin::GetPolicyObjectRequest* request) { return this->GetPolicyObject(context, request); }));
    }
    ~WithCallbackMethod_GetPolicyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::a1t::admin::GetPolicyObjectResponse>* GetPolicyObject(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPolicyObjectStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPolicyObjectStatus() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::a1t::admin::GetPolicyObjectStatusRequest, ::onos::a1t::admin::GetPolicyObjectStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* request) { return this->GetPolicyObjectStatus(context, request); }));
    }
    ~WithCallbackMethod_GetPolicyObjectStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObjectStatus(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* GetPolicyObjectStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetXAppConnections<WithCallbackMethod_GetPolicyTypeObject<WithCallbackMethod_GetPolicyObject<WithCallbackMethod_GetPolicyObjectStatus<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetXAppConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetXAppConnections() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetXAppConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetXAppConnections(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetXAppConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetXAppConnectionResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPolicyTypeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPolicyTypeObject() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetPolicyTypeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyTypeObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPolicyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPolicyObject() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetPolicyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPolicyObjectStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPolicyObjectStatus() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetPolicyObjectStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObjectStatus(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetXAppConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetXAppConnections() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetXAppConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetXAppConnections(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetXAppConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetXAppConnectionResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetXAppConnections(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPolicyTypeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPolicyTypeObject() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetPolicyTypeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyTypeObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPolicyTypeObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPolicyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPolicyObject() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetPolicyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPolicyObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPolicyObjectStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPolicyObjectStatus() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetPolicyObjectStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObjectStatus(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPolicyObjectStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetXAppConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetXAppConnections() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetXAppConnections(context, request); }));
    }
    ~WithRawCallbackMethod_GetXAppConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetXAppConnections(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetXAppConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetXAppConnectionResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetXAppConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPolicyTypeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPolicyTypeObject() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetPolicyTypeObject(context, request); }));
    }
    ~WithRawCallbackMethod_GetPolicyTypeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyTypeObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetPolicyTypeObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPolicyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPolicyObject() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetPolicyObject(context, request); }));
    }
    ~WithRawCallbackMethod_GetPolicyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetPolicyObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPolicyObjectStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPolicyObjectStatus() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetPolicyObjectStatus(context, request); }));
    }
    ~WithRawCallbackMethod_GetPolicyObjectStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPolicyObjectStatus(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetPolicyObjectStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  typedef Service StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetXAppConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetXAppConnections() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::a1t::admin::GetXAppConnectionsRequest, ::onos::a1t::admin::GetXAppConnectionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::a1t::admin::GetXAppConnectionsRequest, ::onos::a1t::admin::GetXAppConnectionResponse>* streamer) {
                       return this->StreamedGetXAppConnections(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetXAppConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetXAppConnections(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetXAppConnectionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetXAppConnectionResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetXAppConnections(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::a1t::admin::GetXAppConnectionsRequest,::onos::a1t::admin::GetXAppConnectionResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetPolicyTypeObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetPolicyTypeObject() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::a1t::admin::GetPolicyTypeObjectRequest, ::onos::a1t::admin::GetPolicyTypeObjectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::a1t::admin::GetPolicyTypeObjectRequest, ::onos::a1t::admin::GetPolicyTypeObjectResponse>* streamer) {
                       return this->StreamedGetPolicyTypeObject(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetPolicyTypeObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPolicyTypeObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyTypeObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyTypeObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetPolicyTypeObject(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::a1t::admin::GetPolicyTypeObjectRequest,::onos::a1t::admin::GetPolicyTypeObjectResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetPolicyObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetPolicyObject() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::a1t::admin::GetPolicyObjectRequest, ::onos::a1t::admin::GetPolicyObjectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::a1t::admin::GetPolicyObjectRequest, ::onos::a1t::admin::GetPolicyObjectResponse>* streamer) {
                       return this->StreamedGetPolicyObject(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetPolicyObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPolicyObject(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetPolicyObject(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::a1t::admin::GetPolicyObjectRequest,::onos::a1t::admin::GetPolicyObjectResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetPolicyObjectStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetPolicyObjectStatus() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::a1t::admin::GetPolicyObjectStatusRequest, ::onos::a1t::admin::GetPolicyObjectStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::a1t::admin::GetPolicyObjectStatusRequest, ::onos::a1t::admin::GetPolicyObjectStatusResponse>* streamer) {
                       return this->StreamedGetPolicyObjectStatus(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetPolicyObjectStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPolicyObjectStatus(::grpc::ServerContext* /*context*/, const ::onos::a1t::admin::GetPolicyObjectStatusRequest* /*request*/, ::grpc::ServerWriter< ::onos::a1t::admin::GetPolicyObjectStatusResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetPolicyObjectStatus(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::a1t::admin::GetPolicyObjectStatusRequest,::onos::a1t::admin::GetPolicyObjectStatusResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetXAppConnections<WithSplitStreamingMethod_GetPolicyTypeObject<WithSplitStreamingMethod_GetPolicyObject<WithSplitStreamingMethod_GetPolicyObjectStatus<Service > > > > SplitStreamedService;
  typedef WithSplitStreamingMethod_GetXAppConnections<WithSplitStreamingMethod_GetPolicyTypeObject<WithSplitStreamingMethod_GetPolicyObject<WithSplitStreamingMethod_GetPolicyObjectStatus<Service > > > > StreamedService;
};

}  // namespace admin
}  // namespace a1t
}  // namespace onos


#endif  // GRPC_onos_2fa1t_2fadmin_2fadmin_2eproto__INCLUDED
