// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/a1t/a1/ei.proto
// Original file comments:
// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef GRPC_onos_2fa1t_2fa1_2fei_2eproto__INCLUDED
#define GRPC_onos_2fa1t_2fa1_2fei_2eproto__INCLUDED

#include "onos/a1t/a1/ei.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace a1t {
namespace a1 {

class EIService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.a1t.a1.EIService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIQuery(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIQueryRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIQuery(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIQueryRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIQuery(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIQueryRaw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIJobSetup(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIJobSetupRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIJobSetup(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIJobSetupRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIJobSetup(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIJobSetupRaw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIJobUpdate(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIJobUpdateRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIJobUpdate(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIJobUpdateRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIJobUpdate(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIJobUpdateRaw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIJobDelete(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIJobDeleteRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIJobDelete(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIJobDeleteRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIJobDelete(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIJobDeleteRaw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIJobStatusQuery(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIJobStatusQueryRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIJobStatusQuery(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIJobStatusQueryRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIJobStatusQuery(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIJobStatusQueryRaw(context, cq));
    }
    virtual ::grpc::Status EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::onos::a1t::a1::EIAckMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>> AsyncEIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>>(AsyncEIJobStatusNotifyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>> PrepareAsyncEIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>>(PrepareAsyncEIJobStatusNotifyRaw(context, request, cq));
    }
    virtual ::grpc::Status EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::onos::a1t::a1::EIAckMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>> AsyncEIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>>(AsyncEIJobResultDeliveryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>> PrepareAsyncEIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>>(PrepareAsyncEIJobResultDeliveryRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void EIQuery(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) = 0;
      virtual void EIJobSetup(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) = 0;
      virtual void EIJobUpdate(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) = 0;
      virtual void EIJobDelete(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) = 0;
      virtual void EIJobStatusQuery(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) = 0;
      virtual void EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIQueryRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobSetupRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIJobSetupRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIJobSetupRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobUpdateRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIJobUpdateRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIJobUpdateRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobDeleteRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIJobDeleteRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIJobDeleteRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobStatusQueryRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIJobStatusQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIJobStatusQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>* AsyncEIJobStatusNotifyRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>* PrepareAsyncEIJobStatusNotifyRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>* AsyncEIJobResultDeliveryRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::a1t::a1::EIAckMessage>* PrepareAsyncEIJobResultDeliveryRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIQuery(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIQueryRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIQuery(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIQueryRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIQuery(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIQueryRaw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIJobSetup(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIJobSetupRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIJobSetup(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIJobSetupRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIJobSetup(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIJobSetupRaw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIJobUpdate(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIJobUpdateRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIJobUpdate(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIJobUpdateRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIJobUpdate(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIJobUpdateRaw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIJobDelete(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIJobDeleteRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIJobDelete(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIJobDeleteRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIJobDelete(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIJobDeleteRaw(context, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> EIJobStatusQuery(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(EIJobStatusQueryRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> AsyncEIJobStatusQuery(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(AsyncEIJobStatusQueryRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>> PrepareAsyncEIJobStatusQuery(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>>(PrepareAsyncEIJobStatusQueryRaw(context, cq));
    }
    ::grpc::Status EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::onos::a1t::a1::EIAckMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>> AsyncEIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>>(AsyncEIJobStatusNotifyRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>> PrepareAsyncEIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>>(PrepareAsyncEIJobStatusNotifyRaw(context, request, cq));
    }
    ::grpc::Status EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::onos::a1t::a1::EIAckMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>> AsyncEIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>>(AsyncEIJobResultDeliveryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>> PrepareAsyncEIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>>(PrepareAsyncEIJobResultDeliveryRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void EIQuery(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) override;
      void EIJobSetup(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) override;
      void EIJobUpdate(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) override;
      void EIJobDelete(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) override;
      void EIJobStatusQuery(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) override;
      void EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response, std::function<void(::grpc::Status)>) override;
      void EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
      void EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response, std::function<void(::grpc::Status)>) override;
      void EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIQueryRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobSetupRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIJobSetupRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIJobSetupRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobUpdateRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIJobUpdateRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIJobUpdateRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobDeleteRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIJobDeleteRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIJobDeleteRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobStatusQueryRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* AsyncEIJobStatusQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* PrepareAsyncEIJobStatusQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>* AsyncEIJobStatusNotifyRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>* PrepareAsyncEIJobStatusNotifyRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>* AsyncEIJobResultDeliveryRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>* PrepareAsyncEIJobResultDeliveryRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_EIQuery_;
    const ::grpc::internal::RpcMethod rpcmethod_EIJobSetup_;
    const ::grpc::internal::RpcMethod rpcmethod_EIJobUpdate_;
    const ::grpc::internal::RpcMethod rpcmethod_EIJobDelete_;
    const ::grpc::internal::RpcMethod rpcmethod_EIJobStatusQuery_;
    const ::grpc::internal::RpcMethod rpcmethod_EIJobStatusNotify_;
    const ::grpc::internal::RpcMethod rpcmethod_EIJobResultDelivery_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status EIQuery(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream);
    virtual ::grpc::Status EIJobSetup(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream);
    virtual ::grpc::Status EIJobUpdate(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream);
    virtual ::grpc::Status EIJobDelete(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream);
    virtual ::grpc::Status EIJobStatusQuery(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream);
    virtual ::grpc::Status EIJobStatusNotify(::grpc::ServerContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response);
    virtual ::grpc::Status EIJobResultDelivery(::grpc::ServerContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_EIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EIQuery() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_EIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIQuery(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(0, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EIJobSetup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EIJobSetup() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_EIJobSetup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobSetup(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobSetup(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(1, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EIJobUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EIJobUpdate() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_EIJobUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobUpdate(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobUpdate(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(2, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EIJobDelete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EIJobDelete() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_EIJobDelete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobDelete(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobDelete(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(3, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EIJobStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EIJobStatusQuery() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_EIJobStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobStatusQuery(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(4, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EIJobStatusNotify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EIJobStatusNotify() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_EIJobStatusNotify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusNotify(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIStatusMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobStatusNotify(::grpc::ServerContext* context, ::onos::a1t::a1::EIStatusMessage* request, ::grpc::ServerAsyncResponseWriter< ::onos::a1t::a1::EIAckMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EIJobResultDelivery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_EIJobResultDelivery() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_EIJobResultDelivery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobResultDelivery(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIResultMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobResultDelivery(::grpc::ServerContext* context, ::onos::a1t::a1::EIResultMessage* request, ::grpc::ServerAsyncResponseWriter< ::onos::a1t::a1::EIAckMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_EIQuery<WithAsyncMethod_EIJobSetup<WithAsyncMethod_EIJobUpdate<WithAsyncMethod_EIJobDelete<WithAsyncMethod_EIJobStatusQuery<WithAsyncMethod_EIJobStatusNotify<WithAsyncMethod_EIJobResultDelivery<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_EIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EIQuery() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackBidiHandler< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIQuery(context); }));
    }
    ~WithCallbackMethod_EIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIQuery(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EIJobSetup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EIJobSetup() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackBidiHandler< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIJobSetup(context); }));
    }
    ~WithCallbackMethod_EIJobSetup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobSetup(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobSetup(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EIJobUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EIJobUpdate() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackBidiHandler< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIJobUpdate(context); }));
    }
    ~WithCallbackMethod_EIJobUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobUpdate(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobUpdate(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EIJobDelete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EIJobDelete() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackBidiHandler< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIJobDelete(context); }));
    }
    ~WithCallbackMethod_EIJobDelete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobDelete(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobDelete(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EIJobStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EIJobStatusQuery() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackBidiHandler< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIJobStatusQuery(context); }));
    }
    ~WithCallbackMethod_EIJobStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIJobStatusQuery(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EIJobStatusNotify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EIJobStatusNotify() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::a1t::a1::EIStatusMessage, ::onos::a1t::a1::EIAckMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response) { return this->EIJobStatusNotify(context, request, response); }));}
    void SetMessageAllocatorFor_EIJobStatusNotify(
        ::grpc::MessageAllocator< ::onos::a1t::a1::EIStatusMessage, ::onos::a1t::a1::EIAckMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::a1t::a1::EIStatusMessage, ::onos::a1t::a1::EIAckMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EIJobStatusNotify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusNotify(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIStatusMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EIJobStatusNotify(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::a1t::a1::EIStatusMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_EIJobResultDelivery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_EIJobResultDelivery() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIAckMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response) { return this->EIJobResultDelivery(context, request, response); }));}
    void SetMessageAllocatorFor_EIJobResultDelivery(
        ::grpc::MessageAllocator< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIAckMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIAckMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_EIJobResultDelivery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobResultDelivery(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIResultMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EIJobResultDelivery(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::a1t::a1::EIResultMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_EIQuery<WithCallbackMethod_EIJobSetup<WithCallbackMethod_EIJobUpdate<WithCallbackMethod_EIJobDelete<WithCallbackMethod_EIJobStatusQuery<WithCallbackMethod_EIJobStatusNotify<WithCallbackMethod_EIJobResultDelivery<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_EIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EIQuery() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_EIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EIJobSetup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EIJobSetup() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_EIJobSetup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobSetup(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EIJobUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EIJobUpdate() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_EIJobUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobUpdate(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EIJobDelete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EIJobDelete() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_EIJobDelete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobDelete(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EIJobStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EIJobStatusQuery() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_EIJobStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EIJobStatusNotify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EIJobStatusNotify() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_EIJobStatusNotify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusNotify(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIStatusMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EIJobResultDelivery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_EIJobResultDelivery() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_EIJobResultDelivery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobResultDelivery(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIResultMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_EIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EIQuery() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_EIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIQuery(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(0, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EIJobSetup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EIJobSetup() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_EIJobSetup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobSetup(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobSetup(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(1, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EIJobUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EIJobUpdate() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_EIJobUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobUpdate(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobUpdate(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(2, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EIJobDelete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EIJobDelete() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_EIJobDelete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobDelete(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobDelete(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(3, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EIJobStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EIJobStatusQuery() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_EIJobStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobStatusQuery(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(4, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EIJobStatusNotify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EIJobStatusNotify() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_EIJobStatusNotify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusNotify(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIStatusMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobStatusNotify(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_EIJobResultDelivery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_EIJobResultDelivery() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_EIJobResultDelivery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobResultDelivery(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIResultMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEIJobResultDelivery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EIQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EIQuery() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIQuery(context); }));
    }
    ~WithRawCallbackMethod_EIQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* EIQuery(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EIJobSetup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EIJobSetup() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIJobSetup(context); }));
    }
    ~WithRawCallbackMethod_EIJobSetup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobSetup(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* EIJobSetup(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EIJobUpdate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EIJobUpdate() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIJobUpdate(context); }));
    }
    ~WithRawCallbackMethod_EIJobUpdate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobUpdate(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* EIJobUpdate(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EIJobDelete : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EIJobDelete() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIJobDelete(context); }));
    }
    ~WithRawCallbackMethod_EIJobDelete() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobDelete(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* EIJobDelete(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EIJobStatusQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EIJobStatusQuery() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->EIJobStatusQuery(context); }));
    }
    ~WithRawCallbackMethod_EIJobStatusQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusQuery(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* EIJobStatusQuery(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EIJobStatusNotify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EIJobStatusNotify() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EIJobStatusNotify(context, request, response); }));
    }
    ~WithRawCallbackMethod_EIJobStatusNotify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobStatusNotify(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIStatusMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EIJobStatusNotify(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_EIJobResultDelivery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_EIJobResultDelivery() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->EIJobResultDelivery(context, request, response); }));
    }
    ~WithRawCallbackMethod_EIJobResultDelivery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EIJobResultDelivery(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIResultMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* EIJobResultDelivery(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EIJobStatusNotify : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EIJobStatusNotify() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::a1t::a1::EIStatusMessage, ::onos::a1t::a1::EIAckMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::a1t::a1::EIStatusMessage, ::onos::a1t::a1::EIAckMessage>* streamer) {
                       return this->StreamedEIJobStatusNotify(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EIJobStatusNotify() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EIJobStatusNotify(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIStatusMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEIJobStatusNotify(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::a1t::a1::EIStatusMessage,::onos::a1t::a1::EIAckMessage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EIJobResultDelivery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_EIJobResultDelivery() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIAckMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIAckMessage>* streamer) {
                       return this->StreamedEIJobResultDelivery(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_EIJobResultDelivery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EIJobResultDelivery(::grpc::ServerContext* /*context*/, const ::onos::a1t::a1::EIResultMessage* /*request*/, ::onos::a1t::a1::EIAckMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEIJobResultDelivery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIAckMessage>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_EIJobStatusNotify<WithStreamedUnaryMethod_EIJobResultDelivery<Service > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_EIJobStatusNotify<WithStreamedUnaryMethod_EIJobResultDelivery<Service > > StreamedService;
};

}  // namespace a1
}  // namespace a1t
}  // namespace onos


#endif  // GRPC_onos_2fa1t_2fa1_2fei_2eproto__INCLUDED
