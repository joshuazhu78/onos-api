// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/a1t/a1/ei.proto

#include "onos/a1t/a1/ei.pb.h"
#include "onos/a1t/a1/ei.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace onos {
namespace a1t {
namespace a1 {

static const char* EIService_method_names[] = {
  "/onos.a1t.a1.EIService/EIQuery",
  "/onos.a1t.a1.EIService/EIJobSetup",
  "/onos.a1t.a1.EIService/EIJobUpdate",
  "/onos.a1t.a1.EIService/EIJobDelete",
  "/onos.a1t.a1.EIService/EIJobStatusQuery",
  "/onos.a1t.a1.EIService/EIJobStatusNotify",
  "/onos.a1t.a1.EIService/EIJobResultDelivery",
};

std::unique_ptr< EIService::Stub> EIService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< EIService::Stub> stub(new EIService::Stub(channel, options));
  return stub;
}

EIService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_EIQuery_(EIService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  , rpcmethod_EIJobSetup_(EIService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  , rpcmethod_EIJobUpdate_(EIService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  , rpcmethod_EIJobDelete_(EIService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  , rpcmethod_EIJobStatusQuery_(EIService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::BIDI_STREAMING, channel)
  , rpcmethod_EIJobStatusNotify_(EIService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_EIJobResultDelivery_(EIService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::EIQueryRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), rpcmethod_EIQuery_, context);
}

void EIService::Stub::async::EIQuery(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) {
  ::grpc::internal::ClientCallbackReaderWriterFactory< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>::Create(stub_->channel_.get(), stub_->rpcmethod_EIQuery_, context, reactor);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::AsyncEIQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIQuery_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::PrepareAsyncEIQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIQuery_, context, false, nullptr);
}

::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::EIJobSetupRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), rpcmethod_EIJobSetup_, context);
}

void EIService::Stub::async::EIJobSetup(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) {
  ::grpc::internal::ClientCallbackReaderWriterFactory< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>::Create(stub_->channel_.get(), stub_->rpcmethod_EIJobSetup_, context, reactor);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::AsyncEIJobSetupRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIJobSetup_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::PrepareAsyncEIJobSetupRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIJobSetup_, context, false, nullptr);
}

::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::EIJobUpdateRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), rpcmethod_EIJobUpdate_, context);
}

void EIService::Stub::async::EIJobUpdate(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) {
  ::grpc::internal::ClientCallbackReaderWriterFactory< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>::Create(stub_->channel_.get(), stub_->rpcmethod_EIJobUpdate_, context, reactor);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::AsyncEIJobUpdateRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIJobUpdate_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::PrepareAsyncEIJobUpdateRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIJobUpdate_, context, false, nullptr);
}

::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::EIJobDeleteRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), rpcmethod_EIJobDelete_, context);
}

void EIService::Stub::async::EIJobDelete(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) {
  ::grpc::internal::ClientCallbackReaderWriterFactory< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>::Create(stub_->channel_.get(), stub_->rpcmethod_EIJobDelete_, context, reactor);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::AsyncEIJobDeleteRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIJobDelete_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::PrepareAsyncEIJobDeleteRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIJobDelete_, context, false, nullptr);
}

::grpc::ClientReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::EIJobStatusQueryRaw(::grpc::ClientContext* context) {
  return ::grpc::internal::ClientReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), rpcmethod_EIJobStatusQuery_, context);
}

void EIService::Stub::async::EIJobStatusQuery(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>* reactor) {
  ::grpc::internal::ClientCallbackReaderWriterFactory< ::onos::a1t::a1::EIResultMessage,::onos::a1t::a1::EIRequestMessage>::Create(stub_->channel_.get(), stub_->rpcmethod_EIJobStatusQuery_, context, reactor);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::AsyncEIJobStatusQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIJobStatusQuery_, context, true, tag);
}

::grpc::ClientAsyncReaderWriter< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>* EIService::Stub::PrepareAsyncEIJobStatusQueryRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderWriterFactory< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>::Create(channel_.get(), cq, rpcmethod_EIJobStatusQuery_, context, false, nullptr);
}

::grpc::Status EIService::Stub::EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::onos::a1t::a1::EIAckMessage* response) {
  return ::grpc::internal::BlockingUnaryCall< ::onos::a1t::a1::EIStatusMessage, ::onos::a1t::a1::EIAckMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_EIJobStatusNotify_, context, request, response);
}

void EIService::Stub::async::EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::onos::a1t::a1::EIStatusMessage, ::onos::a1t::a1::EIAckMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EIJobStatusNotify_, context, request, response, std::move(f));
}

void EIService::Stub::async::EIJobStatusNotify(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EIJobStatusNotify_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>* EIService::Stub::PrepareAsyncEIJobStatusNotifyRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::onos::a1t::a1::EIAckMessage, ::onos::a1t::a1::EIStatusMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_EIJobStatusNotify_, context, request);
}

::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>* EIService::Stub::AsyncEIJobStatusNotifyRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIStatusMessage& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncEIJobStatusNotifyRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status EIService::Stub::EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::onos::a1t::a1::EIAckMessage* response) {
  return ::grpc::internal::BlockingUnaryCall< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIAckMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_EIJobResultDelivery_, context, request, response);
}

void EIService::Stub::async::EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIAckMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EIJobResultDelivery_, context, request, response, std::move(f));
}

void EIService::Stub::async::EIJobResultDelivery(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_EIJobResultDelivery_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>* EIService::Stub::PrepareAsyncEIJobResultDeliveryRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::onos::a1t::a1::EIAckMessage, ::onos::a1t::a1::EIResultMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_EIJobResultDelivery_, context, request);
}

::grpc::ClientAsyncResponseReader< ::onos::a1t::a1::EIAckMessage>* EIService::Stub::AsyncEIJobResultDeliveryRaw(::grpc::ClientContext* context, const ::onos::a1t::a1::EIResultMessage& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncEIJobResultDeliveryRaw(context, request, cq);
  result->StartCall();
  return result;
}

EIService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EIService_method_names[0],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< EIService::Service, ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
          [](EIService::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReaderWriter<::onos::a1t::a1::EIRequestMessage,
             ::onos::a1t::a1::EIResultMessage>* stream) {
               return service->EIQuery(ctx, stream);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EIService_method_names[1],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< EIService::Service, ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
          [](EIService::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReaderWriter<::onos::a1t::a1::EIRequestMessage,
             ::onos::a1t::a1::EIResultMessage>* stream) {
               return service->EIJobSetup(ctx, stream);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EIService_method_names[2],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< EIService::Service, ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
          [](EIService::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReaderWriter<::onos::a1t::a1::EIRequestMessage,
             ::onos::a1t::a1::EIResultMessage>* stream) {
               return service->EIJobUpdate(ctx, stream);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EIService_method_names[3],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< EIService::Service, ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
          [](EIService::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReaderWriter<::onos::a1t::a1::EIRequestMessage,
             ::onos::a1t::a1::EIResultMessage>* stream) {
               return service->EIJobDelete(ctx, stream);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EIService_method_names[4],
      ::grpc::internal::RpcMethod::BIDI_STREAMING,
      new ::grpc::internal::BidiStreamingHandler< EIService::Service, ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIRequestMessage>(
          [](EIService::Service* service,
             ::grpc::ServerContext* ctx,
             ::grpc::ServerReaderWriter<::onos::a1t::a1::EIRequestMessage,
             ::onos::a1t::a1::EIResultMessage>* stream) {
               return service->EIJobStatusQuery(ctx, stream);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EIService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EIService::Service, ::onos::a1t::a1::EIStatusMessage, ::onos::a1t::a1::EIAckMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](EIService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::onos::a1t::a1::EIStatusMessage* req,
             ::onos::a1t::a1::EIAckMessage* resp) {
               return service->EIJobStatusNotify(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      EIService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< EIService::Service, ::onos::a1t::a1::EIResultMessage, ::onos::a1t::a1::EIAckMessage, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](EIService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::onos::a1t::a1::EIResultMessage* req,
             ::onos::a1t::a1::EIAckMessage* resp) {
               return service->EIJobResultDelivery(ctx, req, resp);
             }, this)));
}

EIService::Service::~Service() {
}

::grpc::Status EIService::Service::EIQuery(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EIService::Service::EIJobSetup(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EIService::Service::EIJobUpdate(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EIService::Service::EIJobDelete(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EIService::Service::EIJobStatusQuery(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::onos::a1t::a1::EIRequestMessage, ::onos::a1t::a1::EIResultMessage>* stream) {
  (void) context;
  (void) stream;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EIService::Service::EIJobStatusNotify(::grpc::ServerContext* context, const ::onos::a1t::a1::EIStatusMessage* request, ::onos::a1t::a1::EIAckMessage* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status EIService::Service::EIJobResultDelivery(::grpc::ServerContext* context, const ::onos::a1t::a1::EIResultMessage* request, ::onos::a1t::a1::EIAckMessage* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace onos
}  // namespace a1t
}  // namespace a1

