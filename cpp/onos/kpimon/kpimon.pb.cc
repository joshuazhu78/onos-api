// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/kpimon/kpimon.proto

#include "onos/kpimon/kpimon.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace kpimon {
constexpr GetRequest::GetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetRequestDefaultTypeInternal {
  constexpr GetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetRequestDefaultTypeInternal() {}
  union {
    GetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetRequestDefaultTypeInternal _GetRequest_default_instance_;
constexpr GetResponse_MeasurementsEntry_DoNotUse::GetResponse_MeasurementsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetResponse_MeasurementsEntry_DoNotUseDefaultTypeInternal {
  constexpr GetResponse_MeasurementsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetResponse_MeasurementsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetResponse_MeasurementsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetResponse_MeasurementsEntry_DoNotUseDefaultTypeInternal _GetResponse_MeasurementsEntry_DoNotUse_default_instance_;
constexpr GetResponse::GetResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : measurements_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct GetResponseDefaultTypeInternal {
  constexpr GetResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetResponseDefaultTypeInternal() {}
  union {
    GetResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetResponseDefaultTypeInternal _GetResponse_default_instance_;
constexpr MeasurementItems::MeasurementItems(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : measurement_items_(){}
struct MeasurementItemsDefaultTypeInternal {
  constexpr MeasurementItemsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MeasurementItemsDefaultTypeInternal() {}
  union {
    MeasurementItems _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MeasurementItemsDefaultTypeInternal _MeasurementItems_default_instance_;
constexpr MeasurementItem::MeasurementItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : measurement_records_(){}
struct MeasurementItemDefaultTypeInternal {
  constexpr MeasurementItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MeasurementItemDefaultTypeInternal() {}
  union {
    MeasurementItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MeasurementItemDefaultTypeInternal _MeasurementItem_default_instance_;
constexpr IntegerValue::IntegerValue(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(int64_t{0}){}
struct IntegerValueDefaultTypeInternal {
  constexpr IntegerValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~IntegerValueDefaultTypeInternal() {}
  union {
    IntegerValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT IntegerValueDefaultTypeInternal _IntegerValue_default_instance_;
constexpr RealValue::RealValue(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(0){}
struct RealValueDefaultTypeInternal {
  constexpr RealValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RealValueDefaultTypeInternal() {}
  union {
    RealValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RealValueDefaultTypeInternal _RealValue_default_instance_;
constexpr NoValue::NoValue(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(0){}
struct NoValueDefaultTypeInternal {
  constexpr NoValueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NoValueDefaultTypeInternal() {}
  union {
    NoValue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NoValueDefaultTypeInternal _NoValue_default_instance_;
constexpr MeasurementRecord::MeasurementRecord(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : measurement_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , measurement_value_(nullptr)
  , timestamp_(uint64_t{0u}){}
struct MeasurementRecordDefaultTypeInternal {
  constexpr MeasurementRecordDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MeasurementRecordDefaultTypeInternal() {}
  union {
    MeasurementRecord _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MeasurementRecordDefaultTypeInternal _MeasurementRecord_default_instance_;
}  // namespace kpimon
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_onos_2fkpimon_2fkpimon_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fkpimon_2fkpimon_2eproto = nullptr;

const uint32_t TableStruct_onos_2fkpimon_2fkpimon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::GetResponse, measurements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::MeasurementItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::MeasurementItems, measurement_items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::MeasurementItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::MeasurementItem, measurement_records_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::IntegerValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::IntegerValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::RealValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::RealValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::NoValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::NoValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::MeasurementRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::MeasurementRecord, timestamp_),
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::MeasurementRecord, measurement_name_),
  PROTOBUF_FIELD_OFFSET(::onos::kpimon::MeasurementRecord, measurement_value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::kpimon::GetRequest)},
  { 6, 14, -1, sizeof(::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse)},
  { 16, -1, -1, sizeof(::onos::kpimon::GetResponse)},
  { 23, -1, -1, sizeof(::onos::kpimon::MeasurementItems)},
  { 30, -1, -1, sizeof(::onos::kpimon::MeasurementItem)},
  { 37, -1, -1, sizeof(::onos::kpimon::IntegerValue)},
  { 44, -1, -1, sizeof(::onos::kpimon::RealValue)},
  { 51, -1, -1, sizeof(::onos::kpimon::NoValue)},
  { 58, -1, -1, sizeof(::onos::kpimon::MeasurementRecord)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_GetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_GetResponse_MeasurementsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_GetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_MeasurementItems_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_MeasurementItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_IntegerValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_RealValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_NoValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::kpimon::_MeasurementRecord_default_instance_),
};

const char descriptor_table_protodef_onos_2fkpimon_2fkpimon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030onos/kpimon/kpimon.proto\022\013onos.kpimon\032"
  "\031google/protobuf/any.proto\"\014\n\nGetRequest"
  "\"\243\001\n\013GetResponse\022@\n\014measurements\030\001 \003(\0132*"
  ".onos.kpimon.GetResponse.MeasurementsEnt"
  "ry\032R\n\021MeasurementsEntry\022\013\n\003key\030\001 \001(\t\022,\n\005"
  "value\030\002 \001(\0132\035.onos.kpimon.MeasurementIte"
  "ms:\0028\001\"K\n\020MeasurementItems\0227\n\021measuremen"
  "t_items\030\001 \003(\0132\034.onos.kpimon.MeasurementI"
  "tem\"N\n\017MeasurementItem\022;\n\023measurement_re"
  "cords\030\001 \003(\0132\036.onos.kpimon.MeasurementRec"
  "ord\"\035\n\014IntegerValue\022\r\n\005value\030\001 \001(\003\"\032\n\tRe"
  "alValue\022\r\n\005value\030\001 \001(\001\"\030\n\007NoValue\022\r\n\005val"
  "ue\030\001 \001(\005\"q\n\021MeasurementRecord\022\021\n\ttimesta"
  "mp\030\002 \001(\004\022\030\n\020measurement_name\030\003 \001(\t\022/\n\021me"
  "asurement_value\030\004 \001(\0132\024.google.protobuf."
  "Any2\233\001\n\006Kpimon\022G\n\020ListMeasurements\022\027.ono"
  "s.kpimon.GetRequest\032\030.onos.kpimon.GetRes"
  "ponse\"\000\022H\n\021WatchMeasurements\022\027.onos.kpim"
  "on.GetRequest\032\030.onos.kpimon.GetResponse0"
  "\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fkpimon_2fkpimon_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fkpimon_2fkpimon_2eproto = {
  false, false, 769, descriptor_table_protodef_onos_2fkpimon_2fkpimon_2eproto, "onos/kpimon/kpimon.proto", 
  &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once, descriptor_table_onos_2fkpimon_2fkpimon_2eproto_deps, 1, 9,
  schemas, file_default_instances, TableStruct_onos_2fkpimon_2fkpimon_2eproto::offsets,
  file_level_metadata_onos_2fkpimon_2fkpimon_2eproto, file_level_enum_descriptors_onos_2fkpimon_2fkpimon_2eproto, file_level_service_descriptors_onos_2fkpimon_2fkpimon_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter() {
  return &descriptor_table_onos_2fkpimon_2fkpimon_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fkpimon_2fkpimon_2eproto(&descriptor_table_onos_2fkpimon_2fkpimon_2eproto);
namespace onos {
namespace kpimon {

// ===================================================================

class GetRequest::_Internal {
 public:
};

GetRequest::GetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.kpimon.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.kpimon.GetRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[0]);
}

// ===================================================================

GetResponse_MeasurementsEntry_DoNotUse::GetResponse_MeasurementsEntry_DoNotUse() {}
GetResponse_MeasurementsEntry_DoNotUse::GetResponse_MeasurementsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetResponse_MeasurementsEntry_DoNotUse::MergeFrom(const GetResponse_MeasurementsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetResponse_MeasurementsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[1]);
}

// ===================================================================

class GetResponse::_Internal {
 public:
};

GetResponse::GetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  measurements_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.kpimon.GetResponse)
}
GetResponse::GetResponse(const GetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  measurements_.MergeFrom(from.measurements_);
  // @@protoc_insertion_point(copy_constructor:onos.kpimon.GetResponse)
}

inline void GetResponse::SharedCtor() {
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:onos.kpimon.GetResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetResponse::ArenaDtor(void* object) {
  GetResponse* _this = reinterpret_cast< GetResponse* >(object);
  (void)_this;
  _this->measurements_. ~MapField();
}
inline void GetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &GetResponse::ArenaDtor);
  }
}
void GetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.kpimon.GetResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  measurements_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .onos.kpimon.MeasurementItems> measurements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&measurements_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.kpimon.GetResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .onos.kpimon.MeasurementItems> measurements = 1;
  if (!this->_internal_measurements().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "onos.kpimon.GetResponse.MeasurementsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_measurements().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_measurements().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >::const_iterator
          it = this->_internal_measurements().begin();
          it != this->_internal_measurements().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetResponse_MeasurementsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >::const_iterator
          it = this->_internal_measurements().begin();
          it != this->_internal_measurements().end(); ++it) {
        target = GetResponse_MeasurementsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.kpimon.GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.kpimon.GetResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .onos.kpimon.MeasurementItems> measurements = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_measurements_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >::const_iterator
      it = this->_internal_measurements().begin();
      it != this->_internal_measurements().end(); ++it) {
    total_size += GetResponse_MeasurementsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetResponse::GetClassData() const { return &_class_data_; }

void GetResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetResponse *>(to)->MergeFrom(
      static_cast<const GetResponse &>(from));
}


void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.kpimon.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  measurements_.MergeFrom(from.measurements_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.kpimon.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {
  return true;
}

void GetResponse::InternalSwap(GetResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  measurements_.InternalSwap(&other->measurements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[2]);
}

// ===================================================================

class MeasurementItems::_Internal {
 public:
};

MeasurementItems::MeasurementItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  measurement_items_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.kpimon.MeasurementItems)
}
MeasurementItems::MeasurementItems(const MeasurementItems& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      measurement_items_(from.measurement_items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.kpimon.MeasurementItems)
}

inline void MeasurementItems::SharedCtor() {
}

MeasurementItems::~MeasurementItems() {
  // @@protoc_insertion_point(destructor:onos.kpimon.MeasurementItems)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MeasurementItems::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MeasurementItems::ArenaDtor(void* object) {
  MeasurementItems* _this = reinterpret_cast< MeasurementItems* >(object);
  (void)_this;
}
void MeasurementItems::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MeasurementItems::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MeasurementItems::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.kpimon.MeasurementItems)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  measurement_items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MeasurementItems::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .onos.kpimon.MeasurementItem measurement_items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_measurement_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MeasurementItems::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.kpimon.MeasurementItems)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onos.kpimon.MeasurementItem measurement_items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_measurement_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_measurement_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.kpimon.MeasurementItems)
  return target;
}

size_t MeasurementItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.kpimon.MeasurementItems)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.kpimon.MeasurementItem measurement_items = 1;
  total_size += 1UL * this->_internal_measurement_items_size();
  for (const auto& msg : this->measurement_items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MeasurementItems::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MeasurementItems::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MeasurementItems::GetClassData() const { return &_class_data_; }

void MeasurementItems::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MeasurementItems *>(to)->MergeFrom(
      static_cast<const MeasurementItems &>(from));
}


void MeasurementItems::MergeFrom(const MeasurementItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.kpimon.MeasurementItems)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  measurement_items_.MergeFrom(from.measurement_items_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MeasurementItems::CopyFrom(const MeasurementItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.kpimon.MeasurementItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasurementItems::IsInitialized() const {
  return true;
}

void MeasurementItems::InternalSwap(MeasurementItems* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  measurement_items_.InternalSwap(&other->measurement_items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MeasurementItems::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[3]);
}

// ===================================================================

class MeasurementItem::_Internal {
 public:
};

MeasurementItem::MeasurementItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  measurement_records_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.kpimon.MeasurementItem)
}
MeasurementItem::MeasurementItem(const MeasurementItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      measurement_records_(from.measurement_records_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.kpimon.MeasurementItem)
}

inline void MeasurementItem::SharedCtor() {
}

MeasurementItem::~MeasurementItem() {
  // @@protoc_insertion_point(destructor:onos.kpimon.MeasurementItem)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MeasurementItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MeasurementItem::ArenaDtor(void* object) {
  MeasurementItem* _this = reinterpret_cast< MeasurementItem* >(object);
  (void)_this;
}
void MeasurementItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MeasurementItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MeasurementItem::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.kpimon.MeasurementItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  measurement_records_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MeasurementItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .onos.kpimon.MeasurementRecord measurement_records = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_measurement_records(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MeasurementItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.kpimon.MeasurementItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onos.kpimon.MeasurementRecord measurement_records = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_measurement_records_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_measurement_records(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.kpimon.MeasurementItem)
  return target;
}

size_t MeasurementItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.kpimon.MeasurementItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.kpimon.MeasurementRecord measurement_records = 1;
  total_size += 1UL * this->_internal_measurement_records_size();
  for (const auto& msg : this->measurement_records_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MeasurementItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MeasurementItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MeasurementItem::GetClassData() const { return &_class_data_; }

void MeasurementItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MeasurementItem *>(to)->MergeFrom(
      static_cast<const MeasurementItem &>(from));
}


void MeasurementItem::MergeFrom(const MeasurementItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.kpimon.MeasurementItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  measurement_records_.MergeFrom(from.measurement_records_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MeasurementItem::CopyFrom(const MeasurementItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.kpimon.MeasurementItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasurementItem::IsInitialized() const {
  return true;
}

void MeasurementItem::InternalSwap(MeasurementItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  measurement_records_.InternalSwap(&other->measurement_records_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MeasurementItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[4]);
}

// ===================================================================

class IntegerValue::_Internal {
 public:
};

IntegerValue::IntegerValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.kpimon.IntegerValue)
}
IntegerValue::IntegerValue(const IntegerValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.kpimon.IntegerValue)
}

inline void IntegerValue::SharedCtor() {
value_ = int64_t{0};
}

IntegerValue::~IntegerValue() {
  // @@protoc_insertion_point(destructor:onos.kpimon.IntegerValue)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void IntegerValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IntegerValue::ArenaDtor(void* object) {
  IntegerValue* _this = reinterpret_cast< IntegerValue* >(object);
  (void)_this;
}
void IntegerValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IntegerValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void IntegerValue::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.kpimon.IntegerValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntegerValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IntegerValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.kpimon.IntegerValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.kpimon.IntegerValue)
  return target;
}

size_t IntegerValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.kpimon.IntegerValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IntegerValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    IntegerValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IntegerValue::GetClassData() const { return &_class_data_; }

void IntegerValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<IntegerValue *>(to)->MergeFrom(
      static_cast<const IntegerValue &>(from));
}


void IntegerValue::MergeFrom(const IntegerValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.kpimon.IntegerValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IntegerValue::CopyFrom(const IntegerValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.kpimon.IntegerValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerValue::IsInitialized() const {
  return true;
}

void IntegerValue::InternalSwap(IntegerValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntegerValue::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[5]);
}

// ===================================================================

class RealValue::_Internal {
 public:
};

RealValue::RealValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.kpimon.RealValue)
}
RealValue::RealValue(const RealValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.kpimon.RealValue)
}

inline void RealValue::SharedCtor() {
value_ = 0;
}

RealValue::~RealValue() {
  // @@protoc_insertion_point(destructor:onos.kpimon.RealValue)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RealValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RealValue::ArenaDtor(void* object) {
  RealValue* _this = reinterpret_cast< RealValue* >(object);
  (void)_this;
}
void RealValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RealValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RealValue::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.kpimon.RealValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RealValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RealValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.kpimon.RealValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.kpimon.RealValue)
  return target;
}

size_t RealValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.kpimon.RealValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double value = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RealValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RealValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RealValue::GetClassData() const { return &_class_data_; }

void RealValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RealValue *>(to)->MergeFrom(
      static_cast<const RealValue &>(from));
}


void RealValue::MergeFrom(const RealValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.kpimon.RealValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = from._internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RealValue::CopyFrom(const RealValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.kpimon.RealValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealValue::IsInitialized() const {
  return true;
}

void RealValue::InternalSwap(RealValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RealValue::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[6]);
}

// ===================================================================

class NoValue::_Internal {
 public:
};

NoValue::NoValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.kpimon.NoValue)
}
NoValue::NoValue(const NoValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.kpimon.NoValue)
}

inline void NoValue::SharedCtor() {
value_ = 0;
}

NoValue::~NoValue() {
  // @@protoc_insertion_point(destructor:onos.kpimon.NoValue)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NoValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void NoValue::ArenaDtor(void* object) {
  NoValue* _this = reinterpret_cast< NoValue* >(object);
  (void)_this;
}
void NoValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NoValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NoValue::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.kpimon.NoValue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NoValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NoValue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.kpimon.NoValue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.kpimon.NoValue)
  return target;
}

size_t NoValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.kpimon.NoValue)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NoValue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NoValue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NoValue::GetClassData() const { return &_class_data_; }

void NoValue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NoValue *>(to)->MergeFrom(
      static_cast<const NoValue &>(from));
}


void NoValue::MergeFrom(const NoValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.kpimon.NoValue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NoValue::CopyFrom(const NoValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.kpimon.NoValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoValue::IsInitialized() const {
  return true;
}

void NoValue::InternalSwap(NoValue* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NoValue::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[7]);
}

// ===================================================================

class MeasurementRecord::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& measurement_value(const MeasurementRecord* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
MeasurementRecord::_Internal::measurement_value(const MeasurementRecord* msg) {
  return *msg->measurement_value_;
}
void MeasurementRecord::clear_measurement_value() {
  if (GetArenaForAllocation() == nullptr && measurement_value_ != nullptr) {
    delete measurement_value_;
  }
  measurement_value_ = nullptr;
}
MeasurementRecord::MeasurementRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.kpimon.MeasurementRecord)
}
MeasurementRecord::MeasurementRecord(const MeasurementRecord& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  measurement_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    measurement_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_measurement_name().empty()) {
    measurement_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_measurement_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_measurement_value()) {
    measurement_value_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from.measurement_value_);
  } else {
    measurement_value_ = nullptr;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:onos.kpimon.MeasurementRecord)
}

inline void MeasurementRecord::SharedCtor() {
measurement_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  measurement_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&measurement_value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&measurement_value_)) + sizeof(timestamp_));
}

MeasurementRecord::~MeasurementRecord() {
  // @@protoc_insertion_point(destructor:onos.kpimon.MeasurementRecord)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MeasurementRecord::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  measurement_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete measurement_value_;
}

void MeasurementRecord::ArenaDtor(void* object) {
  MeasurementRecord* _this = reinterpret_cast< MeasurementRecord* >(object);
  (void)_this;
}
void MeasurementRecord::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MeasurementRecord::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MeasurementRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.kpimon.MeasurementRecord)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  measurement_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && measurement_value_ != nullptr) {
    delete measurement_value_;
  }
  measurement_value_ = nullptr;
  timestamp_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MeasurementRecord::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string measurement_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_measurement_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.kpimon.MeasurementRecord.measurement_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any measurement_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_measurement_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MeasurementRecord::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.kpimon.MeasurementRecord)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // string measurement_name = 3;
  if (!this->_internal_measurement_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_measurement_name().data(), static_cast<int>(this->_internal_measurement_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.kpimon.MeasurementRecord.measurement_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_measurement_name(), target);
  }

  // .google.protobuf.Any measurement_value = 4;
  if (this->_internal_has_measurement_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::measurement_value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.kpimon.MeasurementRecord)
  return target;
}

size_t MeasurementRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.kpimon.MeasurementRecord)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string measurement_name = 3;
  if (!this->_internal_measurement_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_measurement_name());
  }

  // .google.protobuf.Any measurement_value = 4;
  if (this->_internal_has_measurement_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *measurement_value_);
  }

  // uint64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MeasurementRecord::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MeasurementRecord::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MeasurementRecord::GetClassData() const { return &_class_data_; }

void MeasurementRecord::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MeasurementRecord *>(to)->MergeFrom(
      static_cast<const MeasurementRecord &>(from));
}


void MeasurementRecord::MergeFrom(const MeasurementRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.kpimon.MeasurementRecord)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_measurement_name().empty()) {
    _internal_set_measurement_name(from._internal_measurement_name());
  }
  if (from._internal_has_measurement_value()) {
    _internal_mutable_measurement_value()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_measurement_value());
  }
  if (from._internal_timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MeasurementRecord::CopyFrom(const MeasurementRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.kpimon.MeasurementRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeasurementRecord::IsInitialized() const {
  return true;
}

void MeasurementRecord::InternalSwap(MeasurementRecord* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &measurement_name_, lhs_arena,
      &other->measurement_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MeasurementRecord, timestamp_)
      + sizeof(MeasurementRecord::timestamp_)
      - PROTOBUF_FIELD_OFFSET(MeasurementRecord, measurement_value_)>(
          reinterpret_cast<char*>(&measurement_value_),
          reinterpret_cast<char*>(&other->measurement_value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MeasurementRecord::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_getter, &descriptor_table_onos_2fkpimon_2fkpimon_2eproto_once,
      file_level_metadata_onos_2fkpimon_2fkpimon_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace kpimon
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::kpimon::GetRequest* Arena::CreateMaybeMessage< ::onos::kpimon::GetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::GetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse* Arena::CreateMaybeMessage< ::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::kpimon::GetResponse* Arena::CreateMaybeMessage< ::onos::kpimon::GetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::GetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::kpimon::MeasurementItems* Arena::CreateMaybeMessage< ::onos::kpimon::MeasurementItems >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::MeasurementItems >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::kpimon::MeasurementItem* Arena::CreateMaybeMessage< ::onos::kpimon::MeasurementItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::MeasurementItem >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::kpimon::IntegerValue* Arena::CreateMaybeMessage< ::onos::kpimon::IntegerValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::IntegerValue >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::kpimon::RealValue* Arena::CreateMaybeMessage< ::onos::kpimon::RealValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::RealValue >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::kpimon::NoValue* Arena::CreateMaybeMessage< ::onos::kpimon::NoValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::NoValue >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::kpimon::MeasurementRecord* Arena::CreateMaybeMessage< ::onos::kpimon::MeasurementRecord >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::kpimon::MeasurementRecord >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
