// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/kpimon/kpimon.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_onos_2fkpimon_2fkpimon_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_onos_2fkpimon_2fkpimon_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_onos_2fkpimon_2fkpimon_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_onos_2fkpimon_2fkpimon_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fkpimon_2fkpimon_2eproto;
namespace onos {
namespace kpimon {
class GetRequest;
struct GetRequestDefaultTypeInternal;
extern GetRequestDefaultTypeInternal _GetRequest_default_instance_;
class GetResponse;
struct GetResponseDefaultTypeInternal;
extern GetResponseDefaultTypeInternal _GetResponse_default_instance_;
class GetResponse_MeasurementsEntry_DoNotUse;
struct GetResponse_MeasurementsEntry_DoNotUseDefaultTypeInternal;
extern GetResponse_MeasurementsEntry_DoNotUseDefaultTypeInternal _GetResponse_MeasurementsEntry_DoNotUse_default_instance_;
class IntegerValue;
struct IntegerValueDefaultTypeInternal;
extern IntegerValueDefaultTypeInternal _IntegerValue_default_instance_;
class MeasurementItem;
struct MeasurementItemDefaultTypeInternal;
extern MeasurementItemDefaultTypeInternal _MeasurementItem_default_instance_;
class MeasurementItems;
struct MeasurementItemsDefaultTypeInternal;
extern MeasurementItemsDefaultTypeInternal _MeasurementItems_default_instance_;
class MeasurementRecord;
struct MeasurementRecordDefaultTypeInternal;
extern MeasurementRecordDefaultTypeInternal _MeasurementRecord_default_instance_;
class NoValue;
struct NoValueDefaultTypeInternal;
extern NoValueDefaultTypeInternal _NoValue_default_instance_;
class RealValue;
struct RealValueDefaultTypeInternal;
extern RealValueDefaultTypeInternal _RealValue_default_instance_;
}  // namespace kpimon
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> ::onos::kpimon::GetRequest* Arena::CreateMaybeMessage<::onos::kpimon::GetRequest>(Arena*);
template<> ::onos::kpimon::GetResponse* Arena::CreateMaybeMessage<::onos::kpimon::GetResponse>(Arena*);
template<> ::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse* Arena::CreateMaybeMessage<::onos::kpimon::GetResponse_MeasurementsEntry_DoNotUse>(Arena*);
template<> ::onos::kpimon::IntegerValue* Arena::CreateMaybeMessage<::onos::kpimon::IntegerValue>(Arena*);
template<> ::onos::kpimon::MeasurementItem* Arena::CreateMaybeMessage<::onos::kpimon::MeasurementItem>(Arena*);
template<> ::onos::kpimon::MeasurementItems* Arena::CreateMaybeMessage<::onos::kpimon::MeasurementItems>(Arena*);
template<> ::onos::kpimon::MeasurementRecord* Arena::CreateMaybeMessage<::onos::kpimon::MeasurementRecord>(Arena*);
template<> ::onos::kpimon::NoValue* Arena::CreateMaybeMessage<::onos::kpimon::NoValue>(Arena*);
template<> ::onos::kpimon::RealValue* Arena::CreateMaybeMessage<::onos::kpimon::RealValue>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace onos {
namespace kpimon {

// ===================================================================

class GetRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:onos.kpimon.GetRequest) */ {
 public:
  inline GetRequest() : GetRequest(nullptr) {}
  explicit constexpr GetRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetRequest(const GetRequest& from);
  GetRequest(GetRequest&& from) noexcept
    : GetRequest() {
    *this = ::std::move(from);
  }

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRequest& operator=(GetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRequest* internal_default_instance() {
    return reinterpret_cast<const GetRequest*>(
               &_GetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetRequest& a, GetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.kpimon.GetRequest";
  }
  protected:
  explicit GetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:onos.kpimon.GetRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fkpimon_2fkpimon_2eproto;
};
// -------------------------------------------------------------------

class GetResponse_MeasurementsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetResponse_MeasurementsEntry_DoNotUse, 
    std::string, ::onos::kpimon::MeasurementItems,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetResponse_MeasurementsEntry_DoNotUse, 
    std::string, ::onos::kpimon::MeasurementItems,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  GetResponse_MeasurementsEntry_DoNotUse();
  explicit constexpr GetResponse_MeasurementsEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit GetResponse_MeasurementsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetResponse_MeasurementsEntry_DoNotUse& other);
  static const GetResponse_MeasurementsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetResponse_MeasurementsEntry_DoNotUse*>(&_GetResponse_MeasurementsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "onos.kpimon.GetResponse.MeasurementsEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class GetResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.kpimon.GetResponse) */ {
 public:
  inline GetResponse() : GetResponse(nullptr) {}
  ~GetResponse() override;
  explicit constexpr GetResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GetResponse(const GetResponse& from);
  GetResponse(GetResponse&& from) noexcept
    : GetResponse() {
    *this = ::std::move(from);
  }

  inline GetResponse& operator=(const GetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetResponse& operator=(GetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetResponse* internal_default_instance() {
    return reinterpret_cast<const GetResponse*>(
               &_GetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetResponse& a, GetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GetResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GetResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.kpimon.GetResponse";
  }
  protected:
  explicit GetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMeasurementsFieldNumber = 1,
  };
  // map<string, .onos.kpimon.MeasurementItems> measurements = 1;
  int measurements_size() const;
  private:
  int _internal_measurements_size() const;
  public:
  void clear_measurements();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >&
      _internal_measurements() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >*
      _internal_mutable_measurements();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >&
      measurements() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >*
      mutable_measurements();

  // @@protoc_insertion_point(class_scope:onos.kpimon.GetResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      GetResponse_MeasurementsEntry_DoNotUse,
      std::string, ::onos::kpimon::MeasurementItems,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> measurements_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fkpimon_2fkpimon_2eproto;
};
// -------------------------------------------------------------------

class MeasurementItems final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.kpimon.MeasurementItems) */ {
 public:
  inline MeasurementItems() : MeasurementItems(nullptr) {}
  ~MeasurementItems() override;
  explicit constexpr MeasurementItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MeasurementItems(const MeasurementItems& from);
  MeasurementItems(MeasurementItems&& from) noexcept
    : MeasurementItems() {
    *this = ::std::move(from);
  }

  inline MeasurementItems& operator=(const MeasurementItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasurementItems& operator=(MeasurementItems&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasurementItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const MeasurementItems* internal_default_instance() {
    return reinterpret_cast<const MeasurementItems*>(
               &_MeasurementItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MeasurementItems& a, MeasurementItems& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasurementItems* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasurementItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasurementItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasurementItems>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MeasurementItems& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MeasurementItems& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasurementItems* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.kpimon.MeasurementItems";
  }
  protected:
  explicit MeasurementItems(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeasurementItemsFieldNumber = 1,
  };
  // repeated .onos.kpimon.MeasurementItem measurement_items = 1;
  int measurement_items_size() const;
  private:
  int _internal_measurement_items_size() const;
  public:
  void clear_measurement_items();
  ::onos::kpimon::MeasurementItem* mutable_measurement_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementItem >*
      mutable_measurement_items();
  private:
  const ::onos::kpimon::MeasurementItem& _internal_measurement_items(int index) const;
  ::onos::kpimon::MeasurementItem* _internal_add_measurement_items();
  public:
  const ::onos::kpimon::MeasurementItem& measurement_items(int index) const;
  ::onos::kpimon::MeasurementItem* add_measurement_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementItem >&
      measurement_items() const;

  // @@protoc_insertion_point(class_scope:onos.kpimon.MeasurementItems)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementItem > measurement_items_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fkpimon_2fkpimon_2eproto;
};
// -------------------------------------------------------------------

class MeasurementItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.kpimon.MeasurementItem) */ {
 public:
  inline MeasurementItem() : MeasurementItem(nullptr) {}
  ~MeasurementItem() override;
  explicit constexpr MeasurementItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MeasurementItem(const MeasurementItem& from);
  MeasurementItem(MeasurementItem&& from) noexcept
    : MeasurementItem() {
    *this = ::std::move(from);
  }

  inline MeasurementItem& operator=(const MeasurementItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasurementItem& operator=(MeasurementItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasurementItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MeasurementItem* internal_default_instance() {
    return reinterpret_cast<const MeasurementItem*>(
               &_MeasurementItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MeasurementItem& a, MeasurementItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasurementItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasurementItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasurementItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasurementItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MeasurementItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MeasurementItem& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasurementItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.kpimon.MeasurementItem";
  }
  protected:
  explicit MeasurementItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeasurementRecordsFieldNumber = 1,
  };
  // repeated .onos.kpimon.MeasurementRecord measurement_records = 1;
  int measurement_records_size() const;
  private:
  int _internal_measurement_records_size() const;
  public:
  void clear_measurement_records();
  ::onos::kpimon::MeasurementRecord* mutable_measurement_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementRecord >*
      mutable_measurement_records();
  private:
  const ::onos::kpimon::MeasurementRecord& _internal_measurement_records(int index) const;
  ::onos::kpimon::MeasurementRecord* _internal_add_measurement_records();
  public:
  const ::onos::kpimon::MeasurementRecord& measurement_records(int index) const;
  ::onos::kpimon::MeasurementRecord* add_measurement_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementRecord >&
      measurement_records() const;

  // @@protoc_insertion_point(class_scope:onos.kpimon.MeasurementItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementRecord > measurement_records_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fkpimon_2fkpimon_2eproto;
};
// -------------------------------------------------------------------

class IntegerValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.kpimon.IntegerValue) */ {
 public:
  inline IntegerValue() : IntegerValue(nullptr) {}
  ~IntegerValue() override;
  explicit constexpr IntegerValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IntegerValue(const IntegerValue& from);
  IntegerValue(IntegerValue&& from) noexcept
    : IntegerValue() {
    *this = ::std::move(from);
  }

  inline IntegerValue& operator=(const IntegerValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntegerValue& operator=(IntegerValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntegerValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntegerValue* internal_default_instance() {
    return reinterpret_cast<const IntegerValue*>(
               &_IntegerValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(IntegerValue& a, IntegerValue& b) {
    a.Swap(&b);
  }
  inline void Swap(IntegerValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntegerValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntegerValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IntegerValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IntegerValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const IntegerValue& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntegerValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.kpimon.IntegerValue";
  }
  protected:
  explicit IntegerValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int64 value = 1;
  void clear_value();
  int64_t value() const;
  void set_value(int64_t value);
  private:
  int64_t _internal_value() const;
  void _internal_set_value(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.kpimon.IntegerValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fkpimon_2fkpimon_2eproto;
};
// -------------------------------------------------------------------

class RealValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.kpimon.RealValue) */ {
 public:
  inline RealValue() : RealValue(nullptr) {}
  ~RealValue() override;
  explicit constexpr RealValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RealValue(const RealValue& from);
  RealValue(RealValue&& from) noexcept
    : RealValue() {
    *this = ::std::move(from);
  }

  inline RealValue& operator=(const RealValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline RealValue& operator=(RealValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RealValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const RealValue* internal_default_instance() {
    return reinterpret_cast<const RealValue*>(
               &_RealValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RealValue& a, RealValue& b) {
    a.Swap(&b);
  }
  inline void Swap(RealValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RealValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RealValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RealValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RealValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RealValue& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RealValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.kpimon.RealValue";
  }
  protected:
  explicit RealValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // double value = 1;
  void clear_value();
  double value() const;
  void set_value(double value);
  private:
  double _internal_value() const;
  void _internal_set_value(double value);
  public:

  // @@protoc_insertion_point(class_scope:onos.kpimon.RealValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fkpimon_2fkpimon_2eproto;
};
// -------------------------------------------------------------------

class NoValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.kpimon.NoValue) */ {
 public:
  inline NoValue() : NoValue(nullptr) {}
  ~NoValue() override;
  explicit constexpr NoValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NoValue(const NoValue& from);
  NoValue(NoValue&& from) noexcept
    : NoValue() {
    *this = ::std::move(from);
  }

  inline NoValue& operator=(const NoValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline NoValue& operator=(NoValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NoValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const NoValue* internal_default_instance() {
    return reinterpret_cast<const NoValue*>(
               &_NoValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(NoValue& a, NoValue& b) {
    a.Swap(&b);
  }
  inline void Swap(NoValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NoValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NoValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NoValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NoValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NoValue& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NoValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.kpimon.NoValue";
  }
  protected:
  explicit NoValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value();
  int32_t value() const;
  void set_value(int32_t value);
  private:
  int32_t _internal_value() const;
  void _internal_set_value(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.kpimon.NoValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fkpimon_2fkpimon_2eproto;
};
// -------------------------------------------------------------------

class MeasurementRecord final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.kpimon.MeasurementRecord) */ {
 public:
  inline MeasurementRecord() : MeasurementRecord(nullptr) {}
  ~MeasurementRecord() override;
  explicit constexpr MeasurementRecord(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MeasurementRecord(const MeasurementRecord& from);
  MeasurementRecord(MeasurementRecord&& from) noexcept
    : MeasurementRecord() {
    *this = ::std::move(from);
  }

  inline MeasurementRecord& operator=(const MeasurementRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline MeasurementRecord& operator=(MeasurementRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MeasurementRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const MeasurementRecord* internal_default_instance() {
    return reinterpret_cast<const MeasurementRecord*>(
               &_MeasurementRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MeasurementRecord& a, MeasurementRecord& b) {
    a.Swap(&b);
  }
  inline void Swap(MeasurementRecord* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MeasurementRecord* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MeasurementRecord* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MeasurementRecord>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MeasurementRecord& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MeasurementRecord& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MeasurementRecord* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.kpimon.MeasurementRecord";
  }
  protected:
  explicit MeasurementRecord(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeasurementNameFieldNumber = 3,
    kMeasurementValueFieldNumber = 4,
    kTimestampFieldNumber = 2,
  };
  // string measurement_name = 3;
  void clear_measurement_name();
  const std::string& measurement_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_measurement_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_measurement_name();
  PROTOBUF_NODISCARD std::string* release_measurement_name();
  void set_allocated_measurement_name(std::string* measurement_name);
  private:
  const std::string& _internal_measurement_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_measurement_name(const std::string& value);
  std::string* _internal_mutable_measurement_name();
  public:

  // .google.protobuf.Any measurement_value = 4;
  bool has_measurement_value() const;
  private:
  bool _internal_has_measurement_value() const;
  public:
  void clear_measurement_value();
  const ::PROTOBUF_NAMESPACE_ID::Any& measurement_value() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_measurement_value();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_measurement_value();
  void set_allocated_measurement_value(::PROTOBUF_NAMESPACE_ID::Any* measurement_value);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_measurement_value() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_measurement_value();
  public:
  void unsafe_arena_set_allocated_measurement_value(
      ::PROTOBUF_NAMESPACE_ID::Any* measurement_value);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_measurement_value();

  // uint64 timestamp = 2;
  void clear_timestamp();
  uint64_t timestamp() const;
  void set_timestamp(uint64_t value);
  private:
  uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.kpimon.MeasurementRecord)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr measurement_name_;
  ::PROTOBUF_NAMESPACE_ID::Any* measurement_value_;
  uint64_t timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fkpimon_2fkpimon_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetResponse

// map<string, .onos.kpimon.MeasurementItems> measurements = 1;
inline int GetResponse::_internal_measurements_size() const {
  return measurements_.size();
}
inline int GetResponse::measurements_size() const {
  return _internal_measurements_size();
}
inline void GetResponse::clear_measurements() {
  measurements_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >&
GetResponse::_internal_measurements() const {
  return measurements_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >&
GetResponse::measurements() const {
  // @@protoc_insertion_point(field_map:onos.kpimon.GetResponse.measurements)
  return _internal_measurements();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >*
GetResponse::_internal_mutable_measurements() {
  return measurements_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::kpimon::MeasurementItems >*
GetResponse::mutable_measurements() {
  // @@protoc_insertion_point(field_mutable_map:onos.kpimon.GetResponse.measurements)
  return _internal_mutable_measurements();
}

// -------------------------------------------------------------------

// MeasurementItems

// repeated .onos.kpimon.MeasurementItem measurement_items = 1;
inline int MeasurementItems::_internal_measurement_items_size() const {
  return measurement_items_.size();
}
inline int MeasurementItems::measurement_items_size() const {
  return _internal_measurement_items_size();
}
inline void MeasurementItems::clear_measurement_items() {
  measurement_items_.Clear();
}
inline ::onos::kpimon::MeasurementItem* MeasurementItems::mutable_measurement_items(int index) {
  // @@protoc_insertion_point(field_mutable:onos.kpimon.MeasurementItems.measurement_items)
  return measurement_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementItem >*
MeasurementItems::mutable_measurement_items() {
  // @@protoc_insertion_point(field_mutable_list:onos.kpimon.MeasurementItems.measurement_items)
  return &measurement_items_;
}
inline const ::onos::kpimon::MeasurementItem& MeasurementItems::_internal_measurement_items(int index) const {
  return measurement_items_.Get(index);
}
inline const ::onos::kpimon::MeasurementItem& MeasurementItems::measurement_items(int index) const {
  // @@protoc_insertion_point(field_get:onos.kpimon.MeasurementItems.measurement_items)
  return _internal_measurement_items(index);
}
inline ::onos::kpimon::MeasurementItem* MeasurementItems::_internal_add_measurement_items() {
  return measurement_items_.Add();
}
inline ::onos::kpimon::MeasurementItem* MeasurementItems::add_measurement_items() {
  ::onos::kpimon::MeasurementItem* _add = _internal_add_measurement_items();
  // @@protoc_insertion_point(field_add:onos.kpimon.MeasurementItems.measurement_items)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementItem >&
MeasurementItems::measurement_items() const {
  // @@protoc_insertion_point(field_list:onos.kpimon.MeasurementItems.measurement_items)
  return measurement_items_;
}

// -------------------------------------------------------------------

// MeasurementItem

// repeated .onos.kpimon.MeasurementRecord measurement_records = 1;
inline int MeasurementItem::_internal_measurement_records_size() const {
  return measurement_records_.size();
}
inline int MeasurementItem::measurement_records_size() const {
  return _internal_measurement_records_size();
}
inline void MeasurementItem::clear_measurement_records() {
  measurement_records_.Clear();
}
inline ::onos::kpimon::MeasurementRecord* MeasurementItem::mutable_measurement_records(int index) {
  // @@protoc_insertion_point(field_mutable:onos.kpimon.MeasurementItem.measurement_records)
  return measurement_records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementRecord >*
MeasurementItem::mutable_measurement_records() {
  // @@protoc_insertion_point(field_mutable_list:onos.kpimon.MeasurementItem.measurement_records)
  return &measurement_records_;
}
inline const ::onos::kpimon::MeasurementRecord& MeasurementItem::_internal_measurement_records(int index) const {
  return measurement_records_.Get(index);
}
inline const ::onos::kpimon::MeasurementRecord& MeasurementItem::measurement_records(int index) const {
  // @@protoc_insertion_point(field_get:onos.kpimon.MeasurementItem.measurement_records)
  return _internal_measurement_records(index);
}
inline ::onos::kpimon::MeasurementRecord* MeasurementItem::_internal_add_measurement_records() {
  return measurement_records_.Add();
}
inline ::onos::kpimon::MeasurementRecord* MeasurementItem::add_measurement_records() {
  ::onos::kpimon::MeasurementRecord* _add = _internal_add_measurement_records();
  // @@protoc_insertion_point(field_add:onos.kpimon.MeasurementItem.measurement_records)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::kpimon::MeasurementRecord >&
MeasurementItem::measurement_records() const {
  // @@protoc_insertion_point(field_list:onos.kpimon.MeasurementItem.measurement_records)
  return measurement_records_;
}

// -------------------------------------------------------------------

// IntegerValue

// int64 value = 1;
inline void IntegerValue::clear_value() {
  value_ = int64_t{0};
}
inline int64_t IntegerValue::_internal_value() const {
  return value_;
}
inline int64_t IntegerValue::value() const {
  // @@protoc_insertion_point(field_get:onos.kpimon.IntegerValue.value)
  return _internal_value();
}
inline void IntegerValue::_internal_set_value(int64_t value) {
  
  value_ = value;
}
inline void IntegerValue::set_value(int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.kpimon.IntegerValue.value)
}

// -------------------------------------------------------------------

// RealValue

// double value = 1;
inline void RealValue::clear_value() {
  value_ = 0;
}
inline double RealValue::_internal_value() const {
  return value_;
}
inline double RealValue::value() const {
  // @@protoc_insertion_point(field_get:onos.kpimon.RealValue.value)
  return _internal_value();
}
inline void RealValue::_internal_set_value(double value) {
  
  value_ = value;
}
inline void RealValue::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.kpimon.RealValue.value)
}

// -------------------------------------------------------------------

// NoValue

// int32 value = 1;
inline void NoValue::clear_value() {
  value_ = 0;
}
inline int32_t NoValue::_internal_value() const {
  return value_;
}
inline int32_t NoValue::value() const {
  // @@protoc_insertion_point(field_get:onos.kpimon.NoValue.value)
  return _internal_value();
}
inline void NoValue::_internal_set_value(int32_t value) {
  
  value_ = value;
}
inline void NoValue::set_value(int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.kpimon.NoValue.value)
}

// -------------------------------------------------------------------

// MeasurementRecord

// uint64 timestamp = 2;
inline void MeasurementRecord::clear_timestamp() {
  timestamp_ = uint64_t{0u};
}
inline uint64_t MeasurementRecord::_internal_timestamp() const {
  return timestamp_;
}
inline uint64_t MeasurementRecord::timestamp() const {
  // @@protoc_insertion_point(field_get:onos.kpimon.MeasurementRecord.timestamp)
  return _internal_timestamp();
}
inline void MeasurementRecord::_internal_set_timestamp(uint64_t value) {
  
  timestamp_ = value;
}
inline void MeasurementRecord::set_timestamp(uint64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:onos.kpimon.MeasurementRecord.timestamp)
}

// string measurement_name = 3;
inline void MeasurementRecord::clear_measurement_name() {
  measurement_name_.ClearToEmpty();
}
inline const std::string& MeasurementRecord::measurement_name() const {
  // @@protoc_insertion_point(field_get:onos.kpimon.MeasurementRecord.measurement_name)
  return _internal_measurement_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MeasurementRecord::set_measurement_name(ArgT0&& arg0, ArgT... args) {
 
 measurement_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.kpimon.MeasurementRecord.measurement_name)
}
inline std::string* MeasurementRecord::mutable_measurement_name() {
  std::string* _s = _internal_mutable_measurement_name();
  // @@protoc_insertion_point(field_mutable:onos.kpimon.MeasurementRecord.measurement_name)
  return _s;
}
inline const std::string& MeasurementRecord::_internal_measurement_name() const {
  return measurement_name_.Get();
}
inline void MeasurementRecord::_internal_set_measurement_name(const std::string& value) {
  
  measurement_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* MeasurementRecord::_internal_mutable_measurement_name() {
  
  return measurement_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* MeasurementRecord::release_measurement_name() {
  // @@protoc_insertion_point(field_release:onos.kpimon.MeasurementRecord.measurement_name)
  return measurement_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void MeasurementRecord::set_allocated_measurement_name(std::string* measurement_name) {
  if (measurement_name != nullptr) {
    
  } else {
    
  }
  measurement_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), measurement_name,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (measurement_name_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    measurement_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.kpimon.MeasurementRecord.measurement_name)
}

// .google.protobuf.Any measurement_value = 4;
inline bool MeasurementRecord::_internal_has_measurement_value() const {
  return this != internal_default_instance() && measurement_value_ != nullptr;
}
inline bool MeasurementRecord::has_measurement_value() const {
  return _internal_has_measurement_value();
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MeasurementRecord::_internal_measurement_value() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = measurement_value_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& MeasurementRecord::measurement_value() const {
  // @@protoc_insertion_point(field_get:onos.kpimon.MeasurementRecord.measurement_value)
  return _internal_measurement_value();
}
inline void MeasurementRecord::unsafe_arena_set_allocated_measurement_value(
    ::PROTOBUF_NAMESPACE_ID::Any* measurement_value) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(measurement_value_);
  }
  measurement_value_ = measurement_value;
  if (measurement_value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.kpimon.MeasurementRecord.measurement_value)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MeasurementRecord::release_measurement_value() {
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = measurement_value_;
  measurement_value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MeasurementRecord::unsafe_arena_release_measurement_value() {
  // @@protoc_insertion_point(field_release:onos.kpimon.MeasurementRecord.measurement_value)
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = measurement_value_;
  measurement_value_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MeasurementRecord::_internal_mutable_measurement_value() {
  
  if (measurement_value_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    measurement_value_ = p;
  }
  return measurement_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* MeasurementRecord::mutable_measurement_value() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_measurement_value();
  // @@protoc_insertion_point(field_mutable:onos.kpimon.MeasurementRecord.measurement_value)
  return _msg;
}
inline void MeasurementRecord::set_allocated_measurement_value(::PROTOBUF_NAMESPACE_ID::Any* measurement_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(measurement_value_);
  }
  if (measurement_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(measurement_value));
    if (message_arena != submessage_arena) {
      measurement_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, measurement_value, submessage_arena);
    }
    
  } else {
    
  }
  measurement_value_ = measurement_value;
  // @@protoc_insertion_point(field_set_allocated:onos.kpimon.MeasurementRecord.measurement_value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace kpimon
}  // namespace onos

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_onos_2fkpimon_2fkpimon_2eproto
