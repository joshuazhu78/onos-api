// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/mho/mho.proto
// Original file comments:
// SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
// This file defines Mobile-hand-over (MHO) App API to show/adjust some parameters
//
#ifndef GRPC_onos_2fmho_2fmho_2eproto__INCLUDED
#define GRPC_onos_2fmho_2fmho_2eproto__INCLUDED

#include "onos/mho/mho.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace mho {

class mho final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.mho.mho";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // To get MHO parameters
    virtual ::grpc::Status GetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::onos::mho::GetMhoParamResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::GetMhoParamResponse>> AsyncGetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::GetMhoParamResponse>>(AsyncGetMhoParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::GetMhoParamResponse>> PrepareAsyncGetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::GetMhoParamResponse>>(PrepareAsyncGetMhoParamsRaw(context, request, cq));
    }
    // To set MHO parameters
    virtual ::grpc::Status SetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::onos::mho::SetMhoParamResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::SetMhoParamResponse>> AsyncSetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::SetMhoParamResponse>>(AsyncSetMhoParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::SetMhoParamResponse>> PrepareAsyncSetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::SetMhoParamResponse>>(PrepareAsyncSetMhoParamsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::onos::mho::UeList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::UeList>> AsyncGetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::UeList>>(AsyncGetUesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::UeList>> PrepareAsyncGetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::UeList>>(PrepareAsyncGetUesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::onos::mho::CellList* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::CellList>> AsyncGetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::CellList>>(AsyncGetCellsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::CellList>> PrepareAsyncGetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::CellList>>(PrepareAsyncGetCellsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // To get MHO parameters
      virtual void GetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest* request, ::onos::mho::GetMhoParamResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest* request, ::onos::mho::GetMhoParamResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // To set MHO parameters
      virtual void SetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest* request, ::onos::mho::SetMhoParamResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest* request, ::onos::mho::SetMhoParamResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::UeList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::UeList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::CellList* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::CellList* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::GetMhoParamResponse>* AsyncGetMhoParamsRaw(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::GetMhoParamResponse>* PrepareAsyncGetMhoParamsRaw(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::SetMhoParamResponse>* AsyncSetMhoParamsRaw(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::SetMhoParamResponse>* PrepareAsyncSetMhoParamsRaw(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::UeList>* AsyncGetUesRaw(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::UeList>* PrepareAsyncGetUesRaw(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::CellList>* AsyncGetCellsRaw(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::mho::CellList>* PrepareAsyncGetCellsRaw(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::onos::mho::GetMhoParamResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::GetMhoParamResponse>> AsyncGetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::GetMhoParamResponse>>(AsyncGetMhoParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::GetMhoParamResponse>> PrepareAsyncGetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::GetMhoParamResponse>>(PrepareAsyncGetMhoParamsRaw(context, request, cq));
    }
    ::grpc::Status SetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::onos::mho::SetMhoParamResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::SetMhoParamResponse>> AsyncSetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::SetMhoParamResponse>>(AsyncSetMhoParamsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::SetMhoParamResponse>> PrepareAsyncSetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::SetMhoParamResponse>>(PrepareAsyncSetMhoParamsRaw(context, request, cq));
    }
    ::grpc::Status GetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::onos::mho::UeList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::UeList>> AsyncGetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::UeList>>(AsyncGetUesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::UeList>> PrepareAsyncGetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::UeList>>(PrepareAsyncGetUesRaw(context, request, cq));
    }
    ::grpc::Status GetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::onos::mho::CellList* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::CellList>> AsyncGetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::CellList>>(AsyncGetCellsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::CellList>> PrepareAsyncGetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::mho::CellList>>(PrepareAsyncGetCellsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest* request, ::onos::mho::GetMhoParamResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMhoParams(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest* request, ::onos::mho::GetMhoParamResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest* request, ::onos::mho::SetMhoParamResponse* response, std::function<void(::grpc::Status)>) override;
      void SetMhoParams(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest* request, ::onos::mho::SetMhoParamResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::UeList* response, std::function<void(::grpc::Status)>) override;
      void GetUes(::grpc::ClientContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::UeList* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::CellList* response, std::function<void(::grpc::Status)>) override;
      void GetCells(::grpc::ClientContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::CellList* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::mho::GetMhoParamResponse>* AsyncGetMhoParamsRaw(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mho::GetMhoParamResponse>* PrepareAsyncGetMhoParamsRaw(::grpc::ClientContext* context, const ::onos::mho::GetMhoParamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mho::SetMhoParamResponse>* AsyncSetMhoParamsRaw(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mho::SetMhoParamResponse>* PrepareAsyncSetMhoParamsRaw(::grpc::ClientContext* context, const ::onos::mho::SetMhoParamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mho::UeList>* AsyncGetUesRaw(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mho::UeList>* PrepareAsyncGetUesRaw(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mho::CellList>* AsyncGetCellsRaw(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::mho::CellList>* PrepareAsyncGetCellsRaw(::grpc::ClientContext* context, const ::onos::mho::GetRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetMhoParams_;
    const ::grpc::internal::RpcMethod rpcmethod_SetMhoParams_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUes_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCells_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // To get MHO parameters
    virtual ::grpc::Status GetMhoParams(::grpc::ServerContext* context, const ::onos::mho::GetMhoParamRequest* request, ::onos::mho::GetMhoParamResponse* response);
    // To set MHO parameters
    virtual ::grpc::Status SetMhoParams(::grpc::ServerContext* context, const ::onos::mho::SetMhoParamRequest* request, ::onos::mho::SetMhoParamResponse* response);
    virtual ::grpc::Status GetUes(::grpc::ServerContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::UeList* response);
    virtual ::grpc::Status GetCells(::grpc::ServerContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::CellList* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMhoParams() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::GetMhoParamRequest* /*request*/, ::onos::mho::GetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMhoParams(::grpc::ServerContext* context, ::onos::mho::GetMhoParamRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::mho::GetMhoParamResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetMhoParams() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::SetMhoParamRequest* /*request*/, ::onos::mho::SetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMhoParams(::grpc::ServerContext* context, ::onos::mho::SetMhoParamRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::mho::SetMhoParamResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUes() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUes(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::UeList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUes(::grpc::ServerContext* context, ::onos::mho::GetRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::mho::UeList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCells() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCells(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::CellList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCells(::grpc::ServerContext* context, ::onos::mho::GetRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::mho::CellList>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetMhoParams<WithAsyncMethod_SetMhoParams<WithAsyncMethod_GetUes<WithAsyncMethod_GetCells<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMhoParams() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::mho::GetMhoParamRequest, ::onos::mho::GetMhoParamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::mho::GetMhoParamRequest* request, ::onos::mho::GetMhoParamResponse* response) { return this->GetMhoParams(context, request, response); }));}
    void SetMessageAllocatorFor_GetMhoParams(
        ::grpc::MessageAllocator< ::onos::mho::GetMhoParamRequest, ::onos::mho::GetMhoParamResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::mho::GetMhoParamRequest, ::onos::mho::GetMhoParamResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::GetMhoParamRequest* /*request*/, ::onos::mho::GetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMhoParams(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::mho::GetMhoParamRequest* /*request*/, ::onos::mho::GetMhoParamResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetMhoParams() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::mho::SetMhoParamRequest, ::onos::mho::SetMhoParamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::mho::SetMhoParamRequest* request, ::onos::mho::SetMhoParamResponse* response) { return this->SetMhoParams(context, request, response); }));}
    void SetMessageAllocatorFor_SetMhoParams(
        ::grpc::MessageAllocator< ::onos::mho::SetMhoParamRequest, ::onos::mho::SetMhoParamResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::mho::SetMhoParamRequest, ::onos::mho::SetMhoParamResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::SetMhoParamRequest* /*request*/, ::onos::mho::SetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetMhoParams(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::mho::SetMhoParamRequest* /*request*/, ::onos::mho::SetMhoParamResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUes() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::mho::GetRequest, ::onos::mho::UeList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::UeList* response) { return this->GetUes(context, request, response); }));}
    void SetMessageAllocatorFor_GetUes(
        ::grpc::MessageAllocator< ::onos::mho::GetRequest, ::onos::mho::UeList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::mho::GetRequest, ::onos::mho::UeList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUes(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::UeList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUes(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::UeList* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCells() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::mho::GetRequest, ::onos::mho::CellList>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::mho::GetRequest* request, ::onos::mho::CellList* response) { return this->GetCells(context, request, response); }));}
    void SetMessageAllocatorFor_GetCells(
        ::grpc::MessageAllocator< ::onos::mho::GetRequest, ::onos::mho::CellList>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::mho::GetRequest, ::onos::mho::CellList>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCells(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::CellList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCells(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::CellList* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetMhoParams<WithCallbackMethod_SetMhoParams<WithCallbackMethod_GetUes<WithCallbackMethod_GetCells<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMhoParams() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::GetMhoParamRequest* /*request*/, ::onos::mho::GetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetMhoParams() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::SetMhoParamRequest* /*request*/, ::onos::mho::SetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUes() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUes(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::UeList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCells() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCells(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::CellList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMhoParams() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::GetMhoParamRequest* /*request*/, ::onos::mho::GetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMhoParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetMhoParams() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::SetMhoParamRequest* /*request*/, ::onos::mho::SetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMhoParams(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUes() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUes(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::UeList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCells() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCells(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::CellList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCells(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMhoParams() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMhoParams(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::GetMhoParamRequest* /*request*/, ::onos::mho::GetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMhoParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetMhoParams() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetMhoParams(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::SetMhoParamRequest* /*request*/, ::onos::mho::SetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetMhoParams(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUes() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUes(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUes(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::UeList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCells() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCells(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCells(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::CellList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCells(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMhoParams() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::mho::GetMhoParamRequest, ::onos::mho::GetMhoParamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::mho::GetMhoParamRequest, ::onos::mho::GetMhoParamResponse>* streamer) {
                       return this->StreamedGetMhoParams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::GetMhoParamRequest* /*request*/, ::onos::mho::GetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMhoParams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::mho::GetMhoParamRequest,::onos::mho::GetMhoParamResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetMhoParams : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetMhoParams() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::mho::SetMhoParamRequest, ::onos::mho::SetMhoParamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::mho::SetMhoParamRequest, ::onos::mho::SetMhoParamResponse>* streamer) {
                       return this->StreamedSetMhoParams(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetMhoParams() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetMhoParams(::grpc::ServerContext* /*context*/, const ::onos::mho::SetMhoParamRequest* /*request*/, ::onos::mho::SetMhoParamResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetMhoParams(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::mho::SetMhoParamRequest,::onos::mho::SetMhoParamResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUes() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::mho::GetRequest, ::onos::mho::UeList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::mho::GetRequest, ::onos::mho::UeList>* streamer) {
                       return this->StreamedGetUes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUes(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::UeList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::mho::GetRequest,::onos::mho::UeList>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCells : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCells() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::mho::GetRequest, ::onos::mho::CellList>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::mho::GetRequest, ::onos::mho::CellList>* streamer) {
                       return this->StreamedGetCells(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCells() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCells(::grpc::ServerContext* /*context*/, const ::onos::mho::GetRequest* /*request*/, ::onos::mho::CellList* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCells(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::mho::GetRequest,::onos::mho::CellList>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetMhoParams<WithStreamedUnaryMethod_SetMhoParams<WithStreamedUnaryMethod_GetUes<WithStreamedUnaryMethod_GetCells<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetMhoParams<WithStreamedUnaryMethod_SetMhoParams<WithStreamedUnaryMethod_GetUes<WithStreamedUnaryMethod_GetCells<Service > > > > StreamedService;
};

}  // namespace mho
}  // namespace onos


#endif  // GRPC_onos_2fmho_2fmho_2eproto__INCLUDED
