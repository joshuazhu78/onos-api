// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/mho/mho.proto

#include "onos/mho/mho.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace mho {
constexpr GetMhoParamRequest::GetMhoParamRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hoparamtype_(0)
{}
struct GetMhoParamRequestDefaultTypeInternal {
  constexpr GetMhoParamRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMhoParamRequestDefaultTypeInternal() {}
  union {
    GetMhoParamRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMhoParamRequestDefaultTypeInternal _GetMhoParamRequest_default_instance_;
constexpr GetMhoParamResponse::GetMhoParamResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hoparamtype_(0)

  , a3offset_(0)
  , hysteresis_(0)
  , timetotrigger_(0){}
struct GetMhoParamResponseDefaultTypeInternal {
  constexpr GetMhoParamResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetMhoParamResponseDefaultTypeInternal() {}
  union {
    GetMhoParamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetMhoParamResponseDefaultTypeInternal _GetMhoParamResponse_default_instance_;
constexpr SetMhoParamRequest::SetMhoParamRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hoparamtype_(0)

  , a3offset_(0)
  , hysteresis_(0)
  , timetotrigger_(0){}
struct SetMhoParamRequestDefaultTypeInternal {
  constexpr SetMhoParamRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetMhoParamRequestDefaultTypeInternal() {}
  union {
    SetMhoParamRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetMhoParamRequestDefaultTypeInternal _SetMhoParamRequest_default_instance_;
constexpr SetMhoParamResponse::SetMhoParamResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : success_(false){}
struct SetMhoParamResponseDefaultTypeInternal {
  constexpr SetMhoParamResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetMhoParamResponseDefaultTypeInternal() {}
  union {
    SetMhoParamResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetMhoParamResponseDefaultTypeInternal _SetMhoParamResponse_default_instance_;
constexpr GetRequest::GetRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct GetRequestDefaultTypeInternal {
  constexpr GetRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetRequestDefaultTypeInternal() {}
  union {
    GetRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetRequestDefaultTypeInternal _GetRequest_default_instance_;
constexpr UeList::UeList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ues_(){}
struct UeListDefaultTypeInternal {
  constexpr UeListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UeListDefaultTypeInternal() {}
  union {
    UeList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UeListDefaultTypeInternal _UeList_default_instance_;
constexpr CellList::CellList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cells_(){}
struct CellListDefaultTypeInternal {
  constexpr CellListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CellListDefaultTypeInternal() {}
  union {
    CellList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CellListDefaultTypeInternal _CellList_default_instance_;
constexpr UE::UE(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ue_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rrc_state_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cgi_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UEDefaultTypeInternal {
  constexpr UEDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UEDefaultTypeInternal() {}
  union {
    UE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UEDefaultTypeInternal _UE_default_instance_;
constexpr Cell::Cell(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cgi_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , num_ues_(int64_t{0})
  , cumulative_handovers_in_(int64_t{0})
  , cumulative_handovers_out_(int64_t{0}){}
struct CellDefaultTypeInternal {
  constexpr CellDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CellDefaultTypeInternal() {}
  union {
    Cell _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CellDefaultTypeInternal _Cell_default_instance_;
}  // namespace mho
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fmho_2fmho_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_onos_2fmho_2fmho_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fmho_2fmho_2eproto = nullptr;

const uint32_t TableStruct_onos_2fmho_2fmho_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::GetMhoParamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mho::GetMhoParamRequest, hoparamtype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::GetMhoParamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mho::GetMhoParamResponse, hoparamtype_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::GetMhoParamResponse, a3offset_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::GetMhoParamResponse, hysteresis_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::GetMhoParamResponse, timetotrigger_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::SetMhoParamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mho::SetMhoParamRequest, hoparamtype_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::SetMhoParamRequest, a3offset_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::SetMhoParamRequest, hysteresis_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::SetMhoParamRequest, timetotrigger_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::SetMhoParamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mho::SetMhoParamResponse, success_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::UeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mho::UeList, ues_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::CellList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mho::CellList, cells_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::UE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mho::UE, ue_id_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::UE, rrc_state_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::UE, cgi_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::mho::Cell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::mho::Cell, cgi_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::Cell, num_ues_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::Cell, cumulative_handovers_in_),
  PROTOBUF_FIELD_OFFSET(::onos::mho::Cell, cumulative_handovers_out_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::mho::GetMhoParamRequest)},
  { 7, -1, -1, sizeof(::onos::mho::GetMhoParamResponse)},
  { 17, -1, -1, sizeof(::onos::mho::SetMhoParamRequest)},
  { 27, -1, -1, sizeof(::onos::mho::SetMhoParamResponse)},
  { 34, -1, -1, sizeof(::onos::mho::GetRequest)},
  { 40, -1, -1, sizeof(::onos::mho::UeList)},
  { 47, -1, -1, sizeof(::onos::mho::CellList)},
  { 54, -1, -1, sizeof(::onos::mho::UE)},
  { 63, -1, -1, sizeof(::onos::mho::Cell)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_GetMhoParamRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_GetMhoParamResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_SetMhoParamRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_SetMhoParamResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_GetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_UeList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_CellList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_UE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::mho::_Cell_default_instance_),
};

const char descriptor_table_protodef_onos_2fmho_2fmho_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022onos/mho/mho.proto\022\010onos.mho\"A\n\022GetMho"
  "ParamRequest\022+\n\013hoParamType\030\001 \001(\0162\026.onos"
  ".mho.MhoParamType\"\177\n\023GetMhoParamResponse"
  "\022+\n\013hoParamType\030\001 \001(\0162\026.onos.mho.MhoPara"
  "mType\022\020\n\010a3Offset\030\002 \001(\005\022\022\n\nhysteresis\030\003 "
  "\001(\005\022\025\n\rtimeToTrigger\030\004 \001(\005\"~\n\022SetMhoPara"
  "mRequest\022+\n\013hoParamType\030\001 \001(\0162\026.onos.mho"
  ".MhoParamType\022\020\n\010a3Offset\030\002 \001(\005\022\022\n\nhyste"
  "resis\030\003 \001(\005\022\025\n\rtimeToTrigger\030\004 \001(\005\"&\n\023Se"
  "tMhoParamResponse\022\017\n\007success\030\001 \001(\010\"\014\n\nGe"
  "tRequest\"#\n\006UeList\022\031\n\003ues\030\001 \003(\0132\014.onos.m"
  "ho.UE\")\n\010CellList\022\035\n\005cells\030\001 \003(\0132\016.onos."
  "mho.Cell\"3\n\002UE\022\r\n\005ue_id\030\001 \001(\t\022\021\n\trrc_sta"
  "te\030\002 \001(\t\022\013\n\003cgi\030\003 \001(\t\"g\n\004Cell\022\013\n\003cgi\030\001 \001"
  "(\t\022\017\n\007num_ues\030\002 \001(\003\022\037\n\027cumulative_handov"
  "ers_in\030\004 \001(\003\022 \n\030cumulative_handovers_out"
  "\030\005 \001(\003*H\n\014MhoParamType\022\007\n\003ALL\020\000\022\014\n\010A3OFF"
  "SET\020\001\022\016\n\nHYSTERESIS\020\002\022\021\n\rTIMETOTRIGGER\020\003"
  "2\213\002\n\003mho\022K\n\014GetMhoParams\022\034.onos.mho.GetM"
  "hoParamRequest\032\035.onos.mho.GetMhoParamRes"
  "ponse\022K\n\014SetMhoParams\022\034.onos.mho.SetMhoP"
  "aramRequest\032\035.onos.mho.SetMhoParamRespon"
  "se\0222\n\006GetUes\022\024.onos.mho.GetRequest\032\020.ono"
  "s.mho.UeList\"\000\0226\n\010GetCells\022\024.onos.mho.Ge"
  "tRequest\032\022.onos.mho.CellList\"\000b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fmho_2fmho_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fmho_2fmho_2eproto = {
  false, false, 998, descriptor_table_protodef_onos_2fmho_2fmho_2eproto, "onos/mho/mho.proto", 
  &descriptor_table_onos_2fmho_2fmho_2eproto_once, nullptr, 0, 9,
  schemas, file_default_instances, TableStruct_onos_2fmho_2fmho_2eproto::offsets,
  file_level_metadata_onos_2fmho_2fmho_2eproto, file_level_enum_descriptors_onos_2fmho_2fmho_2eproto, file_level_service_descriptors_onos_2fmho_2fmho_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fmho_2fmho_2eproto_getter() {
  return &descriptor_table_onos_2fmho_2fmho_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fmho_2fmho_2eproto(&descriptor_table_onos_2fmho_2fmho_2eproto);
namespace onos {
namespace mho {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MhoParamType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fmho_2fmho_2eproto);
  return file_level_enum_descriptors_onos_2fmho_2fmho_2eproto[0];
}
bool MhoParamType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class GetMhoParamRequest::_Internal {
 public:
};

GetMhoParamRequest::GetMhoParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mho.GetMhoParamRequest)
}
GetMhoParamRequest::GetMhoParamRequest(const GetMhoParamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hoparamtype_ = from.hoparamtype_;
  // @@protoc_insertion_point(copy_constructor:onos.mho.GetMhoParamRequest)
}

inline void GetMhoParamRequest::SharedCtor() {
hoparamtype_ = 0;
}

GetMhoParamRequest::~GetMhoParamRequest() {
  // @@protoc_insertion_point(destructor:onos.mho.GetMhoParamRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMhoParamRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMhoParamRequest::ArenaDtor(void* object) {
  GetMhoParamRequest* _this = reinterpret_cast< GetMhoParamRequest* >(object);
  (void)_this;
}
void GetMhoParamRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMhoParamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMhoParamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mho.GetMhoParamRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hoparamtype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMhoParamRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.mho.MhoParamType hoParamType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_hoparamtype(static_cast<::onos::mho::MhoParamType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMhoParamRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mho.GetMhoParamRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.mho.MhoParamType hoParamType = 1;
  if (this->_internal_hoparamtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_hoparamtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mho.GetMhoParamRequest)
  return target;
}

size_t GetMhoParamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mho.GetMhoParamRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.mho.MhoParamType hoParamType = 1;
  if (this->_internal_hoparamtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hoparamtype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMhoParamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMhoParamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMhoParamRequest::GetClassData() const { return &_class_data_; }

void GetMhoParamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMhoParamRequest *>(to)->MergeFrom(
      static_cast<const GetMhoParamRequest &>(from));
}


void GetMhoParamRequest::MergeFrom(const GetMhoParamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mho.GetMhoParamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hoparamtype() != 0) {
    _internal_set_hoparamtype(from._internal_hoparamtype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMhoParamRequest::CopyFrom(const GetMhoParamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mho.GetMhoParamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMhoParamRequest::IsInitialized() const {
  return true;
}

void GetMhoParamRequest::InternalSwap(GetMhoParamRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hoparamtype_, other->hoparamtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMhoParamRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[0]);
}

// ===================================================================

class GetMhoParamResponse::_Internal {
 public:
};

GetMhoParamResponse::GetMhoParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mho.GetMhoParamResponse)
}
GetMhoParamResponse::GetMhoParamResponse(const GetMhoParamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&hoparamtype_, &from.hoparamtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&timetotrigger_) -
    reinterpret_cast<char*>(&hoparamtype_)) + sizeof(timetotrigger_));
  // @@protoc_insertion_point(copy_constructor:onos.mho.GetMhoParamResponse)
}

inline void GetMhoParamResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&hoparamtype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timetotrigger_) -
    reinterpret_cast<char*>(&hoparamtype_)) + sizeof(timetotrigger_));
}

GetMhoParamResponse::~GetMhoParamResponse() {
  // @@protoc_insertion_point(destructor:onos.mho.GetMhoParamResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetMhoParamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetMhoParamResponse::ArenaDtor(void* object) {
  GetMhoParamResponse* _this = reinterpret_cast< GetMhoParamResponse* >(object);
  (void)_this;
}
void GetMhoParamResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMhoParamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetMhoParamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mho.GetMhoParamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hoparamtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timetotrigger_) -
      reinterpret_cast<char*>(&hoparamtype_)) + sizeof(timetotrigger_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMhoParamResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.mho.MhoParamType hoParamType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_hoparamtype(static_cast<::onos::mho::MhoParamType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 a3Offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          a3offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hysteresis = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          hysteresis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 timeToTrigger = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          timetotrigger_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetMhoParamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mho.GetMhoParamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.mho.MhoParamType hoParamType = 1;
  if (this->_internal_hoparamtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_hoparamtype(), target);
  }

  // int32 a3Offset = 2;
  if (this->_internal_a3offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_a3offset(), target);
  }

  // int32 hysteresis = 3;
  if (this->_internal_hysteresis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_hysteresis(), target);
  }

  // int32 timeToTrigger = 4;
  if (this->_internal_timetotrigger() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_timetotrigger(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mho.GetMhoParamResponse)
  return target;
}

size_t GetMhoParamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mho.GetMhoParamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.mho.MhoParamType hoParamType = 1;
  if (this->_internal_hoparamtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hoparamtype());
  }

  // int32 a3Offset = 2;
  if (this->_internal_a3offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_a3offset());
  }

  // int32 hysteresis = 3;
  if (this->_internal_hysteresis() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_hysteresis());
  }

  // int32 timeToTrigger = 4;
  if (this->_internal_timetotrigger() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_timetotrigger());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetMhoParamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetMhoParamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetMhoParamResponse::GetClassData() const { return &_class_data_; }

void GetMhoParamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetMhoParamResponse *>(to)->MergeFrom(
      static_cast<const GetMhoParamResponse &>(from));
}


void GetMhoParamResponse::MergeFrom(const GetMhoParamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mho.GetMhoParamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hoparamtype() != 0) {
    _internal_set_hoparamtype(from._internal_hoparamtype());
  }
  if (from._internal_a3offset() != 0) {
    _internal_set_a3offset(from._internal_a3offset());
  }
  if (from._internal_hysteresis() != 0) {
    _internal_set_hysteresis(from._internal_hysteresis());
  }
  if (from._internal_timetotrigger() != 0) {
    _internal_set_timetotrigger(from._internal_timetotrigger());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetMhoParamResponse::CopyFrom(const GetMhoParamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mho.GetMhoParamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMhoParamResponse::IsInitialized() const {
  return true;
}

void GetMhoParamResponse::InternalSwap(GetMhoParamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetMhoParamResponse, timetotrigger_)
      + sizeof(GetMhoParamResponse::timetotrigger_)
      - PROTOBUF_FIELD_OFFSET(GetMhoParamResponse, hoparamtype_)>(
          reinterpret_cast<char*>(&hoparamtype_),
          reinterpret_cast<char*>(&other->hoparamtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMhoParamResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[1]);
}

// ===================================================================

class SetMhoParamRequest::_Internal {
 public:
};

SetMhoParamRequest::SetMhoParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mho.SetMhoParamRequest)
}
SetMhoParamRequest::SetMhoParamRequest(const SetMhoParamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&hoparamtype_, &from.hoparamtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&timetotrigger_) -
    reinterpret_cast<char*>(&hoparamtype_)) + sizeof(timetotrigger_));
  // @@protoc_insertion_point(copy_constructor:onos.mho.SetMhoParamRequest)
}

inline void SetMhoParamRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&hoparamtype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timetotrigger_) -
    reinterpret_cast<char*>(&hoparamtype_)) + sizeof(timetotrigger_));
}

SetMhoParamRequest::~SetMhoParamRequest() {
  // @@protoc_insertion_point(destructor:onos.mho.SetMhoParamRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetMhoParamRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetMhoParamRequest::ArenaDtor(void* object) {
  SetMhoParamRequest* _this = reinterpret_cast< SetMhoParamRequest* >(object);
  (void)_this;
}
void SetMhoParamRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMhoParamRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetMhoParamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mho.SetMhoParamRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hoparamtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timetotrigger_) -
      reinterpret_cast<char*>(&hoparamtype_)) + sizeof(timetotrigger_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMhoParamRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.mho.MhoParamType hoParamType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_hoparamtype(static_cast<::onos::mho::MhoParamType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 a3Offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          a3offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hysteresis = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          hysteresis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 timeToTrigger = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          timetotrigger_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetMhoParamRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mho.SetMhoParamRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.mho.MhoParamType hoParamType = 1;
  if (this->_internal_hoparamtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_hoparamtype(), target);
  }

  // int32 a3Offset = 2;
  if (this->_internal_a3offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_a3offset(), target);
  }

  // int32 hysteresis = 3;
  if (this->_internal_hysteresis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_hysteresis(), target);
  }

  // int32 timeToTrigger = 4;
  if (this->_internal_timetotrigger() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_timetotrigger(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mho.SetMhoParamRequest)
  return target;
}

size_t SetMhoParamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mho.SetMhoParamRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.mho.MhoParamType hoParamType = 1;
  if (this->_internal_hoparamtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hoparamtype());
  }

  // int32 a3Offset = 2;
  if (this->_internal_a3offset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_a3offset());
  }

  // int32 hysteresis = 3;
  if (this->_internal_hysteresis() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_hysteresis());
  }

  // int32 timeToTrigger = 4;
  if (this->_internal_timetotrigger() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_timetotrigger());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetMhoParamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetMhoParamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetMhoParamRequest::GetClassData() const { return &_class_data_; }

void SetMhoParamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetMhoParamRequest *>(to)->MergeFrom(
      static_cast<const SetMhoParamRequest &>(from));
}


void SetMhoParamRequest::MergeFrom(const SetMhoParamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mho.SetMhoParamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hoparamtype() != 0) {
    _internal_set_hoparamtype(from._internal_hoparamtype());
  }
  if (from._internal_a3offset() != 0) {
    _internal_set_a3offset(from._internal_a3offset());
  }
  if (from._internal_hysteresis() != 0) {
    _internal_set_hysteresis(from._internal_hysteresis());
  }
  if (from._internal_timetotrigger() != 0) {
    _internal_set_timetotrigger(from._internal_timetotrigger());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetMhoParamRequest::CopyFrom(const SetMhoParamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mho.SetMhoParamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMhoParamRequest::IsInitialized() const {
  return true;
}

void SetMhoParamRequest::InternalSwap(SetMhoParamRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetMhoParamRequest, timetotrigger_)
      + sizeof(SetMhoParamRequest::timetotrigger_)
      - PROTOBUF_FIELD_OFFSET(SetMhoParamRequest, hoparamtype_)>(
          reinterpret_cast<char*>(&hoparamtype_),
          reinterpret_cast<char*>(&other->hoparamtype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMhoParamRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[2]);
}

// ===================================================================

class SetMhoParamResponse::_Internal {
 public:
};

SetMhoParamResponse::SetMhoParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mho.SetMhoParamResponse)
}
SetMhoParamResponse::SetMhoParamResponse(const SetMhoParamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:onos.mho.SetMhoParamResponse)
}

inline void SetMhoParamResponse::SharedCtor() {
success_ = false;
}

SetMhoParamResponse::~SetMhoParamResponse() {
  // @@protoc_insertion_point(destructor:onos.mho.SetMhoParamResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetMhoParamResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetMhoParamResponse::ArenaDtor(void* object) {
  SetMhoParamResponse* _this = reinterpret_cast< SetMhoParamResponse* >(object);
  (void)_this;
}
void SetMhoParamResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetMhoParamResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetMhoParamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mho.SetMhoParamResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetMhoParamResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetMhoParamResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mho.SetMhoParamResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mho.SetMhoParamResponse)
  return target;
}

size_t SetMhoParamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mho.SetMhoParamResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetMhoParamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetMhoParamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetMhoParamResponse::GetClassData() const { return &_class_data_; }

void SetMhoParamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetMhoParamResponse *>(to)->MergeFrom(
      static_cast<const SetMhoParamResponse &>(from));
}


void SetMhoParamResponse::MergeFrom(const SetMhoParamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mho.SetMhoParamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_success() != 0) {
    _internal_set_success(from._internal_success());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetMhoParamResponse::CopyFrom(const SetMhoParamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mho.SetMhoParamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMhoParamResponse::IsInitialized() const {
  return true;
}

void SetMhoParamResponse::InternalSwap(SetMhoParamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(success_, other->success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetMhoParamResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[3]);
}

// ===================================================================

class GetRequest::_Internal {
 public:
};

GetRequest::GetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.mho.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.mho.GetRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[4]);
}

// ===================================================================

class UeList::_Internal {
 public:
};

UeList::UeList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ues_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mho.UeList)
}
UeList::UeList(const UeList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ues_(from.ues_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.mho.UeList)
}

inline void UeList::SharedCtor() {
}

UeList::~UeList() {
  // @@protoc_insertion_point(destructor:onos.mho.UeList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UeList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UeList::ArenaDtor(void* object) {
  UeList* _this = reinterpret_cast< UeList* >(object);
  (void)_this;
}
void UeList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UeList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UeList::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mho.UeList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ues_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UeList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .onos.mho.UE ues = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UeList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mho.UeList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onos.mho.UE ues = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ues_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_ues(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mho.UeList)
  return target;
}

size_t UeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mho.UeList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.mho.UE ues = 1;
  total_size += 1UL * this->_internal_ues_size();
  for (const auto& msg : this->ues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UeList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UeList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UeList::GetClassData() const { return &_class_data_; }

void UeList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UeList *>(to)->MergeFrom(
      static_cast<const UeList &>(from));
}


void UeList::MergeFrom(const UeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mho.UeList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  ues_.MergeFrom(from.ues_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UeList::CopyFrom(const UeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mho.UeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UeList::IsInitialized() const {
  return true;
}

void UeList::InternalSwap(UeList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ues_.InternalSwap(&other->ues_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UeList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[5]);
}

// ===================================================================

class CellList::_Internal {
 public:
};

CellList::CellList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  cells_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mho.CellList)
}
CellList::CellList(const CellList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cells_(from.cells_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.mho.CellList)
}

inline void CellList::SharedCtor() {
}

CellList::~CellList() {
  // @@protoc_insertion_point(destructor:onos.mho.CellList)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CellList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CellList::ArenaDtor(void* object) {
  CellList* _this = reinterpret_cast< CellList* >(object);
  (void)_this;
}
void CellList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CellList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CellList::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mho.CellList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cells_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CellList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .onos.mho.Cell cells = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_cells(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CellList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mho.CellList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onos.mho.Cell cells = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_cells_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_cells(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mho.CellList)
  return target;
}

size_t CellList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mho.CellList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.mho.Cell cells = 1;
  total_size += 1UL * this->_internal_cells_size();
  for (const auto& msg : this->cells_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CellList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CellList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CellList::GetClassData() const { return &_class_data_; }

void CellList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CellList *>(to)->MergeFrom(
      static_cast<const CellList &>(from));
}


void CellList::MergeFrom(const CellList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mho.CellList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cells_.MergeFrom(from.cells_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CellList::CopyFrom(const CellList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mho.CellList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CellList::IsInitialized() const {
  return true;
}

void CellList::InternalSwap(CellList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  cells_.InternalSwap(&other->cells_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CellList::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[6]);
}

// ===================================================================

class UE::_Internal {
 public:
};

UE::UE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mho.UE)
}
UE::UE(const UE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ue_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ue_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ue_id().empty()) {
    ue_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ue_id(), 
      GetArenaForAllocation());
  }
  rrc_state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rrc_state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rrc_state().empty()) {
    rrc_state_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rrc_state(), 
      GetArenaForAllocation());
  }
  cgi_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cgi_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cgi().empty()) {
    cgi_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cgi(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.mho.UE)
}

inline void UE::SharedCtor() {
ue_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ue_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
rrc_state_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rrc_state_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
cgi_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cgi_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UE::~UE() {
  // @@protoc_insertion_point(destructor:onos.mho.UE)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  ue_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rrc_state_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cgi_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UE::ArenaDtor(void* object) {
  UE* _this = reinterpret_cast< UE* >(object);
  (void)_this;
}
void UE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UE::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mho.UE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ue_id_.ClearToEmpty();
  rrc_state_.ClearToEmpty();
  cgi_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string ue_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ue_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.mho.UE.ue_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string rrc_state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rrc_state();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.mho.UE.rrc_state"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cgi = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cgi();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.mho.UE.cgi"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mho.UE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string ue_id = 1;
  if (!this->_internal_ue_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ue_id().data(), static_cast<int>(this->_internal_ue_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.mho.UE.ue_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ue_id(), target);
  }

  // string rrc_state = 2;
  if (!this->_internal_rrc_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rrc_state().data(), static_cast<int>(this->_internal_rrc_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.mho.UE.rrc_state");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rrc_state(), target);
  }

  // string cgi = 3;
  if (!this->_internal_cgi().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cgi().data(), static_cast<int>(this->_internal_cgi().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.mho.UE.cgi");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cgi(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mho.UE)
  return target;
}

size_t UE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mho.UE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ue_id = 1;
  if (!this->_internal_ue_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ue_id());
  }

  // string rrc_state = 2;
  if (!this->_internal_rrc_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rrc_state());
  }

  // string cgi = 3;
  if (!this->_internal_cgi().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cgi());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UE::GetClassData() const { return &_class_data_; }

void UE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UE *>(to)->MergeFrom(
      static_cast<const UE &>(from));
}


void UE::MergeFrom(const UE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mho.UE)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ue_id().empty()) {
    _internal_set_ue_id(from._internal_ue_id());
  }
  if (!from._internal_rrc_state().empty()) {
    _internal_set_rrc_state(from._internal_rrc_state());
  }
  if (!from._internal_cgi().empty()) {
    _internal_set_cgi(from._internal_cgi());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UE::CopyFrom(const UE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mho.UE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UE::IsInitialized() const {
  return true;
}

void UE::InternalSwap(UE* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ue_id_, lhs_arena,
      &other->ue_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rrc_state_, lhs_arena,
      &other->rrc_state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cgi_, lhs_arena,
      &other->cgi_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UE::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[7]);
}

// ===================================================================

class Cell::_Internal {
 public:
};

Cell::Cell(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.mho.Cell)
}
Cell::Cell(const Cell& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cgi_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cgi_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cgi().empty()) {
    cgi_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cgi(), 
      GetArenaForAllocation());
  }
  ::memcpy(&num_ues_, &from.num_ues_,
    static_cast<size_t>(reinterpret_cast<char*>(&cumulative_handovers_out_) -
    reinterpret_cast<char*>(&num_ues_)) + sizeof(cumulative_handovers_out_));
  // @@protoc_insertion_point(copy_constructor:onos.mho.Cell)
}

inline void Cell::SharedCtor() {
cgi_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cgi_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&num_ues_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cumulative_handovers_out_) -
    reinterpret_cast<char*>(&num_ues_)) + sizeof(cumulative_handovers_out_));
}

Cell::~Cell() {
  // @@protoc_insertion_point(destructor:onos.mho.Cell)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Cell::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  cgi_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Cell::ArenaDtor(void* object) {
  Cell* _this = reinterpret_cast< Cell* >(object);
  (void)_this;
}
void Cell::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Cell::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Cell::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.mho.Cell)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cgi_.ClearToEmpty();
  ::memset(&num_ues_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cumulative_handovers_out_) -
      reinterpret_cast<char*>(&num_ues_)) + sizeof(cumulative_handovers_out_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Cell::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string cgi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_cgi();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.mho.Cell.cgi"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num_ues = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          num_ues_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 cumulative_handovers_in = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          cumulative_handovers_in_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 cumulative_handovers_out = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          cumulative_handovers_out_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Cell::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.mho.Cell)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgi = 1;
  if (!this->_internal_cgi().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cgi().data(), static_cast<int>(this->_internal_cgi().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.mho.Cell.cgi");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cgi(), target);
  }

  // int64 num_ues = 2;
  if (this->_internal_num_ues() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_num_ues(), target);
  }

  // int64 cumulative_handovers_in = 4;
  if (this->_internal_cumulative_handovers_in() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_cumulative_handovers_in(), target);
  }

  // int64 cumulative_handovers_out = 5;
  if (this->_internal_cumulative_handovers_out() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_cumulative_handovers_out(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.mho.Cell)
  return target;
}

size_t Cell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.mho.Cell)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cgi = 1;
  if (!this->_internal_cgi().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cgi());
  }

  // int64 num_ues = 2;
  if (this->_internal_num_ues() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_ues());
  }

  // int64 cumulative_handovers_in = 4;
  if (this->_internal_cumulative_handovers_in() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_cumulative_handovers_in());
  }

  // int64 cumulative_handovers_out = 5;
  if (this->_internal_cumulative_handovers_out() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_cumulative_handovers_out());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Cell::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Cell::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Cell::GetClassData() const { return &_class_data_; }

void Cell::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Cell *>(to)->MergeFrom(
      static_cast<const Cell &>(from));
}


void Cell::MergeFrom(const Cell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.mho.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cgi().empty()) {
    _internal_set_cgi(from._internal_cgi());
  }
  if (from._internal_num_ues() != 0) {
    _internal_set_num_ues(from._internal_num_ues());
  }
  if (from._internal_cumulative_handovers_in() != 0) {
    _internal_set_cumulative_handovers_in(from._internal_cumulative_handovers_in());
  }
  if (from._internal_cumulative_handovers_out() != 0) {
    _internal_set_cumulative_handovers_out(from._internal_cumulative_handovers_out());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Cell::CopyFrom(const Cell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.mho.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cell::IsInitialized() const {
  return true;
}

void Cell::InternalSwap(Cell* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cgi_, lhs_arena,
      &other->cgi_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Cell, cumulative_handovers_out_)
      + sizeof(Cell::cumulative_handovers_out_)
      - PROTOBUF_FIELD_OFFSET(Cell, num_ues_)>(
          reinterpret_cast<char*>(&num_ues_),
          reinterpret_cast<char*>(&other->num_ues_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Cell::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fmho_2fmho_2eproto_getter, &descriptor_table_onos_2fmho_2fmho_2eproto_once,
      file_level_metadata_onos_2fmho_2fmho_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mho
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::mho::GetMhoParamRequest* Arena::CreateMaybeMessage< ::onos::mho::GetMhoParamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::GetMhoParamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mho::GetMhoParamResponse* Arena::CreateMaybeMessage< ::onos::mho::GetMhoParamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::GetMhoParamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mho::SetMhoParamRequest* Arena::CreateMaybeMessage< ::onos::mho::SetMhoParamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::SetMhoParamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mho::SetMhoParamResponse* Arena::CreateMaybeMessage< ::onos::mho::SetMhoParamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::SetMhoParamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mho::GetRequest* Arena::CreateMaybeMessage< ::onos::mho::GetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::GetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mho::UeList* Arena::CreateMaybeMessage< ::onos::mho::UeList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::UeList >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mho::CellList* Arena::CreateMaybeMessage< ::onos::mho::CellList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::CellList >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mho::UE* Arena::CreateMaybeMessage< ::onos::mho::UE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::UE >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::mho::Cell* Arena::CreateMaybeMessage< ::onos::mho::Cell >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::mho::Cell >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
