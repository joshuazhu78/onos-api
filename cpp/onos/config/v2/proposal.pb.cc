// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/config/v2/proposal.proto

#include "onos/config/v2/proposal.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace config {
namespace v2 {
constexpr Proposal::Proposal(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , target_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , meta_(nullptr)
  , status_(nullptr)
  , target_info_(nullptr)
  , transaction_index_(uint64_t{0u})
  , _oneof_case_{}{}
struct ProposalDefaultTypeInternal {
  constexpr ProposalDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalDefaultTypeInternal() {}
  union {
    Proposal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalDefaultTypeInternal _Proposal_default_instance_;
constexpr ChangeProposal_ValuesEntry_DoNotUse::ChangeProposal_ValuesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ChangeProposal_ValuesEntry_DoNotUseDefaultTypeInternal {
  constexpr ChangeProposal_ValuesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChangeProposal_ValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ChangeProposal_ValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChangeProposal_ValuesEntry_DoNotUseDefaultTypeInternal _ChangeProposal_ValuesEntry_DoNotUse_default_instance_;
constexpr ChangeProposal::ChangeProposal(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : values_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct ChangeProposalDefaultTypeInternal {
  constexpr ChangeProposalDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ChangeProposalDefaultTypeInternal() {}
  union {
    ChangeProposal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ChangeProposalDefaultTypeInternal _ChangeProposal_default_instance_;
constexpr RollbackProposal::RollbackProposal(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rollback_index_(uint64_t{0u}){}
struct RollbackProposalDefaultTypeInternal {
  constexpr RollbackProposalDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RollbackProposalDefaultTypeInternal() {}
  union {
    RollbackProposal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RollbackProposalDefaultTypeInternal _RollbackProposal_default_instance_;
constexpr ProposalStatus_RollbackValuesEntry_DoNotUse::ProposalStatus_RollbackValuesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ProposalStatus_RollbackValuesEntry_DoNotUseDefaultTypeInternal {
  constexpr ProposalStatus_RollbackValuesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalStatus_RollbackValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ProposalStatus_RollbackValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalStatus_RollbackValuesEntry_DoNotUseDefaultTypeInternal _ProposalStatus_RollbackValuesEntry_DoNotUse_default_instance_;
constexpr ProposalStatus::ProposalStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rollback_values_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , phases_(nullptr)
  , prev_index_(uint64_t{0u})
  , next_index_(uint64_t{0u})
  , rollback_index_(uint64_t{0u}){}
struct ProposalStatusDefaultTypeInternal {
  constexpr ProposalStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalStatusDefaultTypeInternal() {}
  union {
    ProposalStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalStatusDefaultTypeInternal _ProposalStatus_default_instance_;
constexpr ProposalPhases::ProposalPhases(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : initialize_(nullptr)
  , validate_(nullptr)
  , commit_(nullptr)
  , apply_(nullptr)
  , abort_(nullptr){}
struct ProposalPhasesDefaultTypeInternal {
  constexpr ProposalPhasesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalPhasesDefaultTypeInternal() {}
  union {
    ProposalPhases _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalPhasesDefaultTypeInternal _ProposalPhases_default_instance_;
constexpr ProposalPhaseStatus::ProposalPhaseStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : start_(nullptr)
  , end_(nullptr){}
struct ProposalPhaseStatusDefaultTypeInternal {
  constexpr ProposalPhaseStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalPhaseStatusDefaultTypeInternal() {}
  union {
    ProposalPhaseStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalPhaseStatusDefaultTypeInternal _ProposalPhaseStatus_default_instance_;
constexpr ProposalInitializePhase::ProposalInitializePhase(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , state_(0)
{}
struct ProposalInitializePhaseDefaultTypeInternal {
  constexpr ProposalInitializePhaseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalInitializePhaseDefaultTypeInternal() {}
  union {
    ProposalInitializePhase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalInitializePhaseDefaultTypeInternal _ProposalInitializePhase_default_instance_;
constexpr ProposalValidatePhase::ProposalValidatePhase(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , failure_(nullptr)
  , state_(0)
{}
struct ProposalValidatePhaseDefaultTypeInternal {
  constexpr ProposalValidatePhaseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalValidatePhaseDefaultTypeInternal() {}
  union {
    ProposalValidatePhase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalValidatePhaseDefaultTypeInternal _ProposalValidatePhase_default_instance_;
constexpr ProposalCommitPhase::ProposalCommitPhase(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , state_(0)
{}
struct ProposalCommitPhaseDefaultTypeInternal {
  constexpr ProposalCommitPhaseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalCommitPhaseDefaultTypeInternal() {}
  union {
    ProposalCommitPhase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalCommitPhaseDefaultTypeInternal _ProposalCommitPhase_default_instance_;
constexpr ProposalApplyPhase::ProposalApplyPhase(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , failure_(nullptr)
  , term_(uint64_t{0u})
  , state_(0)
{}
struct ProposalApplyPhaseDefaultTypeInternal {
  constexpr ProposalApplyPhaseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalApplyPhaseDefaultTypeInternal() {}
  union {
    ProposalApplyPhase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalApplyPhaseDefaultTypeInternal _ProposalApplyPhase_default_instance_;
constexpr ProposalAbortPhase::ProposalAbortPhase(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(nullptr)
  , state_(0)
{}
struct ProposalAbortPhaseDefaultTypeInternal {
  constexpr ProposalAbortPhaseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalAbortPhaseDefaultTypeInternal() {}
  union {
    ProposalAbortPhase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalAbortPhaseDefaultTypeInternal _ProposalAbortPhase_default_instance_;
constexpr ProposalEvent::ProposalEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : proposal_(nullptr)
  , type_(0)
{}
struct ProposalEventDefaultTypeInternal {
  constexpr ProposalEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposalEventDefaultTypeInternal() {}
  union {
    ProposalEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposalEventDefaultTypeInternal _ProposalEvent_default_instance_;
}  // namespace v2
}  // namespace config
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[14];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto = nullptr;

const uint32_t TableStruct_onos_2fconfig_2fv2_2fproposal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, meta_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, target_id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, transaction_index_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, status_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, target_info_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Proposal, details_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ChangeProposal_ValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ChangeProposal_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ChangeProposal_ValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ChangeProposal_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ChangeProposal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ChangeProposal, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::RollbackProposal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::RollbackProposal, rollback_index_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus_RollbackValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus_RollbackValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus_RollbackValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus_RollbackValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus, phases_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus, prev_index_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus, next_index_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus, rollback_index_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalStatus, rollback_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhases, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhases, initialize_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhases, validate_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhases, commit_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhases, apply_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhases, abort_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhaseStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhaseStatus, start_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalPhaseStatus, end_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalInitializePhase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalInitializePhase, status_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalInitializePhase, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalValidatePhase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalValidatePhase, status_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalValidatePhase, state_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalValidatePhase, failure_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalCommitPhase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalCommitPhase, status_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalCommitPhase, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalApplyPhase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalApplyPhase, status_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalApplyPhase, state_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalApplyPhase, term_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalApplyPhase, failure_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalAbortPhase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalAbortPhase, status_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalAbortPhase, state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalEvent, type_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposalEvent, proposal_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::config::v2::Proposal)},
  { 15, 23, -1, sizeof(::onos::config::v2::ChangeProposal_ValuesEntry_DoNotUse)},
  { 25, -1, -1, sizeof(::onos::config::v2::ChangeProposal)},
  { 32, -1, -1, sizeof(::onos::config::v2::RollbackProposal)},
  { 39, 47, -1, sizeof(::onos::config::v2::ProposalStatus_RollbackValuesEntry_DoNotUse)},
  { 49, -1, -1, sizeof(::onos::config::v2::ProposalStatus)},
  { 60, -1, -1, sizeof(::onos::config::v2::ProposalPhases)},
  { 71, -1, -1, sizeof(::onos::config::v2::ProposalPhaseStatus)},
  { 79, -1, -1, sizeof(::onos::config::v2::ProposalInitializePhase)},
  { 87, -1, -1, sizeof(::onos::config::v2::ProposalValidatePhase)},
  { 96, -1, -1, sizeof(::onos::config::v2::ProposalCommitPhase)},
  { 104, -1, -1, sizeof(::onos::config::v2::ProposalApplyPhase)},
  { 114, -1, -1, sizeof(::onos::config::v2::ProposalAbortPhase)},
  { 122, -1, -1, sizeof(::onos::config::v2::ProposalEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_Proposal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ChangeProposal_ValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ChangeProposal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_RollbackProposal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalStatus_RollbackValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalPhases_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalPhaseStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalInitializePhase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalValidatePhase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalCommitPhase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalApplyPhase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalAbortPhase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposalEvent_default_instance_),
};

const char descriptor_table_protodef_onos_2fconfig_2fv2_2fproposal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035onos/config/v2/proposal.proto\022\016onos.co"
  "nfig.v2\032\024gogoproto/gogo.proto\032\033onos/conf"
  "ig/v2/object.proto\032\032onos/config/v2/value"
  ".proto\032\034onos/config/v2/failure.proto\032\037go"
  "ogle/protobuf/timestamp.proto\"\236\003\n\010Propos"
  "al\0222\n\004meta\030\001 \001(\0132\032.onos.config.v2.Object"
  "MetaB\010\320\336\037\001\310\336\037\000\022 \n\002id\030\002 \001(\tB\024\342\336\037\002ID\372\336\037\nPr"
  "oposalID\022+\n\ttarget_id\030\003 \001(\tB\030\342\336\037\010TargetI"
  "D\372\336\037\010TargetID\022$\n\021transaction_index\030\004 \001(\004"
  "B\t\372\336\037\005Index\0220\n\006change\030\005 \001(\0132\036.onos.confi"
  "g.v2.ChangeProposalH\000\0224\n\010rollback\030\006 \001(\0132"
  " .onos.config.v2.RollbackProposalH\000\0224\n\006s"
  "tatus\030\007 \001(\0132\036.onos.config.v2.ProposalSta"
  "tusB\004\310\336\037\000\022@\n\013target_info\030\010 \001(\0132!.onos.co"
  "nfig.v2.TargetTypeVersionB\010\320\336\037\001\310\336\037\000B\t\n\007d"
  "etails\"\226\001\n\016ChangeProposal\022:\n\006values\030\001 \003("
  "\0132*.onos.config.v2.ChangeProposal.Values"
  "Entry\032H\n\013ValuesEntry\022\013\n\003key\030\001 \001(\t\022(\n\005val"
  "ue\030\002 \001(\0132\031.onos.config.v2.PathValue:\0028\001\""
  "5\n\020RollbackProposal\022!\n\016rollback_index\030\001 "
  "\001(\004B\t\372\336\037\005Index\"\306\002\n\016ProposalStatus\0224\n\006pha"
  "ses\030\001 \001(\0132\036.onos.config.v2.ProposalPhase"
  "sB\004\310\336\037\000\022\035\n\nprev_index\030\002 \001(\004B\t\372\336\037\005Index\022\035"
  "\n\nnext_index\030\003 \001(\004B\t\372\336\037\005Index\022!\n\016rollbac"
  "k_index\030\004 \001(\004B\t\372\336\037\005Index\022K\n\017rollback_val"
  "ues\030\005 \003(\01322.onos.config.v2.ProposalStatu"
  "s.RollbackValuesEntry\032P\n\023RollbackValuesE"
  "ntry\022\013\n\003key\030\001 \001(\t\022(\n\005value\030\002 \001(\0132\031.onos."
  "config.v2.PathValue:\0028\001\"\241\002\n\016ProposalPhas"
  "es\022;\n\ninitialize\030\001 \001(\0132\'.onos.config.v2."
  "ProposalInitializePhase\0227\n\010validate\030\002 \001("
  "\0132%.onos.config.v2.ProposalValidatePhase"
  "\0223\n\006commit\030\003 \001(\0132#.onos.config.v2.Propos"
  "alCommitPhase\0221\n\005apply\030\004 \001(\0132\".onos.conf"
  "ig.v2.ProposalApplyPhase\0221\n\005abort\030\005 \001(\0132"
  "\".onos.config.v2.ProposalAbortPhase\"u\n\023P"
  "roposalPhaseStatus\022/\n\005start\030\001 \001(\0132\032.goog"
  "le.protobuf.TimestampB\004\220\337\037\001\022-\n\003end\030\002 \001(\013"
  "2\032.google.protobuf.TimestampB\004\220\337\037\001\"\302\001\n\027P"
  "roposalInitializePhase\022=\n\006status\030\001 \001(\0132#"
  ".onos.config.v2.ProposalPhaseStatusB\010\320\336\037"
  "\001\310\336\037\000\022<\n\005state\030\002 \001(\0162-.onos.config.v2.Pr"
  "oposalInitializePhase.State\"*\n\005State\022\020\n\014"
  "INITIALIZING\020\000\022\017\n\013INITIALIZED\020\001\"\360\001\n\025Prop"
  "osalValidatePhase\022=\n\006status\030\001 \001(\0132#.onos"
  ".config.v2.ProposalPhaseStatusB\010\320\336\037\001\310\336\037\000"
  "\022:\n\005state\030\002 \001(\0162+.onos.config.v2.Proposa"
  "lValidatePhase.State\022(\n\007failure\030\003 \001(\0132\027."
  "onos.config.v2.Failure\"2\n\005State\022\016\n\nVALID"
  "ATING\020\000\022\r\n\tVALIDATED\020\001\022\n\n\006FAILED\020\002\"\266\001\n\023P"
  "roposalCommitPhase\022=\n\006status\030\001 \001(\0132#.ono"
  "s.config.v2.ProposalPhaseStatusB\010\320\336\037\001\310\336\037"
  "\000\0228\n\005state\030\002 \001(\0162).onos.config.v2.Propos"
  "alCommitPhase.State\"&\n\005State\022\016\n\nCOMMITTI"
  "NG\020\000\022\r\n\tCOMMITTED\020\001\"\210\002\n\022ProposalApplyPha"
  "se\022=\n\006status\030\001 \001(\0132#.onos.config.v2.Prop"
  "osalPhaseStatusB\010\320\336\037\001\310\336\037\000\0227\n\005state\030\002 \001(\016"
  "2(.onos.config.v2.ProposalApplyPhase.Sta"
  "te\022 \n\004term\030\003 \001(\004B\022\372\336\037\016MastershipTerm\022(\n\007"
  "failure\030\004 \001(\0132\027.onos.config.v2.Failure\"."
  "\n\005State\022\014\n\010APPLYING\020\000\022\013\n\007APPLIED\020\001\022\n\n\006FA"
  "ILED\020\002\"\260\001\n\022ProposalAbortPhase\022=\n\006status\030"
  "\001 \001(\0132#.onos.config.v2.ProposalPhaseStat"
  "usB\010\320\336\037\001\310\336\037\000\0227\n\005state\030\002 \001(\0162(.onos.confi"
  "g.v2.ProposalAbortPhase.State\"\"\n\005State\022\014"
  "\n\010ABORTING\020\000\022\013\n\007ABORTED\020\001\"\307\001\n\rProposalEv"
  "ent\0225\n\004type\030\001 \001(\0162\'.onos.config.v2.Propo"
  "salEvent.EventType\0220\n\010proposal\030\002 \001(\0132\030.o"
  "nos.config.v2.ProposalB\004\310\336\037\000\"M\n\tEventTyp"
  "e\022\013\n\007UNKNOWN\020\000\022\013\n\007CREATED\020\001\022\013\n\007UPDATED\020\002"
  "\022\013\n\007DELETED\020\003\022\014\n\010REPLAYED\020\004b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_deps[5] = {
  &::descriptor_table_gogoproto_2fgogo_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_onos_2fconfig_2fv2_2ffailure_2eproto,
  &::descriptor_table_onos_2fconfig_2fv2_2fobject_2eproto,
  &::descriptor_table_onos_2fconfig_2fv2_2fvalue_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto = {
  false, false, 2835, descriptor_table_protodef_onos_2fconfig_2fv2_2fproposal_2eproto, "onos/config/v2/proposal.proto", 
  &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once, descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_deps, 5, 14,
  schemas, file_default_instances, TableStruct_onos_2fconfig_2fv2_2fproposal_2eproto::offsets,
  file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto, file_level_enum_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto, file_level_service_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter() {
  return &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fconfig_2fv2_2fproposal_2eproto(&descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto);
namespace onos {
namespace config {
namespace v2 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProposalInitializePhase_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto);
  return file_level_enum_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto[0];
}
bool ProposalInitializePhase_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ProposalInitializePhase_State ProposalInitializePhase::INITIALIZING;
constexpr ProposalInitializePhase_State ProposalInitializePhase::INITIALIZED;
constexpr ProposalInitializePhase_State ProposalInitializePhase::State_MIN;
constexpr ProposalInitializePhase_State ProposalInitializePhase::State_MAX;
constexpr int ProposalInitializePhase::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProposalValidatePhase_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto);
  return file_level_enum_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto[1];
}
bool ProposalValidatePhase_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ProposalValidatePhase_State ProposalValidatePhase::VALIDATING;
constexpr ProposalValidatePhase_State ProposalValidatePhase::VALIDATED;
constexpr ProposalValidatePhase_State ProposalValidatePhase::FAILED;
constexpr ProposalValidatePhase_State ProposalValidatePhase::State_MIN;
constexpr ProposalValidatePhase_State ProposalValidatePhase::State_MAX;
constexpr int ProposalValidatePhase::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProposalCommitPhase_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto);
  return file_level_enum_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto[2];
}
bool ProposalCommitPhase_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ProposalCommitPhase_State ProposalCommitPhase::COMMITTING;
constexpr ProposalCommitPhase_State ProposalCommitPhase::COMMITTED;
constexpr ProposalCommitPhase_State ProposalCommitPhase::State_MIN;
constexpr ProposalCommitPhase_State ProposalCommitPhase::State_MAX;
constexpr int ProposalCommitPhase::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProposalApplyPhase_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto);
  return file_level_enum_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto[3];
}
bool ProposalApplyPhase_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ProposalApplyPhase_State ProposalApplyPhase::APPLYING;
constexpr ProposalApplyPhase_State ProposalApplyPhase::APPLIED;
constexpr ProposalApplyPhase_State ProposalApplyPhase::FAILED;
constexpr ProposalApplyPhase_State ProposalApplyPhase::State_MIN;
constexpr ProposalApplyPhase_State ProposalApplyPhase::State_MAX;
constexpr int ProposalApplyPhase::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProposalAbortPhase_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto);
  return file_level_enum_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto[4];
}
bool ProposalAbortPhase_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ProposalAbortPhase_State ProposalAbortPhase::ABORTING;
constexpr ProposalAbortPhase_State ProposalAbortPhase::ABORTED;
constexpr ProposalAbortPhase_State ProposalAbortPhase::State_MIN;
constexpr ProposalAbortPhase_State ProposalAbortPhase::State_MAX;
constexpr int ProposalAbortPhase::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProposalEvent_EventType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto);
  return file_level_enum_descriptors_onos_2fconfig_2fv2_2fproposal_2eproto[5];
}
bool ProposalEvent_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ProposalEvent_EventType ProposalEvent::UNKNOWN;
constexpr ProposalEvent_EventType ProposalEvent::CREATED;
constexpr ProposalEvent_EventType ProposalEvent::UPDATED;
constexpr ProposalEvent_EventType ProposalEvent::DELETED;
constexpr ProposalEvent_EventType ProposalEvent::REPLAYED;
constexpr ProposalEvent_EventType ProposalEvent::EventType_MIN;
constexpr ProposalEvent_EventType ProposalEvent::EventType_MAX;
constexpr int ProposalEvent::EventType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class Proposal::_Internal {
 public:
  static const ::onos::config::v2::ObjectMeta& meta(const Proposal* msg);
  static const ::onos::config::v2::ChangeProposal& change(const Proposal* msg);
  static const ::onos::config::v2::RollbackProposal& rollback(const Proposal* msg);
  static const ::onos::config::v2::ProposalStatus& status(const Proposal* msg);
  static const ::onos::config::v2::TargetTypeVersion& target_info(const Proposal* msg);
};

const ::onos::config::v2::ObjectMeta&
Proposal::_Internal::meta(const Proposal* msg) {
  return *msg->meta_;
}
const ::onos::config::v2::ChangeProposal&
Proposal::_Internal::change(const Proposal* msg) {
  return *msg->details_.change_;
}
const ::onos::config::v2::RollbackProposal&
Proposal::_Internal::rollback(const Proposal* msg) {
  return *msg->details_.rollback_;
}
const ::onos::config::v2::ProposalStatus&
Proposal::_Internal::status(const Proposal* msg) {
  return *msg->status_;
}
const ::onos::config::v2::TargetTypeVersion&
Proposal::_Internal::target_info(const Proposal* msg) {
  return *msg->target_info_;
}
void Proposal::clear_meta() {
  if (GetArenaForAllocation() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
void Proposal::set_allocated_change(::onos::config::v2::ChangeProposal* change) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_details();
  if (change) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::config::v2::ChangeProposal>::GetOwningArena(change);
    if (message_arena != submessage_arena) {
      change = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, change, submessage_arena);
    }
    set_has_change();
    details_.change_ = change;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.config.v2.Proposal.change)
}
void Proposal::set_allocated_rollback(::onos::config::v2::RollbackProposal* rollback) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_details();
  if (rollback) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::config::v2::RollbackProposal>::GetOwningArena(rollback);
    if (message_arena != submessage_arena) {
      rollback = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rollback, submessage_arena);
    }
    set_has_rollback();
    details_.rollback_ = rollback;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.config.v2.Proposal.rollback)
}
void Proposal::clear_target_info() {
  if (GetArenaForAllocation() == nullptr && target_info_ != nullptr) {
    delete target_info_;
  }
  target_info_ = nullptr;
}
Proposal::Proposal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.Proposal)
}
Proposal::Proposal(const Proposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  target_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    target_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_target_id().empty()) {
    target_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_target_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::onos::config::v2::ObjectMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::onos::config::v2::ProposalStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_target_info()) {
    target_info_ = new ::onos::config::v2::TargetTypeVersion(*from.target_info_);
  } else {
    target_info_ = nullptr;
  }
  transaction_index_ = from.transaction_index_;
  clear_has_details();
  switch (from.details_case()) {
    case kChange: {
      _internal_mutable_change()->::onos::config::v2::ChangeProposal::MergeFrom(from._internal_change());
      break;
    }
    case kRollback: {
      _internal_mutable_rollback()->::onos::config::v2::RollbackProposal::MergeFrom(from._internal_rollback());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.Proposal)
}

inline void Proposal::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
target_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  target_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&meta_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&transaction_index_) -
    reinterpret_cast<char*>(&meta_)) + sizeof(transaction_index_));
clear_has_details();
}

Proposal::~Proposal() {
  // @@protoc_insertion_point(destructor:onos.config.v2.Proposal)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Proposal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete target_info_;
  if (has_details()) {
    clear_details();
  }
}

void Proposal::ArenaDtor(void* object) {
  Proposal* _this = reinterpret_cast< Proposal* >(object);
  (void)_this;
}
void Proposal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Proposal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Proposal::clear_details() {
// @@protoc_insertion_point(one_of_clear_start:onos.config.v2.Proposal)
  switch (details_case()) {
    case kChange: {
      if (GetArenaForAllocation() == nullptr) {
        delete details_.change_;
      }
      break;
    }
    case kRollback: {
      if (GetArenaForAllocation() == nullptr) {
        delete details_.rollback_;
      }
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAILS_NOT_SET;
}


void Proposal::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.Proposal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  target_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArenaForAllocation() == nullptr && target_info_ != nullptr) {
    delete target_info_;
  }
  target_info_ = nullptr;
  transaction_index_ = uint64_t{0u};
  clear_details();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Proposal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ObjectMeta meta = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string id = 2 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ProposalID"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.v2.Proposal.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string target_id = 3 [(.gogoproto.customname) = "TargetID", (.gogoproto.casttype) = "TargetID"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_target_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.v2.Proposal.target_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 transaction_index = 4 [(.gogoproto.casttype) = "Index"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          transaction_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ChangeProposal change = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_change(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.RollbackProposal rollback = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_rollback(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalStatus status = 7 [(.gogoproto.nullable) = false];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.TargetTypeVersion target_info = 8 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Proposal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.Proposal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ObjectMeta meta = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string id = 2 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ProposalID"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.v2.Proposal.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // string target_id = 3 [(.gogoproto.customname) = "TargetID", (.gogoproto.casttype) = "TargetID"];
  if (!this->_internal_target_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_id().data(), static_cast<int>(this->_internal_target_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.v2.Proposal.target_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_target_id(), target);
  }

  // uint64 transaction_index = 4 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_transaction_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_transaction_index(), target);
  }

  // .onos.config.v2.ChangeProposal change = 5;
  if (_internal_has_change()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::change(this), target, stream);
  }

  // .onos.config.v2.RollbackProposal rollback = 6;
  if (_internal_has_rollback()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::rollback(this), target, stream);
  }

  // .onos.config.v2.ProposalStatus status = 7 [(.gogoproto.nullable) = false];
  if (this->_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::status(this), target, stream);
  }

  // .onos.config.v2.TargetTypeVersion target_info = 8 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_target_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::target_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.Proposal)
  return target;
}

size_t Proposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.Proposal)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 2 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ProposalID"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string target_id = 3 [(.gogoproto.customname) = "TargetID", (.gogoproto.casttype) = "TargetID"];
  if (!this->_internal_target_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_id());
  }

  // .onos.config.v2.ObjectMeta meta = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .onos.config.v2.ProposalStatus status = 7 [(.gogoproto.nullable) = false];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .onos.config.v2.TargetTypeVersion target_info = 8 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_target_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_info_);
  }

  // uint64 transaction_index = 4 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_transaction_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_transaction_index());
  }

  switch (details_case()) {
    // .onos.config.v2.ChangeProposal change = 5;
    case kChange: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *details_.change_);
      break;
    }
    // .onos.config.v2.RollbackProposal rollback = 6;
    case kRollback: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *details_.rollback_);
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Proposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Proposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Proposal::GetClassData() const { return &_class_data_; }

void Proposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Proposal *>(to)->MergeFrom(
      static_cast<const Proposal &>(from));
}


void Proposal::MergeFrom(const Proposal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.Proposal)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_target_id().empty()) {
    _internal_set_target_id(from._internal_target_id());
  }
  if (from._internal_has_meta()) {
    _internal_mutable_meta()->::onos::config::v2::ObjectMeta::MergeFrom(from._internal_meta());
  }
  if (from._internal_has_status()) {
    _internal_mutable_status()->::onos::config::v2::ProposalStatus::MergeFrom(from._internal_status());
  }
  if (from._internal_has_target_info()) {
    _internal_mutable_target_info()->::onos::config::v2::TargetTypeVersion::MergeFrom(from._internal_target_info());
  }
  if (from._internal_transaction_index() != 0) {
    _internal_set_transaction_index(from._internal_transaction_index());
  }
  switch (from.details_case()) {
    case kChange: {
      _internal_mutable_change()->::onos::config::v2::ChangeProposal::MergeFrom(from._internal_change());
      break;
    }
    case kRollback: {
      _internal_mutable_rollback()->::onos::config::v2::RollbackProposal::MergeFrom(from._internal_rollback());
      break;
    }
    case DETAILS_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Proposal::CopyFrom(const Proposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.Proposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proposal::IsInitialized() const {
  return true;
}

void Proposal::InternalSwap(Proposal* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &target_id_, lhs_arena,
      &other->target_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Proposal, transaction_index_)
      + sizeof(Proposal::transaction_index_)
      - PROTOBUF_FIELD_OFFSET(Proposal, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
  swap(details_, other->details_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Proposal::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[0]);
}

// ===================================================================

ChangeProposal_ValuesEntry_DoNotUse::ChangeProposal_ValuesEntry_DoNotUse() {}
ChangeProposal_ValuesEntry_DoNotUse::ChangeProposal_ValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ChangeProposal_ValuesEntry_DoNotUse::MergeFrom(const ChangeProposal_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ChangeProposal_ValuesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[1]);
}

// ===================================================================

class ChangeProposal::_Internal {
 public:
};

void ChangeProposal::clear_values() {
  values_.Clear();
}
ChangeProposal::ChangeProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ChangeProposal)
}
ChangeProposal::ChangeProposal(const ChangeProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ChangeProposal)
}

inline void ChangeProposal::SharedCtor() {
}

ChangeProposal::~ChangeProposal() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ChangeProposal)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ChangeProposal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ChangeProposal::ArenaDtor(void* object) {
  ChangeProposal* _this = reinterpret_cast< ChangeProposal* >(object);
  (void)_this;
  _this->values_. ~MapField();
}
inline void ChangeProposal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ChangeProposal::ArenaDtor);
  }
}
void ChangeProposal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ChangeProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ChangeProposal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeProposal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .onos.config.v2.PathValue> values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&values_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeProposal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ChangeProposal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .onos.config.v2.PathValue> values = 1;
  if (!this->_internal_values().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "onos.config.v2.ChangeProposal.ValuesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_values().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
          it = this->_internal_values().begin();
          it != this->_internal_values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ChangeProposal_ValuesEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
          it = this->_internal_values().begin();
          it != this->_internal_values().end(); ++it) {
        target = ChangeProposal_ValuesEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ChangeProposal)
  return target;
}

size_t ChangeProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ChangeProposal)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .onos.config.v2.PathValue> values = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_values_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
      it = this->_internal_values().begin();
      it != this->_internal_values().end(); ++it) {
    total_size += ChangeProposal_ValuesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeProposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ChangeProposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeProposal::GetClassData() const { return &_class_data_; }

void ChangeProposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ChangeProposal *>(to)->MergeFrom(
      static_cast<const ChangeProposal &>(from));
}


void ChangeProposal::MergeFrom(const ChangeProposal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ChangeProposal)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeProposal::CopyFrom(const ChangeProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ChangeProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeProposal::IsInitialized() const {
  return true;
}

void ChangeProposal::InternalSwap(ChangeProposal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeProposal::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[2]);
}

// ===================================================================

class RollbackProposal::_Internal {
 public:
};

RollbackProposal::RollbackProposal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.RollbackProposal)
}
RollbackProposal::RollbackProposal(const RollbackProposal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rollback_index_ = from.rollback_index_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.RollbackProposal)
}

inline void RollbackProposal::SharedCtor() {
rollback_index_ = uint64_t{0u};
}

RollbackProposal::~RollbackProposal() {
  // @@protoc_insertion_point(destructor:onos.config.v2.RollbackProposal)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RollbackProposal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RollbackProposal::ArenaDtor(void* object) {
  RollbackProposal* _this = reinterpret_cast< RollbackProposal* >(object);
  (void)_this;
}
void RollbackProposal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RollbackProposal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RollbackProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.RollbackProposal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rollback_index_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RollbackProposal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 rollback_index = 1 [(.gogoproto.casttype) = "Index"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          rollback_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RollbackProposal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.RollbackProposal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 rollback_index = 1 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_rollback_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_rollback_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.RollbackProposal)
  return target;
}

size_t RollbackProposal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.RollbackProposal)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 rollback_index = 1 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_rollback_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_rollback_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RollbackProposal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RollbackProposal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RollbackProposal::GetClassData() const { return &_class_data_; }

void RollbackProposal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RollbackProposal *>(to)->MergeFrom(
      static_cast<const RollbackProposal &>(from));
}


void RollbackProposal::MergeFrom(const RollbackProposal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.RollbackProposal)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rollback_index() != 0) {
    _internal_set_rollback_index(from._internal_rollback_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackProposal::CopyFrom(const RollbackProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.RollbackProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackProposal::IsInitialized() const {
  return true;
}

void RollbackProposal::InternalSwap(RollbackProposal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(rollback_index_, other->rollback_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RollbackProposal::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[3]);
}

// ===================================================================

ProposalStatus_RollbackValuesEntry_DoNotUse::ProposalStatus_RollbackValuesEntry_DoNotUse() {}
ProposalStatus_RollbackValuesEntry_DoNotUse::ProposalStatus_RollbackValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ProposalStatus_RollbackValuesEntry_DoNotUse::MergeFrom(const ProposalStatus_RollbackValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ProposalStatus_RollbackValuesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[4]);
}

// ===================================================================

class ProposalStatus::_Internal {
 public:
  static const ::onos::config::v2::ProposalPhases& phases(const ProposalStatus* msg);
};

const ::onos::config::v2::ProposalPhases&
ProposalStatus::_Internal::phases(const ProposalStatus* msg) {
  return *msg->phases_;
}
void ProposalStatus::clear_rollback_values() {
  rollback_values_.Clear();
}
ProposalStatus::ProposalStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  rollback_values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalStatus)
}
ProposalStatus::ProposalStatus(const ProposalStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rollback_values_.MergeFrom(from.rollback_values_);
  if (from._internal_has_phases()) {
    phases_ = new ::onos::config::v2::ProposalPhases(*from.phases_);
  } else {
    phases_ = nullptr;
  }
  ::memcpy(&prev_index_, &from.prev_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&rollback_index_) -
    reinterpret_cast<char*>(&prev_index_)) + sizeof(rollback_index_));
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalStatus)
}

inline void ProposalStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&phases_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rollback_index_) -
    reinterpret_cast<char*>(&phases_)) + sizeof(rollback_index_));
}

ProposalStatus::~ProposalStatus() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete phases_;
}

void ProposalStatus::ArenaDtor(void* object) {
  ProposalStatus* _this = reinterpret_cast< ProposalStatus* >(object);
  (void)_this;
  _this->rollback_values_. ~MapField();
}
inline void ProposalStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &ProposalStatus::ArenaDtor);
  }
}
void ProposalStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rollback_values_.Clear();
  if (GetArenaForAllocation() == nullptr && phases_ != nullptr) {
    delete phases_;
  }
  phases_ = nullptr;
  ::memset(&prev_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rollback_index_) -
      reinterpret_cast<char*>(&prev_index_)) + sizeof(rollback_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ProposalPhases phases = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_phases(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 prev_index = 2 [(.gogoproto.casttype) = "Index"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          prev_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 next_index = 3 [(.gogoproto.casttype) = "Index"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          next_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 rollback_index = 4 [(.gogoproto.casttype) = "Index"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          rollback_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .onos.config.v2.PathValue> rollback_values = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&rollback_values_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhases phases = 1 [(.gogoproto.nullable) = false];
  if (this->_internal_has_phases()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::phases(this), target, stream);
  }

  // uint64 prev_index = 2 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_prev_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_prev_index(), target);
  }

  // uint64 next_index = 3 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_next_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_next_index(), target);
  }

  // uint64 rollback_index = 4 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_rollback_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_rollback_index(), target);
  }

  // map<string, .onos.config.v2.PathValue> rollback_values = 5;
  if (!this->_internal_rollback_values().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "onos.config.v2.ProposalStatus.RollbackValuesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_rollback_values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_rollback_values().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
          it = this->_internal_rollback_values().begin();
          it != this->_internal_rollback_values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ProposalStatus_RollbackValuesEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
          it = this->_internal_rollback_values().begin();
          it != this->_internal_rollback_values().end(); ++it) {
        target = ProposalStatus_RollbackValuesEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalStatus)
  return target;
}

size_t ProposalStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .onos.config.v2.PathValue> rollback_values = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_rollback_values_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
      it = this->_internal_rollback_values().begin();
      it != this->_internal_rollback_values().end(); ++it) {
    total_size += ProposalStatus_RollbackValuesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .onos.config.v2.ProposalPhases phases = 1 [(.gogoproto.nullable) = false];
  if (this->_internal_has_phases()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *phases_);
  }

  // uint64 prev_index = 2 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_prev_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_prev_index());
  }

  // uint64 next_index = 3 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_next_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_next_index());
  }

  // uint64 rollback_index = 4 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_rollback_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_rollback_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalStatus::GetClassData() const { return &_class_data_; }

void ProposalStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalStatus *>(to)->MergeFrom(
      static_cast<const ProposalStatus &>(from));
}


void ProposalStatus::MergeFrom(const ProposalStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  rollback_values_.MergeFrom(from.rollback_values_);
  if (from._internal_has_phases()) {
    _internal_mutable_phases()->::onos::config::v2::ProposalPhases::MergeFrom(from._internal_phases());
  }
  if (from._internal_prev_index() != 0) {
    _internal_set_prev_index(from._internal_prev_index());
  }
  if (from._internal_next_index() != 0) {
    _internal_set_next_index(from._internal_next_index());
  }
  if (from._internal_rollback_index() != 0) {
    _internal_set_rollback_index(from._internal_rollback_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalStatus::CopyFrom(const ProposalStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalStatus::IsInitialized() const {
  return true;
}

void ProposalStatus::InternalSwap(ProposalStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  rollback_values_.InternalSwap(&other->rollback_values_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalStatus, rollback_index_)
      + sizeof(ProposalStatus::rollback_index_)
      - PROTOBUF_FIELD_OFFSET(ProposalStatus, phases_)>(
          reinterpret_cast<char*>(&phases_),
          reinterpret_cast<char*>(&other->phases_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[5]);
}

// ===================================================================

class ProposalPhases::_Internal {
 public:
  static const ::onos::config::v2::ProposalInitializePhase& initialize(const ProposalPhases* msg);
  static const ::onos::config::v2::ProposalValidatePhase& validate(const ProposalPhases* msg);
  static const ::onos::config::v2::ProposalCommitPhase& commit(const ProposalPhases* msg);
  static const ::onos::config::v2::ProposalApplyPhase& apply(const ProposalPhases* msg);
  static const ::onos::config::v2::ProposalAbortPhase& abort(const ProposalPhases* msg);
};

const ::onos::config::v2::ProposalInitializePhase&
ProposalPhases::_Internal::initialize(const ProposalPhases* msg) {
  return *msg->initialize_;
}
const ::onos::config::v2::ProposalValidatePhase&
ProposalPhases::_Internal::validate(const ProposalPhases* msg) {
  return *msg->validate_;
}
const ::onos::config::v2::ProposalCommitPhase&
ProposalPhases::_Internal::commit(const ProposalPhases* msg) {
  return *msg->commit_;
}
const ::onos::config::v2::ProposalApplyPhase&
ProposalPhases::_Internal::apply(const ProposalPhases* msg) {
  return *msg->apply_;
}
const ::onos::config::v2::ProposalAbortPhase&
ProposalPhases::_Internal::abort(const ProposalPhases* msg) {
  return *msg->abort_;
}
ProposalPhases::ProposalPhases(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalPhases)
}
ProposalPhases::ProposalPhases(const ProposalPhases& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_initialize()) {
    initialize_ = new ::onos::config::v2::ProposalInitializePhase(*from.initialize_);
  } else {
    initialize_ = nullptr;
  }
  if (from._internal_has_validate()) {
    validate_ = new ::onos::config::v2::ProposalValidatePhase(*from.validate_);
  } else {
    validate_ = nullptr;
  }
  if (from._internal_has_commit()) {
    commit_ = new ::onos::config::v2::ProposalCommitPhase(*from.commit_);
  } else {
    commit_ = nullptr;
  }
  if (from._internal_has_apply()) {
    apply_ = new ::onos::config::v2::ProposalApplyPhase(*from.apply_);
  } else {
    apply_ = nullptr;
  }
  if (from._internal_has_abort()) {
    abort_ = new ::onos::config::v2::ProposalAbortPhase(*from.abort_);
  } else {
    abort_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalPhases)
}

inline void ProposalPhases::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&initialize_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&abort_) -
    reinterpret_cast<char*>(&initialize_)) + sizeof(abort_));
}

ProposalPhases::~ProposalPhases() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalPhases)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalPhases::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete initialize_;
  if (this != internal_default_instance()) delete validate_;
  if (this != internal_default_instance()) delete commit_;
  if (this != internal_default_instance()) delete apply_;
  if (this != internal_default_instance()) delete abort_;
}

void ProposalPhases::ArenaDtor(void* object) {
  ProposalPhases* _this = reinterpret_cast< ProposalPhases* >(object);
  (void)_this;
}
void ProposalPhases::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalPhases::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalPhases::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalPhases)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && initialize_ != nullptr) {
    delete initialize_;
  }
  initialize_ = nullptr;
  if (GetArenaForAllocation() == nullptr && validate_ != nullptr) {
    delete validate_;
  }
  validate_ = nullptr;
  if (GetArenaForAllocation() == nullptr && commit_ != nullptr) {
    delete commit_;
  }
  commit_ = nullptr;
  if (GetArenaForAllocation() == nullptr && apply_ != nullptr) {
    delete apply_;
  }
  apply_ = nullptr;
  if (GetArenaForAllocation() == nullptr && abort_ != nullptr) {
    delete abort_;
  }
  abort_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalPhases::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ProposalInitializePhase initialize = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_initialize(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalValidatePhase validate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_validate(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalCommitPhase commit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_commit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalApplyPhase apply = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_apply(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalAbortPhase abort = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_abort(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalPhases::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalPhases)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ProposalInitializePhase initialize = 1;
  if (this->_internal_has_initialize()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::initialize(this), target, stream);
  }

  // .onos.config.v2.ProposalValidatePhase validate = 2;
  if (this->_internal_has_validate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::validate(this), target, stream);
  }

  // .onos.config.v2.ProposalCommitPhase commit = 3;
  if (this->_internal_has_commit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::commit(this), target, stream);
  }

  // .onos.config.v2.ProposalApplyPhase apply = 4;
  if (this->_internal_has_apply()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::apply(this), target, stream);
  }

  // .onos.config.v2.ProposalAbortPhase abort = 5;
  if (this->_internal_has_abort()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::abort(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalPhases)
  return target;
}

size_t ProposalPhases::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalPhases)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.ProposalInitializePhase initialize = 1;
  if (this->_internal_has_initialize()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *initialize_);
  }

  // .onos.config.v2.ProposalValidatePhase validate = 2;
  if (this->_internal_has_validate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *validate_);
  }

  // .onos.config.v2.ProposalCommitPhase commit = 3;
  if (this->_internal_has_commit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *commit_);
  }

  // .onos.config.v2.ProposalApplyPhase apply = 4;
  if (this->_internal_has_apply()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *apply_);
  }

  // .onos.config.v2.ProposalAbortPhase abort = 5;
  if (this->_internal_has_abort()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abort_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalPhases::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalPhases::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalPhases::GetClassData() const { return &_class_data_; }

void ProposalPhases::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalPhases *>(to)->MergeFrom(
      static_cast<const ProposalPhases &>(from));
}


void ProposalPhases::MergeFrom(const ProposalPhases& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalPhases)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_initialize()) {
    _internal_mutable_initialize()->::onos::config::v2::ProposalInitializePhase::MergeFrom(from._internal_initialize());
  }
  if (from._internal_has_validate()) {
    _internal_mutable_validate()->::onos::config::v2::ProposalValidatePhase::MergeFrom(from._internal_validate());
  }
  if (from._internal_has_commit()) {
    _internal_mutable_commit()->::onos::config::v2::ProposalCommitPhase::MergeFrom(from._internal_commit());
  }
  if (from._internal_has_apply()) {
    _internal_mutable_apply()->::onos::config::v2::ProposalApplyPhase::MergeFrom(from._internal_apply());
  }
  if (from._internal_has_abort()) {
    _internal_mutable_abort()->::onos::config::v2::ProposalAbortPhase::MergeFrom(from._internal_abort());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalPhases::CopyFrom(const ProposalPhases& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalPhases)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalPhases::IsInitialized() const {
  return true;
}

void ProposalPhases::InternalSwap(ProposalPhases* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalPhases, abort_)
      + sizeof(ProposalPhases::abort_)
      - PROTOBUF_FIELD_OFFSET(ProposalPhases, initialize_)>(
          reinterpret_cast<char*>(&initialize_),
          reinterpret_cast<char*>(&other->initialize_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalPhases::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[6]);
}

// ===================================================================

class ProposalPhaseStatus::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& start(const ProposalPhaseStatus* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& end(const ProposalPhaseStatus* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
ProposalPhaseStatus::_Internal::start(const ProposalPhaseStatus* msg) {
  return *msg->start_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
ProposalPhaseStatus::_Internal::end(const ProposalPhaseStatus* msg) {
  return *msg->end_;
}
void ProposalPhaseStatus::clear_start() {
  if (GetArenaForAllocation() == nullptr && start_ != nullptr) {
    delete start_;
  }
  start_ = nullptr;
}
void ProposalPhaseStatus::clear_end() {
  if (GetArenaForAllocation() == nullptr && end_ != nullptr) {
    delete end_;
  }
  end_ = nullptr;
}
ProposalPhaseStatus::ProposalPhaseStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalPhaseStatus)
}
ProposalPhaseStatus::ProposalPhaseStatus(const ProposalPhaseStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_start()) {
    start_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.start_);
  } else {
    start_ = nullptr;
  }
  if (from._internal_has_end()) {
    end_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_);
  } else {
    end_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalPhaseStatus)
}

inline void ProposalPhaseStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&start_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&start_)) + sizeof(end_));
}

ProposalPhaseStatus::~ProposalPhaseStatus() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalPhaseStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalPhaseStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void ProposalPhaseStatus::ArenaDtor(void* object) {
  ProposalPhaseStatus* _this = reinterpret_cast< ProposalPhaseStatus* >(object);
  (void)_this;
}
void ProposalPhaseStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalPhaseStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalPhaseStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalPhaseStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && start_ != nullptr) {
    delete start_;
  }
  start_ = nullptr;
  if (GetArenaForAllocation() == nullptr && end_ != nullptr) {
    delete end_;
  }
  end_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalPhaseStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp start = 1 [(.gogoproto.stdtime) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp end = 2 [(.gogoproto.stdtime) = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_end(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalPhaseStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalPhaseStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1 [(.gogoproto.stdtime) = true];
  if (this->_internal_has_start()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::start(this), target, stream);
  }

  // .google.protobuf.Timestamp end = 2 [(.gogoproto.stdtime) = true];
  if (this->_internal_has_end()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::end(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalPhaseStatus)
  return target;
}

size_t ProposalPhaseStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalPhaseStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp start = 1 [(.gogoproto.stdtime) = true];
  if (this->_internal_has_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .google.protobuf.Timestamp end = 2 [(.gogoproto.stdtime) = true];
  if (this->_internal_has_end()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalPhaseStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalPhaseStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalPhaseStatus::GetClassData() const { return &_class_data_; }

void ProposalPhaseStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalPhaseStatus *>(to)->MergeFrom(
      static_cast<const ProposalPhaseStatus &>(from));
}


void ProposalPhaseStatus::MergeFrom(const ProposalPhaseStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalPhaseStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_start()) {
    _internal_mutable_start()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_start());
  }
  if (from._internal_has_end()) {
    _internal_mutable_end()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalPhaseStatus::CopyFrom(const ProposalPhaseStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalPhaseStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalPhaseStatus::IsInitialized() const {
  return true;
}

void ProposalPhaseStatus::InternalSwap(ProposalPhaseStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalPhaseStatus, end_)
      + sizeof(ProposalPhaseStatus::end_)
      - PROTOBUF_FIELD_OFFSET(ProposalPhaseStatus, start_)>(
          reinterpret_cast<char*>(&start_),
          reinterpret_cast<char*>(&other->start_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalPhaseStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[7]);
}

// ===================================================================

class ProposalInitializePhase::_Internal {
 public:
  static const ::onos::config::v2::ProposalPhaseStatus& status(const ProposalInitializePhase* msg);
};

const ::onos::config::v2::ProposalPhaseStatus&
ProposalInitializePhase::_Internal::status(const ProposalInitializePhase* msg) {
  return *msg->status_;
}
ProposalInitializePhase::ProposalInitializePhase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalInitializePhase)
}
ProposalInitializePhase::ProposalInitializePhase(const ProposalInitializePhase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::onos::config::v2::ProposalPhaseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalInitializePhase)
}

inline void ProposalInitializePhase::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&status_)) + sizeof(state_));
}

ProposalInitializePhase::~ProposalInitializePhase() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalInitializePhase)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalInitializePhase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ProposalInitializePhase::ArenaDtor(void* object) {
  ProposalInitializePhase* _this = reinterpret_cast< ProposalInitializePhase* >(object);
  (void)_this;
}
void ProposalInitializePhase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalInitializePhase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalInitializePhase::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalInitializePhase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalInitializePhase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalInitializePhase.State state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::onos::config::v2::ProposalInitializePhase_State>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalInitializePhase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalInitializePhase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .onos.config.v2.ProposalInitializePhase.State state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalInitializePhase)
  return target;
}

size_t ProposalInitializePhase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalInitializePhase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .onos.config.v2.ProposalInitializePhase.State state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalInitializePhase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalInitializePhase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalInitializePhase::GetClassData() const { return &_class_data_; }

void ProposalInitializePhase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalInitializePhase *>(to)->MergeFrom(
      static_cast<const ProposalInitializePhase &>(from));
}


void ProposalInitializePhase::MergeFrom(const ProposalInitializePhase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalInitializePhase)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_status()) {
    _internal_mutable_status()->::onos::config::v2::ProposalPhaseStatus::MergeFrom(from._internal_status());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalInitializePhase::CopyFrom(const ProposalInitializePhase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalInitializePhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalInitializePhase::IsInitialized() const {
  return true;
}

void ProposalInitializePhase::InternalSwap(ProposalInitializePhase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalInitializePhase, state_)
      + sizeof(ProposalInitializePhase::state_)
      - PROTOBUF_FIELD_OFFSET(ProposalInitializePhase, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalInitializePhase::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[8]);
}

// ===================================================================

class ProposalValidatePhase::_Internal {
 public:
  static const ::onos::config::v2::ProposalPhaseStatus& status(const ProposalValidatePhase* msg);
  static const ::onos::config::v2::Failure& failure(const ProposalValidatePhase* msg);
};

const ::onos::config::v2::ProposalPhaseStatus&
ProposalValidatePhase::_Internal::status(const ProposalValidatePhase* msg) {
  return *msg->status_;
}
const ::onos::config::v2::Failure&
ProposalValidatePhase::_Internal::failure(const ProposalValidatePhase* msg) {
  return *msg->failure_;
}
void ProposalValidatePhase::clear_failure() {
  if (GetArenaForAllocation() == nullptr && failure_ != nullptr) {
    delete failure_;
  }
  failure_ = nullptr;
}
ProposalValidatePhase::ProposalValidatePhase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalValidatePhase)
}
ProposalValidatePhase::ProposalValidatePhase(const ProposalValidatePhase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::onos::config::v2::ProposalPhaseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_failure()) {
    failure_ = new ::onos::config::v2::Failure(*from.failure_);
  } else {
    failure_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalValidatePhase)
}

inline void ProposalValidatePhase::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&status_)) + sizeof(state_));
}

ProposalValidatePhase::~ProposalValidatePhase() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalValidatePhase)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalValidatePhase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete failure_;
}

void ProposalValidatePhase::ArenaDtor(void* object) {
  ProposalValidatePhase* _this = reinterpret_cast< ProposalValidatePhase* >(object);
  (void)_this;
}
void ProposalValidatePhase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalValidatePhase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalValidatePhase::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalValidatePhase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArenaForAllocation() == nullptr && failure_ != nullptr) {
    delete failure_;
  }
  failure_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalValidatePhase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalValidatePhase.State state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::onos::config::v2::ProposalValidatePhase_State>(val));
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.Failure failure = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_failure(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalValidatePhase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalValidatePhase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .onos.config.v2.ProposalValidatePhase.State state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_state(), target);
  }

  // .onos.config.v2.Failure failure = 3;
  if (this->_internal_has_failure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::failure(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalValidatePhase)
  return target;
}

size_t ProposalValidatePhase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalValidatePhase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .onos.config.v2.Failure failure = 3;
  if (this->_internal_has_failure()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  // .onos.config.v2.ProposalValidatePhase.State state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalValidatePhase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalValidatePhase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalValidatePhase::GetClassData() const { return &_class_data_; }

void ProposalValidatePhase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalValidatePhase *>(to)->MergeFrom(
      static_cast<const ProposalValidatePhase &>(from));
}


void ProposalValidatePhase::MergeFrom(const ProposalValidatePhase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalValidatePhase)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_status()) {
    _internal_mutable_status()->::onos::config::v2::ProposalPhaseStatus::MergeFrom(from._internal_status());
  }
  if (from._internal_has_failure()) {
    _internal_mutable_failure()->::onos::config::v2::Failure::MergeFrom(from._internal_failure());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalValidatePhase::CopyFrom(const ProposalValidatePhase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalValidatePhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalValidatePhase::IsInitialized() const {
  return true;
}

void ProposalValidatePhase::InternalSwap(ProposalValidatePhase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalValidatePhase, state_)
      + sizeof(ProposalValidatePhase::state_)
      - PROTOBUF_FIELD_OFFSET(ProposalValidatePhase, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalValidatePhase::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[9]);
}

// ===================================================================

class ProposalCommitPhase::_Internal {
 public:
  static const ::onos::config::v2::ProposalPhaseStatus& status(const ProposalCommitPhase* msg);
};

const ::onos::config::v2::ProposalPhaseStatus&
ProposalCommitPhase::_Internal::status(const ProposalCommitPhase* msg) {
  return *msg->status_;
}
ProposalCommitPhase::ProposalCommitPhase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalCommitPhase)
}
ProposalCommitPhase::ProposalCommitPhase(const ProposalCommitPhase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::onos::config::v2::ProposalPhaseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalCommitPhase)
}

inline void ProposalCommitPhase::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&status_)) + sizeof(state_));
}

ProposalCommitPhase::~ProposalCommitPhase() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalCommitPhase)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalCommitPhase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ProposalCommitPhase::ArenaDtor(void* object) {
  ProposalCommitPhase* _this = reinterpret_cast< ProposalCommitPhase* >(object);
  (void)_this;
}
void ProposalCommitPhase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalCommitPhase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalCommitPhase::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalCommitPhase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalCommitPhase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalCommitPhase.State state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::onos::config::v2::ProposalCommitPhase_State>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalCommitPhase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalCommitPhase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .onos.config.v2.ProposalCommitPhase.State state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalCommitPhase)
  return target;
}

size_t ProposalCommitPhase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalCommitPhase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .onos.config.v2.ProposalCommitPhase.State state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalCommitPhase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalCommitPhase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalCommitPhase::GetClassData() const { return &_class_data_; }

void ProposalCommitPhase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalCommitPhase *>(to)->MergeFrom(
      static_cast<const ProposalCommitPhase &>(from));
}


void ProposalCommitPhase::MergeFrom(const ProposalCommitPhase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalCommitPhase)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_status()) {
    _internal_mutable_status()->::onos::config::v2::ProposalPhaseStatus::MergeFrom(from._internal_status());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalCommitPhase::CopyFrom(const ProposalCommitPhase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalCommitPhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalCommitPhase::IsInitialized() const {
  return true;
}

void ProposalCommitPhase::InternalSwap(ProposalCommitPhase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalCommitPhase, state_)
      + sizeof(ProposalCommitPhase::state_)
      - PROTOBUF_FIELD_OFFSET(ProposalCommitPhase, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalCommitPhase::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[10]);
}

// ===================================================================

class ProposalApplyPhase::_Internal {
 public:
  static const ::onos::config::v2::ProposalPhaseStatus& status(const ProposalApplyPhase* msg);
  static const ::onos::config::v2::Failure& failure(const ProposalApplyPhase* msg);
};

const ::onos::config::v2::ProposalPhaseStatus&
ProposalApplyPhase::_Internal::status(const ProposalApplyPhase* msg) {
  return *msg->status_;
}
const ::onos::config::v2::Failure&
ProposalApplyPhase::_Internal::failure(const ProposalApplyPhase* msg) {
  return *msg->failure_;
}
void ProposalApplyPhase::clear_failure() {
  if (GetArenaForAllocation() == nullptr && failure_ != nullptr) {
    delete failure_;
  }
  failure_ = nullptr;
}
ProposalApplyPhase::ProposalApplyPhase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalApplyPhase)
}
ProposalApplyPhase::ProposalApplyPhase(const ProposalApplyPhase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::onos::config::v2::ProposalPhaseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_failure()) {
    failure_ = new ::onos::config::v2::Failure(*from.failure_);
  } else {
    failure_ = nullptr;
  }
  ::memcpy(&term_, &from.term_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&term_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalApplyPhase)
}

inline void ProposalApplyPhase::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&status_)) + sizeof(state_));
}

ProposalApplyPhase::~ProposalApplyPhase() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalApplyPhase)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalApplyPhase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete failure_;
}

void ProposalApplyPhase::ArenaDtor(void* object) {
  ProposalApplyPhase* _this = reinterpret_cast< ProposalApplyPhase* >(object);
  (void)_this;
}
void ProposalApplyPhase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalApplyPhase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalApplyPhase::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalApplyPhase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArenaForAllocation() == nullptr && failure_ != nullptr) {
    delete failure_;
  }
  failure_ = nullptr;
  ::memset(&term_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&term_)) + sizeof(state_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalApplyPhase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalApplyPhase.State state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::onos::config::v2::ProposalApplyPhase_State>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 term = 3 [(.gogoproto.casttype) = "MastershipTerm"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          term_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.Failure failure = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_failure(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalApplyPhase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalApplyPhase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .onos.config.v2.ProposalApplyPhase.State state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_state(), target);
  }

  // uint64 term = 3 [(.gogoproto.casttype) = "MastershipTerm"];
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_term(), target);
  }

  // .onos.config.v2.Failure failure = 4;
  if (this->_internal_has_failure()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::failure(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalApplyPhase)
  return target;
}

size_t ProposalApplyPhase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalApplyPhase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .onos.config.v2.Failure failure = 4;
  if (this->_internal_has_failure()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *failure_);
  }

  // uint64 term = 3 [(.gogoproto.casttype) = "MastershipTerm"];
  if (this->_internal_term() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_term());
  }

  // .onos.config.v2.ProposalApplyPhase.State state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalApplyPhase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalApplyPhase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalApplyPhase::GetClassData() const { return &_class_data_; }

void ProposalApplyPhase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalApplyPhase *>(to)->MergeFrom(
      static_cast<const ProposalApplyPhase &>(from));
}


void ProposalApplyPhase::MergeFrom(const ProposalApplyPhase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalApplyPhase)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_status()) {
    _internal_mutable_status()->::onos::config::v2::ProposalPhaseStatus::MergeFrom(from._internal_status());
  }
  if (from._internal_has_failure()) {
    _internal_mutable_failure()->::onos::config::v2::Failure::MergeFrom(from._internal_failure());
  }
  if (from._internal_term() != 0) {
    _internal_set_term(from._internal_term());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalApplyPhase::CopyFrom(const ProposalApplyPhase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalApplyPhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalApplyPhase::IsInitialized() const {
  return true;
}

void ProposalApplyPhase::InternalSwap(ProposalApplyPhase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalApplyPhase, state_)
      + sizeof(ProposalApplyPhase::state_)
      - PROTOBUF_FIELD_OFFSET(ProposalApplyPhase, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalApplyPhase::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[11]);
}

// ===================================================================

class ProposalAbortPhase::_Internal {
 public:
  static const ::onos::config::v2::ProposalPhaseStatus& status(const ProposalAbortPhase* msg);
};

const ::onos::config::v2::ProposalPhaseStatus&
ProposalAbortPhase::_Internal::status(const ProposalAbortPhase* msg) {
  return *msg->status_;
}
ProposalAbortPhase::ProposalAbortPhase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalAbortPhase)
}
ProposalAbortPhase::ProposalAbortPhase(const ProposalAbortPhase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_status()) {
    status_ = new ::onos::config::v2::ProposalPhaseStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalAbortPhase)
}

inline void ProposalAbortPhase::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&status_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&status_)) + sizeof(state_));
}

ProposalAbortPhase::~ProposalAbortPhase() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalAbortPhase)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalAbortPhase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete status_;
}

void ProposalAbortPhase::ArenaDtor(void* object) {
  ProposalAbortPhase* _this = reinterpret_cast< ProposalAbortPhase* >(object);
  (void)_this;
}
void ProposalAbortPhase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalAbortPhase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalAbortPhase::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalAbortPhase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalAbortPhase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposalAbortPhase.State state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::onos::config::v2::ProposalAbortPhase_State>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalAbortPhase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalAbortPhase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::status(this), target, stream);
  }

  // .onos.config.v2.ProposalAbortPhase.State state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalAbortPhase)
  return target;
}

size_t ProposalAbortPhase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalAbortPhase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.ProposalPhaseStatus status = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .onos.config.v2.ProposalAbortPhase.State state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalAbortPhase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalAbortPhase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalAbortPhase::GetClassData() const { return &_class_data_; }

void ProposalAbortPhase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalAbortPhase *>(to)->MergeFrom(
      static_cast<const ProposalAbortPhase &>(from));
}


void ProposalAbortPhase::MergeFrom(const ProposalAbortPhase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalAbortPhase)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_status()) {
    _internal_mutable_status()->::onos::config::v2::ProposalPhaseStatus::MergeFrom(from._internal_status());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalAbortPhase::CopyFrom(const ProposalAbortPhase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalAbortPhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalAbortPhase::IsInitialized() const {
  return true;
}

void ProposalAbortPhase::InternalSwap(ProposalAbortPhase* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalAbortPhase, state_)
      + sizeof(ProposalAbortPhase::state_)
      - PROTOBUF_FIELD_OFFSET(ProposalAbortPhase, status_)>(
          reinterpret_cast<char*>(&status_),
          reinterpret_cast<char*>(&other->status_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalAbortPhase::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[12]);
}

// ===================================================================

class ProposalEvent::_Internal {
 public:
  static const ::onos::config::v2::Proposal& proposal(const ProposalEvent* msg);
};

const ::onos::config::v2::Proposal&
ProposalEvent::_Internal::proposal(const ProposalEvent* msg) {
  return *msg->proposal_;
}
ProposalEvent::ProposalEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposalEvent)
}
ProposalEvent::ProposalEvent(const ProposalEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_proposal()) {
    proposal_ = new ::onos::config::v2::Proposal(*from.proposal_);
  } else {
    proposal_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposalEvent)
}

inline void ProposalEvent::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proposal_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&proposal_)) + sizeof(type_));
}

ProposalEvent::~ProposalEvent() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposalEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposalEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete proposal_;
}

void ProposalEvent::ArenaDtor(void* object) {
  ProposalEvent* _this = reinterpret_cast< ProposalEvent* >(object);
  (void)_this;
}
void ProposalEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposalEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposalEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposalEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && proposal_ != nullptr) {
    delete proposal_;
  }
  proposal_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposalEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ProposalEvent.EventType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::config::v2::ProposalEvent_EventType>(val));
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.Proposal proposal = 2 [(.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proposal(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposalEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposalEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ProposalEvent.EventType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .onos.config.v2.Proposal proposal = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_proposal()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proposal(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposalEvent)
  return target;
}

size_t ProposalEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposalEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.Proposal proposal = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_proposal()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proposal_);
  }

  // .onos.config.v2.ProposalEvent.EventType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposalEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposalEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposalEvent::GetClassData() const { return &_class_data_; }

void ProposalEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposalEvent *>(to)->MergeFrom(
      static_cast<const ProposalEvent &>(from));
}


void ProposalEvent::MergeFrom(const ProposalEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposalEvent)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_proposal()) {
    _internal_mutable_proposal()->::onos::config::v2::Proposal::MergeFrom(from._internal_proposal());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposalEvent::CopyFrom(const ProposalEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposalEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposalEvent::IsInitialized() const {
  return true;
}

void ProposalEvent::InternalSwap(ProposalEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProposalEvent, type_)
      + sizeof(ProposalEvent::type_)
      - PROTOBUF_FIELD_OFFSET(ProposalEvent, proposal_)>(
          reinterpret_cast<char*>(&proposal_),
          reinterpret_cast<char*>(&other->proposal_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposalEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fproposal_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fproposal_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace config
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::config::v2::Proposal* Arena::CreateMaybeMessage< ::onos::config::v2::Proposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::Proposal >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ChangeProposal_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::onos::config::v2::ChangeProposal_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ChangeProposal_ValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ChangeProposal* Arena::CreateMaybeMessage< ::onos::config::v2::ChangeProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ChangeProposal >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::RollbackProposal* Arena::CreateMaybeMessage< ::onos::config::v2::RollbackProposal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::RollbackProposal >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalStatus_RollbackValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalStatus_RollbackValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalStatus_RollbackValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalStatus* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalPhases* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalPhases >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalPhases >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalPhaseStatus* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalPhaseStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalPhaseStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalInitializePhase* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalInitializePhase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalInitializePhase >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalValidatePhase* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalValidatePhase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalValidatePhase >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalCommitPhase* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalCommitPhase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalCommitPhase >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalApplyPhase* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalApplyPhase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalApplyPhase >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalAbortPhase* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalAbortPhase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalAbortPhase >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposalEvent* Arena::CreateMaybeMessage< ::onos::config::v2::ProposalEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposalEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
