// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/config/v2/value.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_onos_2fconfig_2fv2_2fvalue_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_onos_2fconfig_2fv2_2fvalue_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_onos_2fconfig_2fv2_2fvalue_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_onos_2fconfig_2fv2_2fvalue_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fconfig_2fv2_2fvalue_2eproto;
namespace onos {
namespace config {
namespace v2 {
class PathValue;
struct PathValueDefaultTypeInternal;
extern PathValueDefaultTypeInternal _PathValue_default_instance_;
class PathValues;
struct PathValuesDefaultTypeInternal;
extern PathValuesDefaultTypeInternal _PathValues_default_instance_;
class PathValues_ValuesEntry_DoNotUse;
struct PathValues_ValuesEntry_DoNotUseDefaultTypeInternal;
extern PathValues_ValuesEntry_DoNotUseDefaultTypeInternal _PathValues_ValuesEntry_DoNotUse_default_instance_;
class TypedValue;
struct TypedValueDefaultTypeInternal;
extern TypedValueDefaultTypeInternal _TypedValue_default_instance_;
}  // namespace v2
}  // namespace config
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> ::onos::config::v2::PathValue* Arena::CreateMaybeMessage<::onos::config::v2::PathValue>(Arena*);
template<> ::onos::config::v2::PathValues* Arena::CreateMaybeMessage<::onos::config::v2::PathValues>(Arena*);
template<> ::onos::config::v2::PathValues_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage<::onos::config::v2::PathValues_ValuesEntry_DoNotUse>(Arena*);
template<> ::onos::config::v2::TypedValue* Arena::CreateMaybeMessage<::onos::config::v2::TypedValue>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace onos {
namespace config {
namespace v2 {

enum ValueType : int {
  EMPTY = 0,
  STRING = 1,
  INT = 2,
  UINT = 3,
  BOOL = 4,
  DECIMAL = 5,
  FLOAT = 6,
  BYTES = 7,
  LEAFLIST_STRING = 8,
  LEAFLIST_INT = 9,
  LEAFLIST_UINT = 10,
  LEAFLIST_BOOL = 11,
  LEAFLIST_DECIMAL = 12,
  LEAFLIST_FLOAT = 13,
  LEAFLIST_BYTES = 14,
  ValueType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  ValueType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool ValueType_IsValid(int value);
constexpr ValueType ValueType_MIN = EMPTY;
constexpr ValueType ValueType_MAX = LEAFLIST_BYTES;
constexpr int ValueType_ARRAYSIZE = ValueType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ValueType_descriptor();
template<typename T>
inline const std::string& ValueType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ValueType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ValueType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ValueType_descriptor(), enum_t_value);
}
inline bool ValueType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ValueType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ValueType>(
    ValueType_descriptor(), name, value);
}
// ===================================================================

class TypedValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.config.v2.TypedValue) */ {
 public:
  inline TypedValue() : TypedValue(nullptr) {}
  ~TypedValue() override;
  explicit constexpr TypedValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TypedValue(const TypedValue& from);
  TypedValue(TypedValue&& from) noexcept
    : TypedValue() {
    *this = ::std::move(from);
  }

  inline TypedValue& operator=(const TypedValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline TypedValue& operator=(TypedValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TypedValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const TypedValue* internal_default_instance() {
    return reinterpret_cast<const TypedValue*>(
               &_TypedValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TypedValue& a, TypedValue& b) {
    a.Swap(&b);
  }
  inline void Swap(TypedValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TypedValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TypedValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TypedValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TypedValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const TypedValue& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TypedValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.config.v2.TypedValue";
  }
  protected:
  explicit TypedValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeOptsFieldNumber = 3,
    kBytesFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // repeated int32 type_opts = 3 [json_name = "TypeOpts", (.gogoproto.jsontag) = "TypeOpts,omitempty"];
  int type_opts_size() const;
  private:
  int _internal_type_opts_size() const;
  public:
  void clear_type_opts();
  private:
  int32_t _internal_type_opts(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_type_opts() const;
  void _internal_add_type_opts(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_type_opts();
  public:
  int32_t type_opts(int index) const;
  void set_type_opts(int index, int32_t value);
  void add_type_opts(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      type_opts() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_type_opts();

  // bytes bytes = 1 [json_name = "Bytes", (.gogoproto.jsontag) = "Bytes,omitempty"];
  void clear_bytes();
  const std::string& bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_bytes();
  PROTOBUF_NODISCARD std::string* release_bytes();
  void set_allocated_bytes(std::string* bytes);
  private:
  const std::string& _internal_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bytes(const std::string& value);
  std::string* _internal_mutable_bytes();
  public:

  // .onos.config.v2.ValueType type = 2 [json_name = "Type", (.gogoproto.jsontag) = "Type,omitempty"];
  void clear_type();
  ::onos::config::v2::ValueType type() const;
  void set_type(::onos::config::v2::ValueType value);
  private:
  ::onos::config::v2::ValueType _internal_type() const;
  void _internal_set_type(::onos::config::v2::ValueType value);
  public:

  // @@protoc_insertion_point(class_scope:onos.config.v2.TypedValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > type_opts_;
  mutable std::atomic<int> _type_opts_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytes_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fconfig_2fv2_2fvalue_2eproto;
};
// -------------------------------------------------------------------

class PathValues_ValuesEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<PathValues_ValuesEntry_DoNotUse, 
    std::string, ::onos::config::v2::PathValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<PathValues_ValuesEntry_DoNotUse, 
    std::string, ::onos::config::v2::PathValue,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  PathValues_ValuesEntry_DoNotUse();
  explicit constexpr PathValues_ValuesEntry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit PathValues_ValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const PathValues_ValuesEntry_DoNotUse& other);
  static const PathValues_ValuesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PathValues_ValuesEntry_DoNotUse*>(&_PathValues_ValuesEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "onos.config.v2.PathValues.ValuesEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class PathValues final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.config.v2.PathValues) */ {
 public:
  inline PathValues() : PathValues(nullptr) {}
  ~PathValues() override;
  explicit constexpr PathValues(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PathValues(const PathValues& from);
  PathValues(PathValues&& from) noexcept
    : PathValues() {
    *this = ::std::move(from);
  }

  inline PathValues& operator=(const PathValues& from) {
    CopyFrom(from);
    return *this;
  }
  inline PathValues& operator=(PathValues&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PathValues& default_instance() {
    return *internal_default_instance();
  }
  static inline const PathValues* internal_default_instance() {
    return reinterpret_cast<const PathValues*>(
               &_PathValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PathValues& a, PathValues& b) {
    a.Swap(&b);
  }
  inline void Swap(PathValues* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PathValues* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PathValues* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PathValues>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PathValues& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PathValues& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PathValues* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.config.v2.PathValues";
  }
  protected:
  explicit PathValues(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 4,
  };
  // map<string, .onos.config.v2.PathValue> values = 4;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >&
      _internal_values() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >*
      _internal_mutable_values();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >&
      values() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:onos.config.v2.PathValues)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      PathValues_ValuesEntry_DoNotUse,
      std::string, ::onos::config::v2::PathValue,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> values_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fconfig_2fv2_2fvalue_2eproto;
};
// -------------------------------------------------------------------

class PathValue final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.config.v2.PathValue) */ {
 public:
  inline PathValue() : PathValue(nullptr) {}
  ~PathValue() override;
  explicit constexpr PathValue(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PathValue(const PathValue& from);
  PathValue(PathValue&& from) noexcept
    : PathValue() {
    *this = ::std::move(from);
  }

  inline PathValue& operator=(const PathValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline PathValue& operator=(PathValue&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PathValue& default_instance() {
    return *internal_default_instance();
  }
  static inline const PathValue* internal_default_instance() {
    return reinterpret_cast<const PathValue*>(
               &_PathValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PathValue& a, PathValue& b) {
    a.Swap(&b);
  }
  inline void Swap(PathValue* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PathValue* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PathValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PathValue>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PathValue& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PathValue& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PathValue* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.config.v2.PathValue";
  }
  protected:
  explicit PathValue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kValueFieldNumber = 2,
    kDeletedFieldNumber = 3,
  };
  // string path = 1 [json_name = "Path", (.gogoproto.jsontag) = "Path,omitempty"];
  void clear_path();
  const std::string& path() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_path(ArgT0&& arg0, ArgT... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // .onos.config.v2.TypedValue value = 2 [json_name = "Value", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "Value,omitempty"];
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::onos::config::v2::TypedValue& value() const;
  PROTOBUF_NODISCARD ::onos::config::v2::TypedValue* release_value();
  ::onos::config::v2::TypedValue* mutable_value();
  void set_allocated_value(::onos::config::v2::TypedValue* value);
  private:
  const ::onos::config::v2::TypedValue& _internal_value() const;
  ::onos::config::v2::TypedValue* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::onos::config::v2::TypedValue* value);
  ::onos::config::v2::TypedValue* unsafe_arena_release_value();

  // bool deleted = 3 [(.gogoproto.jsontag) = "Deleted,omitempty"];
  void clear_deleted();
  bool deleted() const;
  void set_deleted(bool value);
  private:
  bool _internal_deleted() const;
  void _internal_set_deleted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:onos.config.v2.PathValue)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  ::onos::config::v2::TypedValue* value_;
  bool deleted_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fconfig_2fv2_2fvalue_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TypedValue

// bytes bytes = 1 [json_name = "Bytes", (.gogoproto.jsontag) = "Bytes,omitempty"];
inline void TypedValue::clear_bytes() {
  bytes_.ClearToEmpty();
}
inline const std::string& TypedValue::bytes() const {
  // @@protoc_insertion_point(field_get:onos.config.v2.TypedValue.bytes)
  return _internal_bytes();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TypedValue::set_bytes(ArgT0&& arg0, ArgT... args) {
 
 bytes_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.config.v2.TypedValue.bytes)
}
inline std::string* TypedValue::mutable_bytes() {
  std::string* _s = _internal_mutable_bytes();
  // @@protoc_insertion_point(field_mutable:onos.config.v2.TypedValue.bytes)
  return _s;
}
inline const std::string& TypedValue::_internal_bytes() const {
  return bytes_.Get();
}
inline void TypedValue::_internal_set_bytes(const std::string& value) {
  
  bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* TypedValue::_internal_mutable_bytes() {
  
  return bytes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* TypedValue::release_bytes() {
  // @@protoc_insertion_point(field_release:onos.config.v2.TypedValue.bytes)
  return bytes_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void TypedValue::set_allocated_bytes(std::string* bytes) {
  if (bytes != nullptr) {
    
  } else {
    
  }
  bytes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bytes,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (bytes_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    bytes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.config.v2.TypedValue.bytes)
}

// .onos.config.v2.ValueType type = 2 [json_name = "Type", (.gogoproto.jsontag) = "Type,omitempty"];
inline void TypedValue::clear_type() {
  type_ = 0;
}
inline ::onos::config::v2::ValueType TypedValue::_internal_type() const {
  return static_cast< ::onos::config::v2::ValueType >(type_);
}
inline ::onos::config::v2::ValueType TypedValue::type() const {
  // @@protoc_insertion_point(field_get:onos.config.v2.TypedValue.type)
  return _internal_type();
}
inline void TypedValue::_internal_set_type(::onos::config::v2::ValueType value) {
  
  type_ = value;
}
inline void TypedValue::set_type(::onos::config::v2::ValueType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:onos.config.v2.TypedValue.type)
}

// repeated int32 type_opts = 3 [json_name = "TypeOpts", (.gogoproto.jsontag) = "TypeOpts,omitempty"];
inline int TypedValue::_internal_type_opts_size() const {
  return type_opts_.size();
}
inline int TypedValue::type_opts_size() const {
  return _internal_type_opts_size();
}
inline void TypedValue::clear_type_opts() {
  type_opts_.Clear();
}
inline int32_t TypedValue::_internal_type_opts(int index) const {
  return type_opts_.Get(index);
}
inline int32_t TypedValue::type_opts(int index) const {
  // @@protoc_insertion_point(field_get:onos.config.v2.TypedValue.type_opts)
  return _internal_type_opts(index);
}
inline void TypedValue::set_type_opts(int index, int32_t value) {
  type_opts_.Set(index, value);
  // @@protoc_insertion_point(field_set:onos.config.v2.TypedValue.type_opts)
}
inline void TypedValue::_internal_add_type_opts(int32_t value) {
  type_opts_.Add(value);
}
inline void TypedValue::add_type_opts(int32_t value) {
  _internal_add_type_opts(value);
  // @@protoc_insertion_point(field_add:onos.config.v2.TypedValue.type_opts)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TypedValue::_internal_type_opts() const {
  return type_opts_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TypedValue::type_opts() const {
  // @@protoc_insertion_point(field_list:onos.config.v2.TypedValue.type_opts)
  return _internal_type_opts();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TypedValue::_internal_mutable_type_opts() {
  return &type_opts_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TypedValue::mutable_type_opts() {
  // @@protoc_insertion_point(field_mutable_list:onos.config.v2.TypedValue.type_opts)
  return _internal_mutable_type_opts();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PathValues

// map<string, .onos.config.v2.PathValue> values = 4;
inline int PathValues::_internal_values_size() const {
  return values_.size();
}
inline int PathValues::values_size() const {
  return _internal_values_size();
}
inline void PathValues::clear_values() {
  values_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >&
PathValues::_internal_values() const {
  return values_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >&
PathValues::values() const {
  // @@protoc_insertion_point(field_map:onos.config.v2.PathValues.values)
  return _internal_values();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >*
PathValues::_internal_mutable_values() {
  return values_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >*
PathValues::mutable_values() {
  // @@protoc_insertion_point(field_mutable_map:onos.config.v2.PathValues.values)
  return _internal_mutable_values();
}

// -------------------------------------------------------------------

// PathValue

// string path = 1 [json_name = "Path", (.gogoproto.jsontag) = "Path,omitempty"];
inline void PathValue::clear_path() {
  path_.ClearToEmpty();
}
inline const std::string& PathValue::path() const {
  // @@protoc_insertion_point(field_get:onos.config.v2.PathValue.path)
  return _internal_path();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PathValue::set_path(ArgT0&& arg0, ArgT... args) {
 
 path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.config.v2.PathValue.path)
}
inline std::string* PathValue::mutable_path() {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:onos.config.v2.PathValue.path)
  return _s;
}
inline const std::string& PathValue::_internal_path() const {
  return path_.Get();
}
inline void PathValue::_internal_set_path(const std::string& value) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PathValue::_internal_mutable_path() {
  
  return path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PathValue::release_path() {
  // @@protoc_insertion_point(field_release:onos.config.v2.PathValue.path)
  return path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PathValue::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (path_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.config.v2.PathValue.path)
}

// .onos.config.v2.TypedValue value = 2 [json_name = "Value", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "Value,omitempty"];
inline bool PathValue::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool PathValue::has_value() const {
  return _internal_has_value();
}
inline void PathValue::clear_value() {
  if (GetArenaForAllocation() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::onos::config::v2::TypedValue& PathValue::_internal_value() const {
  const ::onos::config::v2::TypedValue* p = value_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::config::v2::TypedValue&>(
      ::onos::config::v2::_TypedValue_default_instance_);
}
inline const ::onos::config::v2::TypedValue& PathValue::value() const {
  // @@protoc_insertion_point(field_get:onos.config.v2.PathValue.value)
  return _internal_value();
}
inline void PathValue::unsafe_arena_set_allocated_value(
    ::onos::config::v2::TypedValue* value) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.config.v2.PathValue.value)
}
inline ::onos::config::v2::TypedValue* PathValue::release_value() {
  
  ::onos::config::v2::TypedValue* temp = value_;
  value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::config::v2::TypedValue* PathValue::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:onos.config.v2.PathValue.value)
  
  ::onos::config::v2::TypedValue* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::onos::config::v2::TypedValue* PathValue::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::config::v2::TypedValue>(GetArenaForAllocation());
    value_ = p;
  }
  return value_;
}
inline ::onos::config::v2::TypedValue* PathValue::mutable_value() {
  ::onos::config::v2::TypedValue* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:onos.config.v2.PathValue.value)
  return _msg;
}
inline void PathValue::set_allocated_value(::onos::config::v2::TypedValue* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::config::v2::TypedValue>::GetOwningArena(value);
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:onos.config.v2.PathValue.value)
}

// bool deleted = 3 [(.gogoproto.jsontag) = "Deleted,omitempty"];
inline void PathValue::clear_deleted() {
  deleted_ = false;
}
inline bool PathValue::_internal_deleted() const {
  return deleted_;
}
inline bool PathValue::deleted() const {
  // @@protoc_insertion_point(field_get:onos.config.v2.PathValue.deleted)
  return _internal_deleted();
}
inline void PathValue::_internal_set_deleted(bool value) {
  
  deleted_ = value;
}
inline void PathValue::set_deleted(bool value) {
  _internal_set_deleted(value);
  // @@protoc_insertion_point(field_set:onos.config.v2.PathValue.deleted)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace config
}  // namespace onos

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::onos::config::v2::ValueType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::onos::config::v2::ValueType>() {
  return ::onos::config::v2::ValueType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_onos_2fconfig_2fv2_2fvalue_2eproto
