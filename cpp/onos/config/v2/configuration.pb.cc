// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/config/v2/configuration.proto

#include "onos/config/v2/configuration.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace config {
namespace v2 {
constexpr Configuration_ValuesEntry_DoNotUse::Configuration_ValuesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct Configuration_ValuesEntry_DoNotUseDefaultTypeInternal {
  constexpr Configuration_ValuesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Configuration_ValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Configuration_ValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Configuration_ValuesEntry_DoNotUseDefaultTypeInternal _Configuration_ValuesEntry_DoNotUse_default_instance_;
constexpr Configuration::Configuration(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : values_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , target_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , meta_(nullptr)
  , status_(nullptr)
  , target_info_(nullptr)
  , index_(uint64_t{0u}){}
struct ConfigurationDefaultTypeInternal {
  constexpr ConfigurationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigurationDefaultTypeInternal() {}
  union {
    Configuration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigurationDefaultTypeInternal _Configuration_default_instance_;
constexpr ConfigurationStatus::ConfigurationStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mastership_(nullptr)
  , proposed_(nullptr)
  , committed_(nullptr)
  , applied_(nullptr)
  , state_(0)
{}
struct ConfigurationStatusDefaultTypeInternal {
  constexpr ConfigurationStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigurationStatusDefaultTypeInternal() {}
  union {
    ConfigurationStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigurationStatusDefaultTypeInternal _ConfigurationStatus_default_instance_;
constexpr ProposedConfigurationStatus::ProposedConfigurationStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : index_(uint64_t{0u}){}
struct ProposedConfigurationStatusDefaultTypeInternal {
  constexpr ProposedConfigurationStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProposedConfigurationStatusDefaultTypeInternal() {}
  union {
    ProposedConfigurationStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProposedConfigurationStatusDefaultTypeInternal _ProposedConfigurationStatus_default_instance_;
constexpr CommittedConfigurationStatus::CommittedConfigurationStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : index_(uint64_t{0u}){}
struct CommittedConfigurationStatusDefaultTypeInternal {
  constexpr CommittedConfigurationStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CommittedConfigurationStatusDefaultTypeInternal() {}
  union {
    CommittedConfigurationStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CommittedConfigurationStatusDefaultTypeInternal _CommittedConfigurationStatus_default_instance_;
constexpr AppliedConfigurationStatus_ValuesEntry_DoNotUse::AppliedConfigurationStatus_ValuesEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AppliedConfigurationStatus_ValuesEntry_DoNotUseDefaultTypeInternal {
  constexpr AppliedConfigurationStatus_ValuesEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AppliedConfigurationStatus_ValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AppliedConfigurationStatus_ValuesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AppliedConfigurationStatus_ValuesEntry_DoNotUseDefaultTypeInternal _AppliedConfigurationStatus_ValuesEntry_DoNotUse_default_instance_;
constexpr AppliedConfigurationStatus::AppliedConfigurationStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : values_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , mastership_(nullptr)
  , index_(uint64_t{0u}){}
struct AppliedConfigurationStatusDefaultTypeInternal {
  constexpr AppliedConfigurationStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AppliedConfigurationStatusDefaultTypeInternal() {}
  union {
    AppliedConfigurationStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AppliedConfigurationStatusDefaultTypeInternal _AppliedConfigurationStatus_default_instance_;
constexpr MastershipInfo::MastershipInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : master_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , term_(uint64_t{0u}){}
struct MastershipInfoDefaultTypeInternal {
  constexpr MastershipInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MastershipInfoDefaultTypeInternal() {}
  union {
    MastershipInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MastershipInfoDefaultTypeInternal _MastershipInfo_default_instance_;
constexpr ConfigurationEvent::ConfigurationEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : configuration_(nullptr)
  , type_(0)
{}
struct ConfigurationEventDefaultTypeInternal {
  constexpr ConfigurationEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConfigurationEventDefaultTypeInternal() {}
  union {
    ConfigurationEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConfigurationEventDefaultTypeInternal _ConfigurationEvent_default_instance_;
}  // namespace v2
}  // namespace config
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_onos_2fconfig_2fv2_2fconfiguration_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fconfig_2fv2_2fconfiguration_2eproto = nullptr;

const uint32_t TableStruct_onos_2fconfig_2fv2_2fconfiguration_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration_ValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration_ValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration, meta_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration, id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration, target_id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration, values_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration, index_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration, status_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::Configuration, target_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationStatus, state_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationStatus, mastership_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationStatus, proposed_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationStatus, committed_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationStatus, applied_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposedConfigurationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ProposedConfigurationStatus, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::CommittedConfigurationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::CommittedConfigurationStatus, index_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::AppliedConfigurationStatus_ValuesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::AppliedConfigurationStatus_ValuesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::AppliedConfigurationStatus_ValuesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::AppliedConfigurationStatus_ValuesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::AppliedConfigurationStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::AppliedConfigurationStatus, index_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::AppliedConfigurationStatus, mastership_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::AppliedConfigurationStatus, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::MastershipInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::MastershipInfo, master_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::MastershipInfo, term_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationEvent, type_),
  PROTOBUF_FIELD_OFFSET(::onos::config::v2::ConfigurationEvent, configuration_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::onos::config::v2::Configuration_ValuesEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::onos::config::v2::Configuration)},
  { 23, -1, -1, sizeof(::onos::config::v2::ConfigurationStatus)},
  { 34, -1, -1, sizeof(::onos::config::v2::ProposedConfigurationStatus)},
  { 41, -1, -1, sizeof(::onos::config::v2::CommittedConfigurationStatus)},
  { 48, 56, -1, sizeof(::onos::config::v2::AppliedConfigurationStatus_ValuesEntry_DoNotUse)},
  { 58, -1, -1, sizeof(::onos::config::v2::AppliedConfigurationStatus)},
  { 67, -1, -1, sizeof(::onos::config::v2::MastershipInfo)},
  { 75, -1, -1, sizeof(::onos::config::v2::ConfigurationEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_Configuration_ValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_Configuration_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ConfigurationStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ProposedConfigurationStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_CommittedConfigurationStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_AppliedConfigurationStatus_ValuesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_AppliedConfigurationStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_MastershipInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::v2::_ConfigurationEvent_default_instance_),
};

const char descriptor_table_protodef_onos_2fconfig_2fv2_2fconfiguration_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"onos/config/v2/configuration.proto\022\016on"
  "os.config.v2\032\024gogoproto/gogo.proto\032\033onos"
  "/config/v2/object.proto\032\032onos/config/v2/"
  "value.proto\"\263\003\n\rConfiguration\0222\n\004meta\030\001 "
  "\001(\0132\032.onos.config.v2.ObjectMetaB\010\320\336\037\001\310\336\037"
  "\000\022%\n\002id\030\002 \001(\tB\031\342\336\037\002ID\372\336\037\017ConfigurationID"
  "\022+\n\ttarget_id\030\003 \001(\tB\030\342\336\037\010TargetID\372\336\037\010Tar"
  "getID\0229\n\006values\030\004 \003(\0132).onos.config.v2.C"
  "onfiguration.ValuesEntry\022\030\n\005index\030\005 \001(\004B"
  "\t\372\336\037\005Index\0229\n\006status\030\006 \001(\0132#.onos.config"
  ".v2.ConfigurationStatusB\004\310\336\037\000\022@\n\013target_"
  "info\030\007 \001(\0132!.onos.config.v2.TargetTypeVe"
  "rsionB\010\320\336\037\001\310\336\037\000\032H\n\013ValuesEntry\022\013\n\003key\030\001 "
  "\001(\t\022(\n\005value\030\002 \001(\0132\031.onos.config.v2.Path"
  "Value:\0028\001\"\242\003\n\023ConfigurationStatus\0228\n\005sta"
  "te\030\001 \001(\0162).onos.config.v2.ConfigurationS"
  "tatus.State\0228\n\nmastership\030\002 \001(\0132\036.onos.c"
  "onfig.v2.MastershipInfoB\004\310\336\037\000\022C\n\010propose"
  "d\030\003 \001(\0132+.onos.config.v2.ProposedConfigu"
  "rationStatusB\004\310\336\037\000\022E\n\tcommitted\030\004 \001(\0132,."
  "onos.config.v2.CommittedConfigurationSta"
  "tusB\004\310\336\037\000\022A\n\007applied\030\005 \001(\0132*.onos.config"
  ".v2.AppliedConfigurationStatusB\004\310\336\037\000\"H\n\005"
  "State\022\013\n\007UNKNOWN\020\000\022\021\n\rSYNCHRONIZING\020\001\022\020\n"
  "\014SYNCHRONIZED\020\002\022\r\n\tPERSISTED\020\003\"7\n\033Propos"
  "edConfigurationStatus\022\030\n\005index\030\001 \001(\004B\t\372\336"
  "\037\005Index\"8\n\034CommittedConfigurationStatus\022"
  "\030\n\005index\030\001 \001(\004B\t\372\336\037\005Index\"\202\002\n\032AppliedCon"
  "figurationStatus\022\030\n\005index\030\001 \001(\004B\t\372\336\037\005Ind"
  "ex\0228\n\nmastership\030\002 \001(\0132\036.onos.config.v2."
  "MastershipInfoB\004\310\336\037\000\022F\n\006values\030\003 \003(\01326.o"
  "nos.config.v2.AppliedConfigurationStatus"
  ".ValuesEntry\032H\n\013ValuesEntry\022\013\n\003key\030\001 \001(\t"
  "\022(\n\005value\030\002 \001(\0132\031.onos.config.v2.PathVal"
  "ue:\0028\001\"B\n\016MastershipInfo\022\016\n\006master\030\001 \001(\t"
  "\022 \n\004term\030\002 \001(\004B\022\372\336\037\016MastershipTerm\"\333\001\n\022C"
  "onfigurationEvent\022:\n\004type\030\001 \001(\0162,.onos.c"
  "onfig.v2.ConfigurationEvent.EventType\022:\n"
  "\rconfiguration\030\002 \001(\0132\035.onos.config.v2.Co"
  "nfigurationB\004\310\336\037\000\"M\n\tEventType\022\013\n\007UNKNOW"
  "N\020\000\022\013\n\007CREATED\020\001\022\013\n\007UPDATED\020\002\022\013\n\007DELETED"
  "\020\003\022\014\n\010REPLAYED\020\004b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_deps[3] = {
  &::descriptor_table_gogoproto_2fgogo_2eproto,
  &::descriptor_table_onos_2fconfig_2fv2_2fobject_2eproto,
  &::descriptor_table_onos_2fconfig_2fv2_2fvalue_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto = {
  false, false, 1664, descriptor_table_protodef_onos_2fconfig_2fv2_2fconfiguration_2eproto, "onos/config/v2/configuration.proto", 
  &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once, descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_deps, 3, 9,
  schemas, file_default_instances, TableStruct_onos_2fconfig_2fv2_2fconfiguration_2eproto::offsets,
  file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto, file_level_enum_descriptors_onos_2fconfig_2fv2_2fconfiguration_2eproto, file_level_service_descriptors_onos_2fconfig_2fv2_2fconfiguration_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter() {
  return &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fconfig_2fv2_2fconfiguration_2eproto(&descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto);
namespace onos {
namespace config {
namespace v2 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConfigurationStatus_State_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto);
  return file_level_enum_descriptors_onos_2fconfig_2fv2_2fconfiguration_2eproto[0];
}
bool ConfigurationStatus_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ConfigurationStatus_State ConfigurationStatus::UNKNOWN;
constexpr ConfigurationStatus_State ConfigurationStatus::SYNCHRONIZING;
constexpr ConfigurationStatus_State ConfigurationStatus::SYNCHRONIZED;
constexpr ConfigurationStatus_State ConfigurationStatus::PERSISTED;
constexpr ConfigurationStatus_State ConfigurationStatus::State_MIN;
constexpr ConfigurationStatus_State ConfigurationStatus::State_MAX;
constexpr int ConfigurationStatus::State_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConfigurationEvent_EventType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto);
  return file_level_enum_descriptors_onos_2fconfig_2fv2_2fconfiguration_2eproto[1];
}
bool ConfigurationEvent_EventType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr ConfigurationEvent_EventType ConfigurationEvent::UNKNOWN;
constexpr ConfigurationEvent_EventType ConfigurationEvent::CREATED;
constexpr ConfigurationEvent_EventType ConfigurationEvent::UPDATED;
constexpr ConfigurationEvent_EventType ConfigurationEvent::DELETED;
constexpr ConfigurationEvent_EventType ConfigurationEvent::REPLAYED;
constexpr ConfigurationEvent_EventType ConfigurationEvent::EventType_MIN;
constexpr ConfigurationEvent_EventType ConfigurationEvent::EventType_MAX;
constexpr int ConfigurationEvent::EventType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

Configuration_ValuesEntry_DoNotUse::Configuration_ValuesEntry_DoNotUse() {}
Configuration_ValuesEntry_DoNotUse::Configuration_ValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Configuration_ValuesEntry_DoNotUse::MergeFrom(const Configuration_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Configuration_ValuesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[0]);
}

// ===================================================================

class Configuration::_Internal {
 public:
  static const ::onos::config::v2::ObjectMeta& meta(const Configuration* msg);
  static const ::onos::config::v2::ConfigurationStatus& status(const Configuration* msg);
  static const ::onos::config::v2::TargetTypeVersion& target_info(const Configuration* msg);
};

const ::onos::config::v2::ObjectMeta&
Configuration::_Internal::meta(const Configuration* msg) {
  return *msg->meta_;
}
const ::onos::config::v2::ConfigurationStatus&
Configuration::_Internal::status(const Configuration* msg) {
  return *msg->status_;
}
const ::onos::config::v2::TargetTypeVersion&
Configuration::_Internal::target_info(const Configuration* msg) {
  return *msg->target_info_;
}
void Configuration::clear_meta() {
  if (GetArenaForAllocation() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
}
void Configuration::clear_values() {
  values_.Clear();
}
void Configuration::clear_target_info() {
  if (GetArenaForAllocation() == nullptr && target_info_ != nullptr) {
    delete target_info_;
  }
  target_info_ = nullptr;
}
Configuration::Configuration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.Configuration)
}
Configuration::Configuration(const Configuration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  target_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    target_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_target_id().empty()) {
    target_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_target_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_meta()) {
    meta_ = new ::onos::config::v2::ObjectMeta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::onos::config::v2::ConfigurationStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  if (from._internal_has_target_info()) {
    target_info_ = new ::onos::config::v2::TargetTypeVersion(*from.target_info_);
  } else {
    target_info_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.Configuration)
}

inline void Configuration::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
target_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  target_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&meta_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&meta_)) + sizeof(index_));
}

Configuration::~Configuration() {
  // @@protoc_insertion_point(destructor:onos.config.v2.Configuration)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Configuration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete target_info_;
}

void Configuration::ArenaDtor(void* object) {
  Configuration* _this = reinterpret_cast< Configuration* >(object);
  (void)_this;
  _this->values_. ~MapField();
}
inline void Configuration::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &Configuration::ArenaDtor);
  }
}
void Configuration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Configuration::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.Configuration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  id_.ClearToEmpty();
  target_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArenaForAllocation() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  if (GetArenaForAllocation() == nullptr && target_info_ != nullptr) {
    delete target_info_;
  }
  target_info_ = nullptr;
  index_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Configuration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ObjectMeta meta = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string id = 2 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ConfigurationID"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.v2.Configuration.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string target_id = 3 [(.gogoproto.customname) = "TargetID", (.gogoproto.casttype) = "TargetID"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_target_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.v2.Configuration.target_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .onos.config.v2.PathValue> values = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&values_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint64 index = 5 [(.gogoproto.casttype) = "Index"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ConfigurationStatus status = 6 [(.gogoproto.nullable) = false];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.TargetTypeVersion target_info = 7 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Configuration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.Configuration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ObjectMeta meta = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::meta(this), target, stream);
  }

  // string id = 2 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ConfigurationID"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.v2.Configuration.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // string target_id = 3 [(.gogoproto.customname) = "TargetID", (.gogoproto.casttype) = "TargetID"];
  if (!this->_internal_target_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_id().data(), static_cast<int>(this->_internal_target_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.v2.Configuration.target_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_target_id(), target);
  }

  // map<string, .onos.config.v2.PathValue> values = 4;
  if (!this->_internal_values().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "onos.config.v2.Configuration.ValuesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_values().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
          it = this->_internal_values().begin();
          it != this->_internal_values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Configuration_ValuesEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
          it = this->_internal_values().begin();
          it != this->_internal_values().end(); ++it) {
        target = Configuration_ValuesEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // uint64 index = 5 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_index(), target);
  }

  // .onos.config.v2.ConfigurationStatus status = 6 [(.gogoproto.nullable) = false];
  if (this->_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::status(this), target, stream);
  }

  // .onos.config.v2.TargetTypeVersion target_info = 7 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_target_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::target_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.Configuration)
  return target;
}

size_t Configuration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.Configuration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .onos.config.v2.PathValue> values = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_values_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
      it = this->_internal_values().begin();
      it != this->_internal_values().end(); ++it) {
    total_size += Configuration_ValuesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string id = 2 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ConfigurationID"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string target_id = 3 [(.gogoproto.customname) = "TargetID", (.gogoproto.casttype) = "TargetID"];
  if (!this->_internal_target_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_id());
  }

  // .onos.config.v2.ObjectMeta meta = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .onos.config.v2.ConfigurationStatus status = 6 [(.gogoproto.nullable) = false];
  if (this->_internal_has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .onos.config.v2.TargetTypeVersion target_info = 7 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_target_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_info_);
  }

  // uint64 index = 5 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Configuration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Configuration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Configuration::GetClassData() const { return &_class_data_; }

void Configuration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Configuration *>(to)->MergeFrom(
      static_cast<const Configuration &>(from));
}


void Configuration::MergeFrom(const Configuration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.Configuration)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_target_id().empty()) {
    _internal_set_target_id(from._internal_target_id());
  }
  if (from._internal_has_meta()) {
    _internal_mutable_meta()->::onos::config::v2::ObjectMeta::MergeFrom(from._internal_meta());
  }
  if (from._internal_has_status()) {
    _internal_mutable_status()->::onos::config::v2::ConfigurationStatus::MergeFrom(from._internal_status());
  }
  if (from._internal_has_target_info()) {
    _internal_mutable_target_info()->::onos::config::v2::TargetTypeVersion::MergeFrom(from._internal_target_info());
  }
  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Configuration::CopyFrom(const Configuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.Configuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Configuration::IsInitialized() const {
  return true;
}

void Configuration::InternalSwap(Configuration* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &target_id_, lhs_arena,
      &other->target_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Configuration, index_)
      + sizeof(Configuration::index_)
      - PROTOBUF_FIELD_OFFSET(Configuration, meta_)>(
          reinterpret_cast<char*>(&meta_),
          reinterpret_cast<char*>(&other->meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Configuration::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[1]);
}

// ===================================================================

class ConfigurationStatus::_Internal {
 public:
  static const ::onos::config::v2::MastershipInfo& mastership(const ConfigurationStatus* msg);
  static const ::onos::config::v2::ProposedConfigurationStatus& proposed(const ConfigurationStatus* msg);
  static const ::onos::config::v2::CommittedConfigurationStatus& committed(const ConfigurationStatus* msg);
  static const ::onos::config::v2::AppliedConfigurationStatus& applied(const ConfigurationStatus* msg);
};

const ::onos::config::v2::MastershipInfo&
ConfigurationStatus::_Internal::mastership(const ConfigurationStatus* msg) {
  return *msg->mastership_;
}
const ::onos::config::v2::ProposedConfigurationStatus&
ConfigurationStatus::_Internal::proposed(const ConfigurationStatus* msg) {
  return *msg->proposed_;
}
const ::onos::config::v2::CommittedConfigurationStatus&
ConfigurationStatus::_Internal::committed(const ConfigurationStatus* msg) {
  return *msg->committed_;
}
const ::onos::config::v2::AppliedConfigurationStatus&
ConfigurationStatus::_Internal::applied(const ConfigurationStatus* msg) {
  return *msg->applied_;
}
ConfigurationStatus::ConfigurationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ConfigurationStatus)
}
ConfigurationStatus::ConfigurationStatus(const ConfigurationStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_mastership()) {
    mastership_ = new ::onos::config::v2::MastershipInfo(*from.mastership_);
  } else {
    mastership_ = nullptr;
  }
  if (from._internal_has_proposed()) {
    proposed_ = new ::onos::config::v2::ProposedConfigurationStatus(*from.proposed_);
  } else {
    proposed_ = nullptr;
  }
  if (from._internal_has_committed()) {
    committed_ = new ::onos::config::v2::CommittedConfigurationStatus(*from.committed_);
  } else {
    committed_ = nullptr;
  }
  if (from._internal_has_applied()) {
    applied_ = new ::onos::config::v2::AppliedConfigurationStatus(*from.applied_);
  } else {
    applied_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ConfigurationStatus)
}

inline void ConfigurationStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mastership_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&mastership_)) + sizeof(state_));
}

ConfigurationStatus::~ConfigurationStatus() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ConfigurationStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConfigurationStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete mastership_;
  if (this != internal_default_instance()) delete proposed_;
  if (this != internal_default_instance()) delete committed_;
  if (this != internal_default_instance()) delete applied_;
}

void ConfigurationStatus::ArenaDtor(void* object) {
  ConfigurationStatus* _this = reinterpret_cast< ConfigurationStatus* >(object);
  (void)_this;
}
void ConfigurationStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigurationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigurationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ConfigurationStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && mastership_ != nullptr) {
    delete mastership_;
  }
  mastership_ = nullptr;
  if (GetArenaForAllocation() == nullptr && proposed_ != nullptr) {
    delete proposed_;
  }
  proposed_ = nullptr;
  if (GetArenaForAllocation() == nullptr && committed_ != nullptr) {
    delete committed_;
  }
  committed_ = nullptr;
  if (GetArenaForAllocation() == nullptr && applied_ != nullptr) {
    delete applied_;
  }
  applied_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigurationStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ConfigurationStatus.State state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::onos::config::v2::ConfigurationStatus_State>(val));
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.MastershipInfo mastership = 2 [(.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mastership(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ProposedConfigurationStatus proposed = 3 [(.gogoproto.nullable) = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_proposed(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.CommittedConfigurationStatus committed = 4 [(.gogoproto.nullable) = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_committed(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.AppliedConfigurationStatus applied = 5 [(.gogoproto.nullable) = false];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_applied(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigurationStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ConfigurationStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ConfigurationStatus.State state = 1;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_state(), target);
  }

  // .onos.config.v2.MastershipInfo mastership = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_mastership()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::mastership(this), target, stream);
  }

  // .onos.config.v2.ProposedConfigurationStatus proposed = 3 [(.gogoproto.nullable) = false];
  if (this->_internal_has_proposed()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::proposed(this), target, stream);
  }

  // .onos.config.v2.CommittedConfigurationStatus committed = 4 [(.gogoproto.nullable) = false];
  if (this->_internal_has_committed()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::committed(this), target, stream);
  }

  // .onos.config.v2.AppliedConfigurationStatus applied = 5 [(.gogoproto.nullable) = false];
  if (this->_internal_has_applied()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::applied(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ConfigurationStatus)
  return target;
}

size_t ConfigurationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ConfigurationStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.MastershipInfo mastership = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_mastership()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mastership_);
  }

  // .onos.config.v2.ProposedConfigurationStatus proposed = 3 [(.gogoproto.nullable) = false];
  if (this->_internal_has_proposed()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proposed_);
  }

  // .onos.config.v2.CommittedConfigurationStatus committed = 4 [(.gogoproto.nullable) = false];
  if (this->_internal_has_committed()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *committed_);
  }

  // .onos.config.v2.AppliedConfigurationStatus applied = 5 [(.gogoproto.nullable) = false];
  if (this->_internal_has_applied()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *applied_);
  }

  // .onos.config.v2.ConfigurationStatus.State state = 1;
  if (this->_internal_state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigurationStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigurationStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigurationStatus::GetClassData() const { return &_class_data_; }

void ConfigurationStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigurationStatus *>(to)->MergeFrom(
      static_cast<const ConfigurationStatus &>(from));
}


void ConfigurationStatus::MergeFrom(const ConfigurationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ConfigurationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_mastership()) {
    _internal_mutable_mastership()->::onos::config::v2::MastershipInfo::MergeFrom(from._internal_mastership());
  }
  if (from._internal_has_proposed()) {
    _internal_mutable_proposed()->::onos::config::v2::ProposedConfigurationStatus::MergeFrom(from._internal_proposed());
  }
  if (from._internal_has_committed()) {
    _internal_mutable_committed()->::onos::config::v2::CommittedConfigurationStatus::MergeFrom(from._internal_committed());
  }
  if (from._internal_has_applied()) {
    _internal_mutable_applied()->::onos::config::v2::AppliedConfigurationStatus::MergeFrom(from._internal_applied());
  }
  if (from._internal_state() != 0) {
    _internal_set_state(from._internal_state());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigurationStatus::CopyFrom(const ConfigurationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ConfigurationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationStatus::IsInitialized() const {
  return true;
}

void ConfigurationStatus::InternalSwap(ConfigurationStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigurationStatus, state_)
      + sizeof(ConfigurationStatus::state_)
      - PROTOBUF_FIELD_OFFSET(ConfigurationStatus, mastership_)>(
          reinterpret_cast<char*>(&mastership_),
          reinterpret_cast<char*>(&other->mastership_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[2]);
}

// ===================================================================

class ProposedConfigurationStatus::_Internal {
 public:
};

ProposedConfigurationStatus::ProposedConfigurationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ProposedConfigurationStatus)
}
ProposedConfigurationStatus::ProposedConfigurationStatus(const ProposedConfigurationStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ProposedConfigurationStatus)
}

inline void ProposedConfigurationStatus::SharedCtor() {
index_ = uint64_t{0u};
}

ProposedConfigurationStatus::~ProposedConfigurationStatus() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ProposedConfigurationStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProposedConfigurationStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ProposedConfigurationStatus::ArenaDtor(void* object) {
  ProposedConfigurationStatus* _this = reinterpret_cast< ProposedConfigurationStatus* >(object);
  (void)_this;
}
void ProposedConfigurationStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProposedConfigurationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProposedConfigurationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ProposedConfigurationStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProposedConfigurationStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProposedConfigurationStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ProposedConfigurationStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ProposedConfigurationStatus)
  return target;
}

size_t ProposedConfigurationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ProposedConfigurationStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProposedConfigurationStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProposedConfigurationStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProposedConfigurationStatus::GetClassData() const { return &_class_data_; }

void ProposedConfigurationStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProposedConfigurationStatus *>(to)->MergeFrom(
      static_cast<const ProposedConfigurationStatus &>(from));
}


void ProposedConfigurationStatus::MergeFrom(const ProposedConfigurationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ProposedConfigurationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProposedConfigurationStatus::CopyFrom(const ProposedConfigurationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ProposedConfigurationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProposedConfigurationStatus::IsInitialized() const {
  return true;
}

void ProposedConfigurationStatus::InternalSwap(ProposedConfigurationStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProposedConfigurationStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[3]);
}

// ===================================================================

class CommittedConfigurationStatus::_Internal {
 public:
};

CommittedConfigurationStatus::CommittedConfigurationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.CommittedConfigurationStatus)
}
CommittedConfigurationStatus::CommittedConfigurationStatus(const CommittedConfigurationStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.CommittedConfigurationStatus)
}

inline void CommittedConfigurationStatus::SharedCtor() {
index_ = uint64_t{0u};
}

CommittedConfigurationStatus::~CommittedConfigurationStatus() {
  // @@protoc_insertion_point(destructor:onos.config.v2.CommittedConfigurationStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CommittedConfigurationStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CommittedConfigurationStatus::ArenaDtor(void* object) {
  CommittedConfigurationStatus* _this = reinterpret_cast< CommittedConfigurationStatus* >(object);
  (void)_this;
}
void CommittedConfigurationStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommittedConfigurationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CommittedConfigurationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.CommittedConfigurationStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommittedConfigurationStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommittedConfigurationStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.CommittedConfigurationStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.CommittedConfigurationStatus)
  return target;
}

size_t CommittedConfigurationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.CommittedConfigurationStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommittedConfigurationStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CommittedConfigurationStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommittedConfigurationStatus::GetClassData() const { return &_class_data_; }

void CommittedConfigurationStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CommittedConfigurationStatus *>(to)->MergeFrom(
      static_cast<const CommittedConfigurationStatus &>(from));
}


void CommittedConfigurationStatus::MergeFrom(const CommittedConfigurationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.CommittedConfigurationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommittedConfigurationStatus::CopyFrom(const CommittedConfigurationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.CommittedConfigurationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommittedConfigurationStatus::IsInitialized() const {
  return true;
}

void CommittedConfigurationStatus::InternalSwap(CommittedConfigurationStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommittedConfigurationStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[4]);
}

// ===================================================================

AppliedConfigurationStatus_ValuesEntry_DoNotUse::AppliedConfigurationStatus_ValuesEntry_DoNotUse() {}
AppliedConfigurationStatus_ValuesEntry_DoNotUse::AppliedConfigurationStatus_ValuesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AppliedConfigurationStatus_ValuesEntry_DoNotUse::MergeFrom(const AppliedConfigurationStatus_ValuesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AppliedConfigurationStatus_ValuesEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[5]);
}

// ===================================================================

class AppliedConfigurationStatus::_Internal {
 public:
  static const ::onos::config::v2::MastershipInfo& mastership(const AppliedConfigurationStatus* msg);
};

const ::onos::config::v2::MastershipInfo&
AppliedConfigurationStatus::_Internal::mastership(const AppliedConfigurationStatus* msg) {
  return *msg->mastership_;
}
void AppliedConfigurationStatus::clear_values() {
  values_.Clear();
}
AppliedConfigurationStatus::AppliedConfigurationStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  values_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.AppliedConfigurationStatus)
}
AppliedConfigurationStatus::AppliedConfigurationStatus(const AppliedConfigurationStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  values_.MergeFrom(from.values_);
  if (from._internal_has_mastership()) {
    mastership_ = new ::onos::config::v2::MastershipInfo(*from.mastership_);
  } else {
    mastership_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.AppliedConfigurationStatus)
}

inline void AppliedConfigurationStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mastership_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&mastership_)) + sizeof(index_));
}

AppliedConfigurationStatus::~AppliedConfigurationStatus() {
  // @@protoc_insertion_point(destructor:onos.config.v2.AppliedConfigurationStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AppliedConfigurationStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete mastership_;
}

void AppliedConfigurationStatus::ArenaDtor(void* object) {
  AppliedConfigurationStatus* _this = reinterpret_cast< AppliedConfigurationStatus* >(object);
  (void)_this;
  _this->values_. ~MapField();
}
inline void AppliedConfigurationStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &AppliedConfigurationStatus::ArenaDtor);
  }
}
void AppliedConfigurationStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AppliedConfigurationStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.AppliedConfigurationStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  if (GetArenaForAllocation() == nullptr && mastership_ != nullptr) {
    delete mastership_;
  }
  mastership_ = nullptr;
  index_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppliedConfigurationStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.MastershipInfo mastership = 2 [(.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_mastership(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, .onos.config.v2.PathValue> values = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&values_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppliedConfigurationStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.AppliedConfigurationStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_index(), target);
  }

  // .onos.config.v2.MastershipInfo mastership = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_mastership()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::mastership(this), target, stream);
  }

  // map<string, .onos.config.v2.PathValue> values = 3;
  if (!this->_internal_values().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "onos.config.v2.AppliedConfigurationStatus.ValuesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_values().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_values().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
          it = this->_internal_values().begin();
          it != this->_internal_values().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AppliedConfigurationStatus_ValuesEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
          it = this->_internal_values().begin();
          it != this->_internal_values().end(); ++it) {
        target = AppliedConfigurationStatus_ValuesEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.AppliedConfigurationStatus)
  return target;
}

size_t AppliedConfigurationStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.AppliedConfigurationStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .onos.config.v2.PathValue> values = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_values_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::onos::config::v2::PathValue >::const_iterator
      it = this->_internal_values().begin();
      it != this->_internal_values().end(); ++it) {
    total_size += AppliedConfigurationStatus_ValuesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .onos.config.v2.MastershipInfo mastership = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_mastership()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mastership_);
  }

  // uint64 index = 1 [(.gogoproto.casttype) = "Index"];
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppliedConfigurationStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AppliedConfigurationStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppliedConfigurationStatus::GetClassData() const { return &_class_data_; }

void AppliedConfigurationStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AppliedConfigurationStatus *>(to)->MergeFrom(
      static_cast<const AppliedConfigurationStatus &>(from));
}


void AppliedConfigurationStatus::MergeFrom(const AppliedConfigurationStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.AppliedConfigurationStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from._internal_has_mastership()) {
    _internal_mutable_mastership()->::onos::config::v2::MastershipInfo::MergeFrom(from._internal_mastership());
  }
  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppliedConfigurationStatus::CopyFrom(const AppliedConfigurationStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.AppliedConfigurationStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppliedConfigurationStatus::IsInitialized() const {
  return true;
}

void AppliedConfigurationStatus::InternalSwap(AppliedConfigurationStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppliedConfigurationStatus, index_)
      + sizeof(AppliedConfigurationStatus::index_)
      - PROTOBUF_FIELD_OFFSET(AppliedConfigurationStatus, mastership_)>(
          reinterpret_cast<char*>(&mastership_),
          reinterpret_cast<char*>(&other->mastership_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AppliedConfigurationStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[6]);
}

// ===================================================================

class MastershipInfo::_Internal {
 public:
};

MastershipInfo::MastershipInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.MastershipInfo)
}
MastershipInfo::MastershipInfo(const MastershipInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  master_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    master_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_master().empty()) {
    master_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_master(), 
      GetArenaForAllocation());
  }
  term_ = from.term_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.MastershipInfo)
}

inline void MastershipInfo::SharedCtor() {
master_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  master_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
term_ = uint64_t{0u};
}

MastershipInfo::~MastershipInfo() {
  // @@protoc_insertion_point(destructor:onos.config.v2.MastershipInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MastershipInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  master_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MastershipInfo::ArenaDtor(void* object) {
  MastershipInfo* _this = reinterpret_cast< MastershipInfo* >(object);
  (void)_this;
}
void MastershipInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MastershipInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MastershipInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.MastershipInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  master_.ClearToEmpty();
  term_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MastershipInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string master = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_master();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.v2.MastershipInfo.master"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 term = 2 [(.gogoproto.casttype) = "MastershipTerm"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          term_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MastershipInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.MastershipInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string master = 1;
  if (!this->_internal_master().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_master().data(), static_cast<int>(this->_internal_master().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.v2.MastershipInfo.master");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_master(), target);
  }

  // uint64 term = 2 [(.gogoproto.casttype) = "MastershipTerm"];
  if (this->_internal_term() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_term(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.MastershipInfo)
  return target;
}

size_t MastershipInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.MastershipInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string master = 1;
  if (!this->_internal_master().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_master());
  }

  // uint64 term = 2 [(.gogoproto.casttype) = "MastershipTerm"];
  if (this->_internal_term() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_term());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MastershipInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MastershipInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MastershipInfo::GetClassData() const { return &_class_data_; }

void MastershipInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MastershipInfo *>(to)->MergeFrom(
      static_cast<const MastershipInfo &>(from));
}


void MastershipInfo::MergeFrom(const MastershipInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.MastershipInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_master().empty()) {
    _internal_set_master(from._internal_master());
  }
  if (from._internal_term() != 0) {
    _internal_set_term(from._internal_term());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MastershipInfo::CopyFrom(const MastershipInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.MastershipInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MastershipInfo::IsInitialized() const {
  return true;
}

void MastershipInfo::InternalSwap(MastershipInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &master_, lhs_arena,
      &other->master_, rhs_arena
  );
  swap(term_, other->term_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MastershipInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[7]);
}

// ===================================================================

class ConfigurationEvent::_Internal {
 public:
  static const ::onos::config::v2::Configuration& configuration(const ConfigurationEvent* msg);
};

const ::onos::config::v2::Configuration&
ConfigurationEvent::_Internal::configuration(const ConfigurationEvent* msg) {
  return *msg->configuration_;
}
ConfigurationEvent::ConfigurationEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.v2.ConfigurationEvent)
}
ConfigurationEvent::ConfigurationEvent(const ConfigurationEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_configuration()) {
    configuration_ = new ::onos::config::v2::Configuration(*from.configuration_);
  } else {
    configuration_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:onos.config.v2.ConfigurationEvent)
}

inline void ConfigurationEvent::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&configuration_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&configuration_)) + sizeof(type_));
}

ConfigurationEvent::~ConfigurationEvent() {
  // @@protoc_insertion_point(destructor:onos.config.v2.ConfigurationEvent)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConfigurationEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete configuration_;
}

void ConfigurationEvent::ArenaDtor(void* object) {
  ConfigurationEvent* _this = reinterpret_cast< ConfigurationEvent* >(object);
  (void)_this;
}
void ConfigurationEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigurationEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConfigurationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.v2.ConfigurationEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && configuration_ != nullptr) {
    delete configuration_;
  }
  configuration_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigurationEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ConfigurationEvent.EventType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::onos::config::v2::ConfigurationEvent_EventType>(val));
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.Configuration configuration = 2 [(.gogoproto.nullable) = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_configuration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConfigurationEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.v2.ConfigurationEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ConfigurationEvent.EventType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .onos.config.v2.Configuration configuration = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_configuration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::configuration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.v2.ConfigurationEvent)
  return target;
}

size_t ConfigurationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.v2.ConfigurationEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.Configuration configuration = 2 [(.gogoproto.nullable) = false];
  if (this->_internal_has_configuration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *configuration_);
  }

  // .onos.config.v2.ConfigurationEvent.EventType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConfigurationEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConfigurationEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConfigurationEvent::GetClassData() const { return &_class_data_; }

void ConfigurationEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConfigurationEvent *>(to)->MergeFrom(
      static_cast<const ConfigurationEvent &>(from));
}


void ConfigurationEvent::MergeFrom(const ConfigurationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.v2.ConfigurationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_configuration()) {
    _internal_mutable_configuration()->::onos::config::v2::Configuration::MergeFrom(from._internal_configuration());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConfigurationEvent::CopyFrom(const ConfigurationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.v2.ConfigurationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigurationEvent::IsInitialized() const {
  return true;
}

void ConfigurationEvent::InternalSwap(ConfigurationEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigurationEvent, type_)
      + sizeof(ConfigurationEvent::type_)
      - PROTOBUF_FIELD_OFFSET(ConfigurationEvent, configuration_)>(
          reinterpret_cast<char*>(&configuration_),
          reinterpret_cast<char*>(&other->configuration_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigurationEvent::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_getter, &descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto_once,
      file_level_metadata_onos_2fconfig_2fv2_2fconfiguration_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace config
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::config::v2::Configuration_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::onos::config::v2::Configuration_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::Configuration_ValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::Configuration* Arena::CreateMaybeMessage< ::onos::config::v2::Configuration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::Configuration >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ConfigurationStatus* Arena::CreateMaybeMessage< ::onos::config::v2::ConfigurationStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ConfigurationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ProposedConfigurationStatus* Arena::CreateMaybeMessage< ::onos::config::v2::ProposedConfigurationStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ProposedConfigurationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::CommittedConfigurationStatus* Arena::CreateMaybeMessage< ::onos::config::v2::CommittedConfigurationStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::CommittedConfigurationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::AppliedConfigurationStatus_ValuesEntry_DoNotUse* Arena::CreateMaybeMessage< ::onos::config::v2::AppliedConfigurationStatus_ValuesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::AppliedConfigurationStatus_ValuesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::AppliedConfigurationStatus* Arena::CreateMaybeMessage< ::onos::config::v2::AppliedConfigurationStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::AppliedConfigurationStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::MastershipInfo* Arena::CreateMaybeMessage< ::onos::config::v2::MastershipInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::MastershipInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::v2::ConfigurationEvent* Arena::CreateMaybeMessage< ::onos::config::v2::ConfigurationEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::v2::ConfigurationEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
