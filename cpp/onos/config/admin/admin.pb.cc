// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/config/admin/admin.proto

#include "onos/config/admin/admin.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace config {
namespace admin {
constexpr ReadOnlySubPath::ReadOnlySubPath(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : type_opts_()
  , _type_opts_cached_byte_size_(0)
  , sub_path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , units_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , attrname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_type_(0)

  , isakey_(false){}
struct ReadOnlySubPathDefaultTypeInternal {
  constexpr ReadOnlySubPathDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadOnlySubPathDefaultTypeInternal() {}
  union {
    ReadOnlySubPath _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadOnlySubPathDefaultTypeInternal _ReadOnlySubPath_default_instance_;
constexpr ReadOnlyPath::ReadOnlyPath(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sub_path_()
  , path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ReadOnlyPathDefaultTypeInternal {
  constexpr ReadOnlyPathDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadOnlyPathDefaultTypeInternal() {}
  union {
    ReadOnlyPath _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadOnlyPathDefaultTypeInternal _ReadOnlyPath_default_instance_;
constexpr ReadWritePath::ReadWritePath(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : range_()
  , length_()
  , type_opts_()
  , _type_opts_cached_byte_size_(0)
  , path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , units_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , default__(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , attrname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_type_(0)

  , mandatory_(false)
  , isakey_(false){}
struct ReadWritePathDefaultTypeInternal {
  constexpr ReadWritePathDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ReadWritePathDefaultTypeInternal() {}
  union {
    ReadWritePath _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReadWritePathDefaultTypeInternal _ReadWritePath_default_instance_;
constexpr ModelInfo::ModelInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : model_data_()
  , read_only_path_()
  , read_write_path_()
  , supported_encodings_()
  , _supported_encodings_cached_byte_size_(0)
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , module_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , getstatemode_(0u){}
struct ModelInfoDefaultTypeInternal {
  constexpr ModelInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelInfoDefaultTypeInternal() {}
  union {
    ModelInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ModelInfoDefaultTypeInternal _ModelInfo_default_instance_;
constexpr ModelPlugin::ModelPlugin(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , endpoint_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , error_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , info_(nullptr){}
struct ModelPluginDefaultTypeInternal {
  constexpr ModelPluginDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelPluginDefaultTypeInternal() {}
  union {
    ModelPlugin _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ModelPluginDefaultTypeInternal _ModelPlugin_default_instance_;
constexpr ListModelsRequest::ListModelsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : model_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , model_version_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , verbose_(false){}
struct ListModelsRequestDefaultTypeInternal {
  constexpr ListModelsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListModelsRequestDefaultTypeInternal() {}
  union {
    ListModelsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListModelsRequestDefaultTypeInternal _ListModelsRequest_default_instance_;
constexpr RollbackRequest::RollbackRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : index_(uint64_t{0u}){}
struct RollbackRequestDefaultTypeInternal {
  constexpr RollbackRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RollbackRequestDefaultTypeInternal() {}
  union {
    RollbackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RollbackRequestDefaultTypeInternal _RollbackRequest_default_instance_;
constexpr RollbackResponse::RollbackResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , index_(uint64_t{0u}){}
struct RollbackResponseDefaultTypeInternal {
  constexpr RollbackResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RollbackResponseDefaultTypeInternal() {}
  union {
    RollbackResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RollbackResponseDefaultTypeInternal _RollbackResponse_default_instance_;
constexpr ModelInfoRequest::ModelInfoRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ModelInfoRequestDefaultTypeInternal {
  constexpr ModelInfoRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelInfoRequestDefaultTypeInternal() {}
  union {
    ModelInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ModelInfoRequestDefaultTypeInternal _ModelInfoRequest_default_instance_;
constexpr ModelInfoResponse::ModelInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : modelinfo_(nullptr){}
struct ModelInfoResponseDefaultTypeInternal {
  constexpr ModelInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelInfoResponseDefaultTypeInternal() {}
  union {
    ModelInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ModelInfoResponseDefaultTypeInternal _ModelInfoResponse_default_instance_;
constexpr ValidateConfigRequest::ValidateConfigRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : json_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ValidateConfigRequestDefaultTypeInternal {
  constexpr ValidateConfigRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ValidateConfigRequestDefaultTypeInternal() {}
  union {
    ValidateConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ValidateConfigRequestDefaultTypeInternal _ValidateConfigRequest_default_instance_;
constexpr ValidateConfigResponse::ValidateConfigResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , valid_(false){}
struct ValidateConfigResponseDefaultTypeInternal {
  constexpr ValidateConfigResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ValidateConfigResponseDefaultTypeInternal() {}
  union {
    ValidateConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ValidateConfigResponseDefaultTypeInternal _ValidateConfigResponse_default_instance_;
constexpr PathValuesRequest::PathValuesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pathprefix_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , json_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PathValuesRequestDefaultTypeInternal {
  constexpr PathValuesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PathValuesRequestDefaultTypeInternal() {}
  union {
    PathValuesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PathValuesRequestDefaultTypeInternal _PathValuesRequest_default_instance_;
constexpr PathValuesResponse::PathValuesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pathvalues_(){}
struct PathValuesResponseDefaultTypeInternal {
  constexpr PathValuesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PathValuesResponseDefaultTypeInternal() {}
  union {
    PathValuesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PathValuesResponseDefaultTypeInternal _PathValuesResponse_default_instance_;
constexpr GetTransactionRequest::GetTransactionRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , index_(uint64_t{0u}){}
struct GetTransactionRequestDefaultTypeInternal {
  constexpr GetTransactionRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTransactionRequestDefaultTypeInternal() {}
  union {
    GetTransactionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTransactionRequestDefaultTypeInternal _GetTransactionRequest_default_instance_;
constexpr GetTransactionResponse::GetTransactionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transaction_(nullptr){}
struct GetTransactionResponseDefaultTypeInternal {
  constexpr GetTransactionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetTransactionResponseDefaultTypeInternal() {}
  union {
    GetTransactionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetTransactionResponseDefaultTypeInternal _GetTransactionResponse_default_instance_;
constexpr ListTransactionsRequest::ListTransactionsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ListTransactionsRequestDefaultTypeInternal {
  constexpr ListTransactionsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListTransactionsRequestDefaultTypeInternal() {}
  union {
    ListTransactionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListTransactionsRequestDefaultTypeInternal _ListTransactionsRequest_default_instance_;
constexpr ListTransactionsResponse::ListTransactionsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : transaction_(nullptr){}
struct ListTransactionsResponseDefaultTypeInternal {
  constexpr ListTransactionsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListTransactionsResponseDefaultTypeInternal() {}
  union {
    ListTransactionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListTransactionsResponseDefaultTypeInternal _ListTransactionsResponse_default_instance_;
constexpr WatchTransactionsRequest::WatchTransactionsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , noreplay_(false){}
struct WatchTransactionsRequestDefaultTypeInternal {
  constexpr WatchTransactionsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchTransactionsRequestDefaultTypeInternal() {}
  union {
    WatchTransactionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchTransactionsRequestDefaultTypeInternal _WatchTransactionsRequest_default_instance_;
constexpr WatchTransactionsResponse::WatchTransactionsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : event_(nullptr){}
struct WatchTransactionsResponseDefaultTypeInternal {
  constexpr WatchTransactionsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchTransactionsResponseDefaultTypeInternal() {}
  union {
    WatchTransactionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchTransactionsResponseDefaultTypeInternal _WatchTransactionsResponse_default_instance_;
constexpr GetConfigurationRequest::GetConfigurationRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : configuration_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetConfigurationRequestDefaultTypeInternal {
  constexpr GetConfigurationRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConfigurationRequestDefaultTypeInternal() {}
  union {
    GetConfigurationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConfigurationRequestDefaultTypeInternal _GetConfigurationRequest_default_instance_;
constexpr GetConfigurationResponse::GetConfigurationResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : configuration_(nullptr){}
struct GetConfigurationResponseDefaultTypeInternal {
  constexpr GetConfigurationResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetConfigurationResponseDefaultTypeInternal() {}
  union {
    GetConfigurationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetConfigurationResponseDefaultTypeInternal _GetConfigurationResponse_default_instance_;
constexpr ListConfigurationsRequest::ListConfigurationsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ListConfigurationsRequestDefaultTypeInternal {
  constexpr ListConfigurationsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListConfigurationsRequestDefaultTypeInternal() {}
  union {
    ListConfigurationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListConfigurationsRequestDefaultTypeInternal _ListConfigurationsRequest_default_instance_;
constexpr ListConfigurationsResponse::ListConfigurationsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : configuration_(nullptr){}
struct ListConfigurationsResponseDefaultTypeInternal {
  constexpr ListConfigurationsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListConfigurationsResponseDefaultTypeInternal() {}
  union {
    ListConfigurationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListConfigurationsResponseDefaultTypeInternal _ListConfigurationsResponse_default_instance_;
constexpr WatchConfigurationsRequest::WatchConfigurationsRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : configuration_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , noreplay_(false){}
struct WatchConfigurationsRequestDefaultTypeInternal {
  constexpr WatchConfigurationsRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchConfigurationsRequestDefaultTypeInternal() {}
  union {
    WatchConfigurationsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchConfigurationsRequestDefaultTypeInternal _WatchConfigurationsRequest_default_instance_;
constexpr WatchConfigurationsResponse::WatchConfigurationsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : event_(nullptr){}
struct WatchConfigurationsResponseDefaultTypeInternal {
  constexpr WatchConfigurationsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~WatchConfigurationsResponseDefaultTypeInternal() {}
  union {
    WatchConfigurationsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT WatchConfigurationsResponseDefaultTypeInternal _WatchConfigurationsResponse_default_instance_;
}  // namespace admin
}  // namespace config
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[26];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_onos_2fconfig_2fadmin_2fadmin_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fconfig_2fadmin_2fadmin_2eproto = nullptr;

const uint32_t TableStruct_onos_2fconfig_2fadmin_2fadmin_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlySubPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlySubPath, sub_path_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlySubPath, value_type_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlySubPath, type_opts_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlySubPath, description_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlySubPath, units_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlySubPath, isakey_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlySubPath, attrname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlyPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlyPath, path_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadOnlyPath, sub_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, path_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, value_type_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, units_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, description_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, mandatory_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, default__),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, range_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, length_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, type_opts_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, isakey_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ReadWritePath, attrname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, name_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, version_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, model_data_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, module_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, getstatemode_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, read_only_path_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, read_write_path_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfo, supported_encodings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelPlugin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelPlugin, id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelPlugin, endpoint_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelPlugin, info_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelPlugin, status_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelPlugin, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListModelsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListModelsRequest, verbose_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListModelsRequest, model_name_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListModelsRequest, model_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::RollbackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::RollbackRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::RollbackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::RollbackResponse, id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::RollbackResponse, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ModelInfoResponse, modelinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ValidateConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ValidateConfigRequest, json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ValidateConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ValidateConfigResponse, valid_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ValidateConfigResponse, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::PathValuesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::PathValuesRequest, pathprefix_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::PathValuesRequest, json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::PathValuesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::PathValuesResponse, pathvalues_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetTransactionRequest, id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetTransactionRequest, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetTransactionResponse, transaction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListTransactionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListTransactionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListTransactionsResponse, transaction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchTransactionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchTransactionsRequest, id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchTransactionsRequest, noreplay_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchTransactionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchTransactionsResponse, event_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetConfigurationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetConfigurationRequest, configuration_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetConfigurationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::GetConfigurationResponse, configuration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListConfigurationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListConfigurationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::ListConfigurationsResponse, configuration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchConfigurationsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchConfigurationsRequest, configuration_id_),
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchConfigurationsRequest, noreplay_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchConfigurationsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::config::admin::WatchConfigurationsResponse, event_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::config::admin::ReadOnlySubPath)},
  { 13, -1, -1, sizeof(::onos::config::admin::ReadOnlyPath)},
  { 21, -1, -1, sizeof(::onos::config::admin::ReadWritePath)},
  { 38, -1, -1, sizeof(::onos::config::admin::ModelInfo)},
  { 52, -1, -1, sizeof(::onos::config::admin::ModelPlugin)},
  { 63, -1, -1, sizeof(::onos::config::admin::ListModelsRequest)},
  { 72, -1, -1, sizeof(::onos::config::admin::RollbackRequest)},
  { 79, -1, -1, sizeof(::onos::config::admin::RollbackResponse)},
  { 87, -1, -1, sizeof(::onos::config::admin::ModelInfoRequest)},
  { 93, -1, -1, sizeof(::onos::config::admin::ModelInfoResponse)},
  { 100, -1, -1, sizeof(::onos::config::admin::ValidateConfigRequest)},
  { 107, -1, -1, sizeof(::onos::config::admin::ValidateConfigResponse)},
  { 115, -1, -1, sizeof(::onos::config::admin::PathValuesRequest)},
  { 123, -1, -1, sizeof(::onos::config::admin::PathValuesResponse)},
  { 130, -1, -1, sizeof(::onos::config::admin::GetTransactionRequest)},
  { 138, -1, -1, sizeof(::onos::config::admin::GetTransactionResponse)},
  { 145, -1, -1, sizeof(::onos::config::admin::ListTransactionsRequest)},
  { 151, -1, -1, sizeof(::onos::config::admin::ListTransactionsResponse)},
  { 158, -1, -1, sizeof(::onos::config::admin::WatchTransactionsRequest)},
  { 166, -1, -1, sizeof(::onos::config::admin::WatchTransactionsResponse)},
  { 173, -1, -1, sizeof(::onos::config::admin::GetConfigurationRequest)},
  { 180, -1, -1, sizeof(::onos::config::admin::GetConfigurationResponse)},
  { 187, -1, -1, sizeof(::onos::config::admin::ListConfigurationsRequest)},
  { 193, -1, -1, sizeof(::onos::config::admin::ListConfigurationsResponse)},
  { 200, -1, -1, sizeof(::onos::config::admin::WatchConfigurationsRequest)},
  { 208, -1, -1, sizeof(::onos::config::admin::WatchConfigurationsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ReadOnlySubPath_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ReadOnlyPath_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ReadWritePath_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ModelInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ModelPlugin_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ListModelsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_RollbackRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_RollbackResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ModelInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ModelInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ValidateConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ValidateConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_PathValuesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_PathValuesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_GetTransactionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_GetTransactionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ListTransactionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ListTransactionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_WatchTransactionsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_WatchTransactionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_GetConfigurationRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_GetConfigurationResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ListConfigurationsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_ListConfigurationsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_WatchConfigurationsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::config::admin::_WatchConfigurationsResponse_default_instance_),
};

const char descriptor_table_protodef_onos_2fconfig_2fadmin_2fadmin_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035onos/config/admin/admin.proto\022\021onos.co"
  "nfig.admin\032\024gogoproto/gogo.proto\0320github"
  ".com/openconfig/gnmi/proto/gnmi/gnmi.pro"
  "to\032\032onos/config/v2/value.proto\032 onos/con"
  "fig/v2/transaction.proto\032\"onos/config/v2"
  "/configuration.proto\"\253\001\n\017ReadOnlySubPath"
  "\022\020\n\010sub_path\030\001 \001(\t\022-\n\nvalue_type\030\002 \001(\0162\031"
  ".onos.config.v2.ValueType\022\021\n\ttype_opts\030\003"
  " \003(\004\022\023\n\013description\030\004 \001(\t\022\r\n\005units\030\005 \001(\t"
  "\022\016\n\006IsAKey\030\006 \001(\010\022\020\n\010AttrName\030\007 \001(\t\"R\n\014Re"
  "adOnlyPath\022\014\n\004path\030\001 \001(\t\0224\n\010sub_path\030\002 \003"
  "(\0132\".onos.config.admin.ReadOnlySubPath\"\350"
  "\001\n\rReadWritePath\022\014\n\004path\030\001 \001(\t\022-\n\nvalue_"
  "type\030\002 \001(\0162\031.onos.config.v2.ValueType\022\r\n"
  "\005units\030\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\021\n\tman"
  "datory\030\005 \001(\010\022\017\n\007default\030\006 \001(\t\022\r\n\005range\030\007"
  " \003(\t\022\016\n\006length\030\010 \003(\t\022\021\n\ttype_opts\030\t \003(\004\022"
  "\016\n\006IsAKey\030\n \001(\010\022\020\n\010AttrName\030\013 \001(\t\"\226\002\n\tMo"
  "delInfo\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022#"
  "\n\nmodel_data\030\003 \003(\0132\017.gnmi.ModelData\022\016\n\006m"
  "odule\030\004 \001(\t\022\024\n\014getStateMode\030\005 \001(\r\0227\n\016rea"
  "d_only_path\030\007 \003(\0132\037.onos.config.admin.Re"
  "adOnlyPath\0229\n\017read_write_path\030\010 \003(\0132 .on"
  "os.config.admin.ReadWritePath\022+\n\023support"
  "ed_encodings\030\t \003(\0162\016.gnmi.Encoding\"v\n\013Mo"
  "delPlugin\022\n\n\002id\030\001 \001(\t\022\020\n\010endpoint\030\002 \001(\t\022"
  "*\n\004info\030\003 \001(\0132\034.onos.config.admin.ModelI"
  "nfo\022\016\n\006status\030\n \001(\t\022\r\n\005error\030\013 \001(\t\"O\n\021Li"
  "stModelsRequest\022\017\n\007verbose\030\001 \001(\010\022\022\n\nmode"
  "l_name\030\002 \001(\t\022\025\n\rmodel_version\030\003 \001(\t\"]\n\017R"
  "ollbackRequest\022J\n\005index\030\001 \001(\004B;\372\336\0377githu"
  "b.com/onosproject/onos-api/go/onos/confi"
  "g/v2.Index\"\265\001\n\020RollbackResponse\022U\n\002id\030\001 "
  "\001(\tBI\342\336\037\002ID\372\336\037\?github.com/onosproject/on"
  "os-api/go/onos/config/v2.TransactionID\022J"
  "\n\005index\030\002 \001(\004B;\372\336\0377github.com/onosprojec"
  "t/onos-api/go/onos/config/v2.Index\"\022\n\020Mo"
  "delInfoRequest\"D\n\021ModelInfoResponse\022/\n\tm"
  "odelInfo\030\001 \001(\0132\034.onos.config.admin.Model"
  "Info\"%\n\025ValidateConfigRequest\022\014\n\004json\030\001 "
  "\001(\014\"8\n\026ValidateConfigResponse\022\r\n\005valid\030\001"
  " \001(\010\022\017\n\007message\030\002 \001(\t\"5\n\021PathValuesReque"
  "st\022\022\n\npathPrefix\030\001 \001(\t\022\014\n\004json\030\002 \001(\014\"C\n\022"
  "PathValuesResponse\022-\n\npathValues\030\001 \003(\0132\031"
  ".onos.config.v2.PathValue\"\272\001\n\025GetTransac"
  "tionRequest\022U\n\002id\030\001 \001(\tBI\342\336\037\002ID\372\336\037\?githu"
  "b.com/onosproject/onos-api/go/onos/confi"
  "g/v2.TransactionID\022J\n\005index\030\002 \001(\004B;\372\336\0377g"
  "ithub.com/onosproject/onos-api/go/onos/c"
  "onfig/v2.Index\"J\n\026GetTransactionResponse"
  "\0220\n\013transaction\030\001 \001(\0132\033.onos.config.v2.T"
  "ransaction\"\031\n\027ListTransactionsRequest\"L\n"
  "\030ListTransactionsResponse\0220\n\013transaction"
  "\030\001 \001(\0132\033.onos.config.v2.Transaction\"\203\001\n\030"
  "WatchTransactionsRequest\022U\n\002id\030\001 \001(\tBI\342\336"
  "\037\002ID\372\336\037\?github.com/onosproject/onos-api/"
  "go/onos/config/v2.TransactionID\022\020\n\010norep"
  "lay\030\002 \001(\010\"V\n\031WatchTransactionsResponse\0229"
  "\n\005event\030\001 \001(\0132 .onos.config.v2.Transacti"
  "onEventB\010\320\336\037\001\310\336\037\000\"\215\001\n\027GetConfigurationRe"
  "quest\022r\n\020configuration_id\030\001 \001(\tBX\342\336\037\017Con"
  "figurationID\372\336\037Agithub.com/onosproject/o"
  "nos-api/go/onos/config/v2.ConfigurationI"
  "D\"P\n\030GetConfigurationResponse\0224\n\rconfigu"
  "ration\030\001 \001(\0132\035.onos.config.v2.Configurat"
  "ion\"\033\n\031ListConfigurationsRequest\"R\n\032List"
  "ConfigurationsResponse\0224\n\rconfiguration\030"
  "\001 \001(\0132\035.onos.config.v2.Configuration\"\242\001\n"
  "\032WatchConfigurationsRequest\022r\n\020configura"
  "tion_id\030\001 \001(\tBX\342\336\037\017ConfigurationID\372\336\037Agi"
  "thub.com/onosproject/onos-api/go/onos/co"
  "nfig/v2.ConfigurationID\022\020\n\010noreplay\030\002 \001("
  "\010\"Z\n\033WatchConfigurationsResponse\022;\n\005even"
  "t\030\001 \001(\0132\".onos.config.v2.ConfigurationEv"
  "entB\010\320\336\037\001\310\336\037\0002\324\001\n\022ConfigAdminService\022^\n\024"
  "ListRegisteredModels\022$.onos.config.admin"
  ".ListModelsRequest\032\036.onos.config.admin.M"
  "odelPlugin0\001\022^\n\023RollbackTransaction\022\".on"
  "os.config.admin.RollbackRequest\032#.onos.c"
  "onfig.admin.RollbackResponse2\264\002\n\022ModelPl"
  "uginService\022Y\n\014GetModelInfo\022#.onos.confi"
  "g.admin.ModelInfoRequest\032$.onos.config.a"
  "dmin.ModelInfoResponse\022e\n\016ValidateConfig"
  "\022(.onos.config.admin.ValidateConfigReque"
  "st\032).onos.config.admin.ValidateConfigRes"
  "ponse\022\\\n\rGetPathValues\022$.onos.config.adm"
  "in.PathValuesRequest\032%.onos.config.admin"
  ".PathValuesResponse2\342\002\n\022TransactionServi"
  "ce\022g\n\016GetTransaction\022(.onos.config.admin"
  ".GetTransactionRequest\032).onos.config.adm"
  "in.GetTransactionResponse\"\000\022o\n\020ListTrans"
  "actions\022*.onos.config.admin.ListTransact"
  "ionsRequest\032+.onos.config.admin.ListTran"
  "sactionsResponse\"\0000\001\022r\n\021WatchTransaction"
  "s\022+.onos.config.admin.WatchTransactionsR"
  "equest\032,.onos.config.admin.WatchTransact"
  "ionsResponse\"\0000\0012\366\002\n\024ConfigurationServic"
  "e\022m\n\020GetConfiguration\022*.onos.config.admi"
  "n.GetConfigurationRequest\032+.onos.config."
  "admin.GetConfigurationResponse\"\000\022u\n\022List"
  "Configurations\022,.onos.config.admin.ListC"
  "onfigurationsRequest\032-.onos.config.admin"
  ".ListConfigurationsResponse\"\0000\001\022x\n\023Watch"
  "Configurations\022-.onos.config.admin.Watch"
  "ConfigurationsRequest\032..onos.config.admi"
  "n.WatchConfigurationsResponse\"\0000\001b\006proto"
  "3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_deps[5] = {
  &::descriptor_table_github_2ecom_2fopenconfig_2fgnmi_2fproto_2fgnmi_2fgnmi_2eproto,
  &::descriptor_table_gogoproto_2fgogo_2eproto,
  &::descriptor_table_onos_2fconfig_2fv2_2fconfiguration_2eproto,
  &::descriptor_table_onos_2fconfig_2fv2_2ftransaction_2eproto,
  &::descriptor_table_onos_2fconfig_2fv2_2fvalue_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto = {
  false, false, 4241, descriptor_table_protodef_onos_2fconfig_2fadmin_2fadmin_2eproto, "onos/config/admin/admin.proto", 
  &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once, descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_deps, 5, 26,
  schemas, file_default_instances, TableStruct_onos_2fconfig_2fadmin_2fadmin_2eproto::offsets,
  file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto, file_level_enum_descriptors_onos_2fconfig_2fadmin_2fadmin_2eproto, file_level_service_descriptors_onos_2fconfig_2fadmin_2fadmin_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter() {
  return &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fconfig_2fadmin_2fadmin_2eproto(&descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto);
namespace onos {
namespace config {
namespace admin {

// ===================================================================

class ReadOnlySubPath::_Internal {
 public:
};

ReadOnlySubPath::ReadOnlySubPath(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  type_opts_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ReadOnlySubPath)
}
ReadOnlySubPath::ReadOnlySubPath(const ReadOnlySubPath& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      type_opts_(from.type_opts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sub_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sub_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sub_path().empty()) {
    sub_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sub_path(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  units_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    units_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_units().empty()) {
    units_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_units(), 
      GetArenaForAllocation());
  }
  attrname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    attrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_attrname().empty()) {
    attrname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_attrname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&value_type_, &from.value_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&isakey_) -
    reinterpret_cast<char*>(&value_type_)) + sizeof(isakey_));
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ReadOnlySubPath)
}

inline void ReadOnlySubPath::SharedCtor() {
sub_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sub_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
units_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  units_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
attrname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  attrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&isakey_) -
    reinterpret_cast<char*>(&value_type_)) + sizeof(isakey_));
}

ReadOnlySubPath::~ReadOnlySubPath() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ReadOnlySubPath)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ReadOnlySubPath::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sub_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  units_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  attrname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReadOnlySubPath::ArenaDtor(void* object) {
  ReadOnlySubPath* _this = reinterpret_cast< ReadOnlySubPath* >(object);
  (void)_this;
}
void ReadOnlySubPath::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadOnlySubPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadOnlySubPath::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ReadOnlySubPath)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_opts_.Clear();
  sub_path_.ClearToEmpty();
  description_.ClearToEmpty();
  units_.ClearToEmpty();
  attrname_.ClearToEmpty();
  ::memset(&value_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isakey_) -
      reinterpret_cast<char*>(&value_type_)) + sizeof(isakey_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadOnlySubPath::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sub_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sub_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadOnlySubPath.sub_path"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ValueType value_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_value_type(static_cast<::onos::config::v2::ValueType>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 type_opts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_type_opts(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_type_opts(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadOnlySubPath.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string units = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_units();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadOnlySubPath.units"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool IsAKey = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          isakey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string AttrName = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_attrname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadOnlySubPath.AttrName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadOnlySubPath::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ReadOnlySubPath)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sub_path = 1;
  if (!this->_internal_sub_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sub_path().data(), static_cast<int>(this->_internal_sub_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadOnlySubPath.sub_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sub_path(), target);
  }

  // .onos.config.v2.ValueType value_type = 2;
  if (this->_internal_value_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_value_type(), target);
  }

  // repeated uint64 type_opts = 3;
  {
    int byte_size = _type_opts_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_type_opts(), byte_size, target);
    }
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadOnlySubPath.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // string units = 5;
  if (!this->_internal_units().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_units().data(), static_cast<int>(this->_internal_units().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadOnlySubPath.units");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_units(), target);
  }

  // bool IsAKey = 6;
  if (this->_internal_isakey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_isakey(), target);
  }

  // string AttrName = 7;
  if (!this->_internal_attrname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attrname().data(), static_cast<int>(this->_internal_attrname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadOnlySubPath.AttrName");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_attrname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ReadOnlySubPath)
  return target;
}

size_t ReadOnlySubPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ReadOnlySubPath)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 type_opts = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->type_opts_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _type_opts_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string sub_path = 1;
  if (!this->_internal_sub_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sub_path());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string units = 5;
  if (!this->_internal_units().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_units());
  }

  // string AttrName = 7;
  if (!this->_internal_attrname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attrname());
  }

  // .onos.config.v2.ValueType value_type = 2;
  if (this->_internal_value_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_value_type());
  }

  // bool IsAKey = 6;
  if (this->_internal_isakey() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadOnlySubPath::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadOnlySubPath::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadOnlySubPath::GetClassData() const { return &_class_data_; }

void ReadOnlySubPath::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadOnlySubPath *>(to)->MergeFrom(
      static_cast<const ReadOnlySubPath &>(from));
}


void ReadOnlySubPath::MergeFrom(const ReadOnlySubPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ReadOnlySubPath)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  type_opts_.MergeFrom(from.type_opts_);
  if (!from._internal_sub_path().empty()) {
    _internal_set_sub_path(from._internal_sub_path());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_units().empty()) {
    _internal_set_units(from._internal_units());
  }
  if (!from._internal_attrname().empty()) {
    _internal_set_attrname(from._internal_attrname());
  }
  if (from._internal_value_type() != 0) {
    _internal_set_value_type(from._internal_value_type());
  }
  if (from._internal_isakey() != 0) {
    _internal_set_isakey(from._internal_isakey());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadOnlySubPath::CopyFrom(const ReadOnlySubPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ReadOnlySubPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOnlySubPath::IsInitialized() const {
  return true;
}

void ReadOnlySubPath::InternalSwap(ReadOnlySubPath* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  type_opts_.InternalSwap(&other->type_opts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sub_path_, lhs_arena,
      &other->sub_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &units_, lhs_arena,
      &other->units_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &attrname_, lhs_arena,
      &other->attrname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadOnlySubPath, isakey_)
      + sizeof(ReadOnlySubPath::isakey_)
      - PROTOBUF_FIELD_OFFSET(ReadOnlySubPath, value_type_)>(
          reinterpret_cast<char*>(&value_type_),
          reinterpret_cast<char*>(&other->value_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadOnlySubPath::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[0]);
}

// ===================================================================

class ReadOnlyPath::_Internal {
 public:
};

ReadOnlyPath::ReadOnlyPath(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  sub_path_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ReadOnlyPath)
}
ReadOnlyPath::ReadOnlyPath(const ReadOnlyPath& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sub_path_(from.sub_path_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ReadOnlyPath)
}

inline void ReadOnlyPath::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReadOnlyPath::~ReadOnlyPath() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ReadOnlyPath)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ReadOnlyPath::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReadOnlyPath::ArenaDtor(void* object) {
  ReadOnlyPath* _this = reinterpret_cast< ReadOnlyPath* >(object);
  (void)_this;
}
void ReadOnlyPath::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadOnlyPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadOnlyPath::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ReadOnlyPath)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sub_path_.Clear();
  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadOnlyPath::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadOnlyPath.path"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .onos.config.admin.ReadOnlySubPath sub_path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sub_path(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadOnlyPath::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ReadOnlyPath)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadOnlyPath.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // repeated .onos.config.admin.ReadOnlySubPath sub_path = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_sub_path_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_sub_path(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ReadOnlyPath)
  return target;
}

size_t ReadOnlyPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ReadOnlyPath)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.config.admin.ReadOnlySubPath sub_path = 2;
  total_size += 1UL * this->_internal_sub_path_size();
  for (const auto& msg : this->sub_path_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadOnlyPath::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadOnlyPath::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadOnlyPath::GetClassData() const { return &_class_data_; }

void ReadOnlyPath::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadOnlyPath *>(to)->MergeFrom(
      static_cast<const ReadOnlyPath &>(from));
}


void ReadOnlyPath::MergeFrom(const ReadOnlyPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ReadOnlyPath)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  sub_path_.MergeFrom(from.sub_path_);
  if (!from._internal_path().empty()) {
    _internal_set_path(from._internal_path());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadOnlyPath::CopyFrom(const ReadOnlyPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ReadOnlyPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadOnlyPath::IsInitialized() const {
  return true;
}

void ReadOnlyPath::InternalSwap(ReadOnlyPath* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  sub_path_.InternalSwap(&other->sub_path_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &path_, lhs_arena,
      &other->path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadOnlyPath::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[1]);
}

// ===================================================================

class ReadWritePath::_Internal {
 public:
};

ReadWritePath::ReadWritePath(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  range_(arena),
  length_(arena),
  type_opts_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ReadWritePath)
}
ReadWritePath::ReadWritePath(const ReadWritePath& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      range_(from.range_),
      length_(from.length_),
      type_opts_(from.type_opts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArenaForAllocation());
  }
  units_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    units_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_units().empty()) {
    units_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_units(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_().empty()) {
    default__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_default_(), 
      GetArenaForAllocation());
  }
  attrname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    attrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_attrname().empty()) {
    attrname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_attrname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&value_type_, &from.value_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&isakey_) -
    reinterpret_cast<char*>(&value_type_)) + sizeof(isakey_));
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ReadWritePath)
}

inline void ReadWritePath::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
units_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  units_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
default__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  default__.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
attrname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  attrname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&isakey_) -
    reinterpret_cast<char*>(&value_type_)) + sizeof(isakey_));
}

ReadWritePath::~ReadWritePath() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ReadWritePath)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ReadWritePath::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  units_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  attrname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReadWritePath::ArenaDtor(void* object) {
  ReadWritePath* _this = reinterpret_cast< ReadWritePath* >(object);
  (void)_this;
}
void ReadWritePath::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReadWritePath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ReadWritePath::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ReadWritePath)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  range_.Clear();
  length_.Clear();
  type_opts_.Clear();
  path_.ClearToEmpty();
  units_.ClearToEmpty();
  description_.ClearToEmpty();
  default__.ClearToEmpty();
  attrname_.ClearToEmpty();
  ::memset(&value_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isakey_) -
      reinterpret_cast<char*>(&value_type_)) + sizeof(isakey_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReadWritePath::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadWritePath.path"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.v2.ValueType value_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_value_type(static_cast<::onos::config::v2::ValueType>(val));
        } else
          goto handle_unusual;
        continue;
      // string units = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_units();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadWritePath.units"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadWritePath.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool mandatory = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          mandatory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string default = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_default_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadWritePath.default"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string range = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_range();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadWritePath.range"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string length = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_length();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadWritePath.length"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 type_opts = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_type_opts(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 72) {
          _internal_add_type_opts(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool IsAKey = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          isakey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string AttrName = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_attrname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ReadWritePath.AttrName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReadWritePath::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ReadWritePath)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadWritePath.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // .onos.config.v2.ValueType value_type = 2;
  if (this->_internal_value_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_value_type(), target);
  }

  // string units = 3;
  if (!this->_internal_units().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_units().data(), static_cast<int>(this->_internal_units().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadWritePath.units");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_units(), target);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadWritePath.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // bool mandatory = 5;
  if (this->_internal_mandatory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_mandatory(), target);
  }

  // string default = 6;
  if (!this->_internal_default_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_().data(), static_cast<int>(this->_internal_default_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadWritePath.default");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_default_(), target);
  }

  // repeated string range = 7;
  for (int i = 0, n = this->_internal_range_size(); i < n; i++) {
    const auto& s = this->_internal_range(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadWritePath.range");
    target = stream->WriteString(7, s, target);
  }

  // repeated string length = 8;
  for (int i = 0, n = this->_internal_length_size(); i < n; i++) {
    const auto& s = this->_internal_length(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadWritePath.length");
    target = stream->WriteString(8, s, target);
  }

  // repeated uint64 type_opts = 9;
  {
    int byte_size = _type_opts_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          9, _internal_type_opts(), byte_size, target);
    }
  }

  // bool IsAKey = 10;
  if (this->_internal_isakey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_isakey(), target);
  }

  // string AttrName = 11;
  if (!this->_internal_attrname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attrname().data(), static_cast<int>(this->_internal_attrname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ReadWritePath.AttrName");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_attrname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ReadWritePath)
  return target;
}

size_t ReadWritePath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ReadWritePath)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string range = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(range_.size());
  for (int i = 0, n = range_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      range_.Get(i));
  }

  // repeated string length = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(length_.size());
  for (int i = 0, n = length_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      length_.Get(i));
  }

  // repeated uint64 type_opts = 9;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->type_opts_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _type_opts_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string units = 3;
  if (!this->_internal_units().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_units());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string default = 6;
  if (!this->_internal_default_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_());
  }

  // string AttrName = 11;
  if (!this->_internal_attrname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attrname());
  }

  // .onos.config.v2.ValueType value_type = 2;
  if (this->_internal_value_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_value_type());
  }

  // bool mandatory = 5;
  if (this->_internal_mandatory() != 0) {
    total_size += 1 + 1;
  }

  // bool IsAKey = 10;
  if (this->_internal_isakey() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReadWritePath::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ReadWritePath::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReadWritePath::GetClassData() const { return &_class_data_; }

void ReadWritePath::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ReadWritePath *>(to)->MergeFrom(
      static_cast<const ReadWritePath &>(from));
}


void ReadWritePath::MergeFrom(const ReadWritePath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ReadWritePath)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  range_.MergeFrom(from.range_);
  length_.MergeFrom(from.length_);
  type_opts_.MergeFrom(from.type_opts_);
  if (!from._internal_path().empty()) {
    _internal_set_path(from._internal_path());
  }
  if (!from._internal_units().empty()) {
    _internal_set_units(from._internal_units());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_default_().empty()) {
    _internal_set_default_(from._internal_default_());
  }
  if (!from._internal_attrname().empty()) {
    _internal_set_attrname(from._internal_attrname());
  }
  if (from._internal_value_type() != 0) {
    _internal_set_value_type(from._internal_value_type());
  }
  if (from._internal_mandatory() != 0) {
    _internal_set_mandatory(from._internal_mandatory());
  }
  if (from._internal_isakey() != 0) {
    _internal_set_isakey(from._internal_isakey());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReadWritePath::CopyFrom(const ReadWritePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ReadWritePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadWritePath::IsInitialized() const {
  return true;
}

void ReadWritePath::InternalSwap(ReadWritePath* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  range_.InternalSwap(&other->range_);
  length_.InternalSwap(&other->length_);
  type_opts_.InternalSwap(&other->type_opts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &path_, lhs_arena,
      &other->path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &units_, lhs_arena,
      &other->units_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &default__, lhs_arena,
      &other->default__, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &attrname_, lhs_arena,
      &other->attrname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReadWritePath, isakey_)
      + sizeof(ReadWritePath::isakey_)
      - PROTOBUF_FIELD_OFFSET(ReadWritePath, value_type_)>(
          reinterpret_cast<char*>(&value_type_),
          reinterpret_cast<char*>(&other->value_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReadWritePath::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[2]);
}

// ===================================================================

class ModelInfo::_Internal {
 public:
};

void ModelInfo::clear_model_data() {
  model_data_.Clear();
}
ModelInfo::ModelInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  model_data_(arena),
  read_only_path_(arena),
  read_write_path_(arena),
  supported_encodings_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ModelInfo)
}
ModelInfo::ModelInfo(const ModelInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      model_data_(from.model_data_),
      read_only_path_(from.read_only_path_),
      read_write_path_(from.read_write_path_),
      supported_encodings_(from.supported_encodings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArenaForAllocation());
  }
  module_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    module_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_module().empty()) {
    module_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_module(), 
      GetArenaForAllocation());
  }
  getstatemode_ = from.getstatemode_;
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ModelInfo)
}

inline void ModelInfo::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
module_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  module_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
getstatemode_ = 0u;
}

ModelInfo::~ModelInfo() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ModelInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ModelInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  module_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelInfo::ArenaDtor(void* object) {
  ModelInfo* _this = reinterpret_cast< ModelInfo* >(object);
  (void)_this;
}
void ModelInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ModelInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_data_.Clear();
  read_only_path_.Clear();
  read_write_path_.Clear();
  supported_encodings_.Clear();
  name_.ClearToEmpty();
  version_.ClearToEmpty();
  module_.ClearToEmpty();
  getstatemode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ModelInfo.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ModelInfo.version"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .gnmi.ModelData model_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_model_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string module = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_module();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ModelInfo.module"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 getStateMode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          getstatemode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .onos.config.admin.ReadOnlyPath read_only_path = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_read_only_path(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .onos.config.admin.ReadWritePath read_write_path = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_read_write_path(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .gnmi.Encoding supported_encodings = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_supported_encodings(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 72) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_supported_encodings(static_cast<::gnmi::Encoding>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ModelInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ModelInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ModelInfo.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  // repeated .gnmi.ModelData model_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_model_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_model_data(i), target, stream);
  }

  // string module = 4;
  if (!this->_internal_module().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_module().data(), static_cast<int>(this->_internal_module().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ModelInfo.module");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_module(), target);
  }

  // uint32 getStateMode = 5;
  if (this->_internal_getstatemode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_getstatemode(), target);
  }

  // repeated .onos.config.admin.ReadOnlyPath read_only_path = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_read_only_path_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_read_only_path(i), target, stream);
  }

  // repeated .onos.config.admin.ReadWritePath read_write_path = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_read_write_path_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_read_write_path(i), target, stream);
  }

  // repeated .gnmi.Encoding supported_encodings = 9;
  {
    int byte_size = _supported_encodings_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          9, supported_encodings_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ModelInfo)
  return target;
}

size_t ModelInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ModelInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gnmi.ModelData model_data = 3;
  total_size += 1UL * this->_internal_model_data_size();
  for (const auto& msg : this->model_data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .onos.config.admin.ReadOnlyPath read_only_path = 7;
  total_size += 1UL * this->_internal_read_only_path_size();
  for (const auto& msg : this->read_only_path_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .onos.config.admin.ReadWritePath read_write_path = 8;
  total_size += 1UL * this->_internal_read_write_path_size();
  for (const auto& msg : this->read_write_path_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .gnmi.Encoding supported_encodings = 9;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_supported_encodings_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_supported_encodings(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _supported_encodings_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string module = 4;
  if (!this->_internal_module().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_module());
  }

  // uint32 getStateMode = 5;
  if (this->_internal_getstatemode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_getstatemode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInfo::GetClassData() const { return &_class_data_; }

void ModelInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelInfo *>(to)->MergeFrom(
      static_cast<const ModelInfo &>(from));
}


void ModelInfo::MergeFrom(const ModelInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ModelInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  model_data_.MergeFrom(from.model_data_);
  read_only_path_.MergeFrom(from.read_only_path_);
  read_write_path_.MergeFrom(from.read_write_path_);
  supported_encodings_.MergeFrom(from.supported_encodings_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _internal_set_version(from._internal_version());
  }
  if (!from._internal_module().empty()) {
    _internal_set_module(from._internal_module());
  }
  if (from._internal_getstatemode() != 0) {
    _internal_set_getstatemode(from._internal_getstatemode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInfo::CopyFrom(const ModelInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ModelInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInfo::IsInitialized() const {
  return true;
}

void ModelInfo::InternalSwap(ModelInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  model_data_.InternalSwap(&other->model_data_);
  read_only_path_.InternalSwap(&other->read_only_path_);
  read_write_path_.InternalSwap(&other->read_write_path_);
  supported_encodings_.InternalSwap(&other->supported_encodings_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &version_, lhs_arena,
      &other->version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &module_, lhs_arena,
      &other->module_, rhs_arena
  );
  swap(getstatemode_, other->getstatemode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[3]);
}

// ===================================================================

class ModelPlugin::_Internal {
 public:
  static const ::onos::config::admin::ModelInfo& info(const ModelPlugin* msg);
};

const ::onos::config::admin::ModelInfo&
ModelPlugin::_Internal::info(const ModelPlugin* msg) {
  return *msg->info_;
}
ModelPlugin::ModelPlugin(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ModelPlugin)
}
ModelPlugin::ModelPlugin(const ModelPlugin& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_endpoint().empty()) {
    endpoint_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_endpoint(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error().empty()) {
    error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_info()) {
    info_ = new ::onos::config::admin::ModelInfo(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ModelPlugin)
}

inline void ModelPlugin::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
endpoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  endpoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
info_ = nullptr;
}

ModelPlugin::~ModelPlugin() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ModelPlugin)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ModelPlugin::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endpoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void ModelPlugin::ArenaDtor(void* object) {
  ModelPlugin* _this = reinterpret_cast< ModelPlugin* >(object);
  (void)_this;
}
void ModelPlugin::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelPlugin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelPlugin::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ModelPlugin)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  endpoint_.ClearToEmpty();
  status_.ClearToEmpty();
  error_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelPlugin::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ModelPlugin.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string endpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_endpoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ModelPlugin.endpoint"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.config.admin.ModelInfo info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string status = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ModelPlugin.status"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ModelPlugin.error"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelPlugin::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ModelPlugin)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ModelPlugin.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string endpoint = 2;
  if (!this->_internal_endpoint().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endpoint().data(), static_cast<int>(this->_internal_endpoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ModelPlugin.endpoint");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_endpoint(), target);
  }

  // .onos.config.admin.ModelInfo info = 3;
  if (this->_internal_has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::info(this), target, stream);
  }

  // string status = 10;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ModelPlugin.status");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_status(), target);
  }

  // string error = 11;
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ModelPlugin.error");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ModelPlugin)
  return target;
}

size_t ModelPlugin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ModelPlugin)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string endpoint = 2;
  if (!this->_internal_endpoint().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endpoint());
  }

  // string status = 10;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string error = 11;
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // .onos.config.admin.ModelInfo info = 3;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelPlugin::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelPlugin::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelPlugin::GetClassData() const { return &_class_data_; }

void ModelPlugin::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelPlugin *>(to)->MergeFrom(
      static_cast<const ModelPlugin &>(from));
}


void ModelPlugin::MergeFrom(const ModelPlugin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ModelPlugin)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_endpoint().empty()) {
    _internal_set_endpoint(from._internal_endpoint());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  if (from._internal_has_info()) {
    _internal_mutable_info()->::onos::config::admin::ModelInfo::MergeFrom(from._internal_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelPlugin::CopyFrom(const ModelPlugin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ModelPlugin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelPlugin::IsInitialized() const {
  return true;
}

void ModelPlugin::InternalSwap(ModelPlugin* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &endpoint_, lhs_arena,
      &other->endpoint_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, lhs_arena,
      &other->status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_, lhs_arena,
      &other->error_, rhs_arena
  );
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelPlugin::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[4]);
}

// ===================================================================

class ListModelsRequest::_Internal {
 public:
};

ListModelsRequest::ListModelsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ListModelsRequest)
}
ListModelsRequest::ListModelsRequest(const ListModelsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_name().empty()) {
    model_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_model_name(), 
      GetArenaForAllocation());
  }
  model_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    model_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_model_version().empty()) {
    model_version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_model_version(), 
      GetArenaForAllocation());
  }
  verbose_ = from.verbose_;
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ListModelsRequest)
}

inline void ListModelsRequest::SharedCtor() {
model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
model_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  model_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
verbose_ = false;
}

ListModelsRequest::~ListModelsRequest() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ListModelsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListModelsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListModelsRequest::ArenaDtor(void* object) {
  ListModelsRequest* _this = reinterpret_cast< ListModelsRequest* >(object);
  (void)_this;
}
void ListModelsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListModelsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListModelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ListModelsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_name_.ClearToEmpty();
  model_version_.ClearToEmpty();
  verbose_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListModelsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool verbose = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          verbose_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string model_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ListModelsRequest.model_name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string model_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_model_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ListModelsRequest.model_version"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListModelsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ListModelsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool verbose = 1;
  if (this->_internal_verbose() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_verbose(), target);
  }

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ListModelsRequest.model_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_name(), target);
  }

  // string model_version = 3;
  if (!this->_internal_model_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_model_version().data(), static_cast<int>(this->_internal_model_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ListModelsRequest.model_version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_model_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ListModelsRequest)
  return target;
}

size_t ListModelsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ListModelsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string model_name = 2;
  if (!this->_internal_model_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_name());
  }

  // string model_version = 3;
  if (!this->_internal_model_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_model_version());
  }

  // bool verbose = 1;
  if (this->_internal_verbose() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListModelsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListModelsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListModelsRequest::GetClassData() const { return &_class_data_; }

void ListModelsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListModelsRequest *>(to)->MergeFrom(
      static_cast<const ListModelsRequest &>(from));
}


void ListModelsRequest::MergeFrom(const ListModelsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ListModelsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_model_name().empty()) {
    _internal_set_model_name(from._internal_model_name());
  }
  if (!from._internal_model_version().empty()) {
    _internal_set_model_version(from._internal_model_version());
  }
  if (from._internal_verbose() != 0) {
    _internal_set_verbose(from._internal_verbose());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListModelsRequest::CopyFrom(const ListModelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ListModelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListModelsRequest::IsInitialized() const {
  return true;
}

void ListModelsRequest::InternalSwap(ListModelsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &model_name_, lhs_arena,
      &other->model_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &model_version_, lhs_arena,
      &other->model_version_, rhs_arena
  );
  swap(verbose_, other->verbose_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListModelsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[5]);
}

// ===================================================================

class RollbackRequest::_Internal {
 public:
};

RollbackRequest::RollbackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.RollbackRequest)
}
RollbackRequest::RollbackRequest(const RollbackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.RollbackRequest)
}

inline void RollbackRequest::SharedCtor() {
index_ = uint64_t{0u};
}

RollbackRequest::~RollbackRequest() {
  // @@protoc_insertion_point(destructor:onos.config.admin.RollbackRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RollbackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RollbackRequest::ArenaDtor(void* object) {
  RollbackRequest* _this = reinterpret_cast< RollbackRequest* >(object);
  (void)_this;
}
void RollbackRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RollbackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RollbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.RollbackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RollbackRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 index = 1 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RollbackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.RollbackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.RollbackRequest)
  return target;
}

size_t RollbackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.RollbackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 index = 1 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RollbackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RollbackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RollbackRequest::GetClassData() const { return &_class_data_; }

void RollbackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RollbackRequest *>(to)->MergeFrom(
      static_cast<const RollbackRequest &>(from));
}


void RollbackRequest::MergeFrom(const RollbackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.RollbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackRequest::CopyFrom(const RollbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.RollbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackRequest::IsInitialized() const {
  return true;
}

void RollbackRequest::InternalSwap(RollbackRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RollbackRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[6]);
}

// ===================================================================

class RollbackResponse::_Internal {
 public:
};

RollbackResponse::RollbackResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.RollbackResponse)
}
RollbackResponse::RollbackResponse(const RollbackResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.RollbackResponse)
}

inline void RollbackResponse::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
index_ = uint64_t{0u};
}

RollbackResponse::~RollbackResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.RollbackResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RollbackResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RollbackResponse::ArenaDtor(void* object) {
  RollbackResponse* _this = reinterpret_cast< RollbackResponse* >(object);
  (void)_this;
}
void RollbackResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RollbackResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RollbackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.RollbackResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  index_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RollbackResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.RollbackResponse.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 index = 2 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RollbackResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.RollbackResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.RollbackResponse.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // uint64 index = 2 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.RollbackResponse)
  return target;
}

size_t RollbackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.RollbackResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // uint64 index = 2 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RollbackResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RollbackResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RollbackResponse::GetClassData() const { return &_class_data_; }

void RollbackResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RollbackResponse *>(to)->MergeFrom(
      static_cast<const RollbackResponse &>(from));
}


void RollbackResponse::MergeFrom(const RollbackResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.RollbackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RollbackResponse::CopyFrom(const RollbackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.RollbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RollbackResponse::IsInitialized() const {
  return true;
}

void RollbackResponse::InternalSwap(RollbackResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RollbackResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[7]);
}

// ===================================================================

class ModelInfoRequest::_Internal {
 public:
};

ModelInfoRequest::ModelInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ModelInfoRequest)
}
ModelInfoRequest::ModelInfoRequest(const ModelInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ModelInfoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInfoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ModelInfoRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[8]);
}

// ===================================================================

class ModelInfoResponse::_Internal {
 public:
  static const ::onos::config::admin::ModelInfo& modelinfo(const ModelInfoResponse* msg);
};

const ::onos::config::admin::ModelInfo&
ModelInfoResponse::_Internal::modelinfo(const ModelInfoResponse* msg) {
  return *msg->modelinfo_;
}
ModelInfoResponse::ModelInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ModelInfoResponse)
}
ModelInfoResponse::ModelInfoResponse(const ModelInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_modelinfo()) {
    modelinfo_ = new ::onos::config::admin::ModelInfo(*from.modelinfo_);
  } else {
    modelinfo_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ModelInfoResponse)
}

inline void ModelInfoResponse::SharedCtor() {
modelinfo_ = nullptr;
}

ModelInfoResponse::~ModelInfoResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ModelInfoResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ModelInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete modelinfo_;
}

void ModelInfoResponse::ArenaDtor(void* object) {
  ModelInfoResponse* _this = reinterpret_cast< ModelInfoResponse* >(object);
  (void)_this;
}
void ModelInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ModelInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && modelinfo_ != nullptr) {
    delete modelinfo_;
  }
  modelinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.admin.ModelInfo modelInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_modelinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ModelInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.admin.ModelInfo modelInfo = 1;
  if (this->_internal_has_modelinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::modelinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ModelInfoResponse)
  return target;
}

size_t ModelInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ModelInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.admin.ModelInfo modelInfo = 1;
  if (this->_internal_has_modelinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *modelinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelInfoResponse::GetClassData() const { return &_class_data_; }

void ModelInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelInfoResponse *>(to)->MergeFrom(
      static_cast<const ModelInfoResponse &>(from));
}


void ModelInfoResponse::MergeFrom(const ModelInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ModelInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_modelinfo()) {
    _internal_mutable_modelinfo()->::onos::config::admin::ModelInfo::MergeFrom(from._internal_modelinfo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelInfoResponse::CopyFrom(const ModelInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ModelInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelInfoResponse::IsInitialized() const {
  return true;
}

void ModelInfoResponse::InternalSwap(ModelInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(modelinfo_, other->modelinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelInfoResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[9]);
}

// ===================================================================

class ValidateConfigRequest::_Internal {
 public:
};

ValidateConfigRequest::ValidateConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ValidateConfigRequest)
}
ValidateConfigRequest::ValidateConfigRequest(const ValidateConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_json().empty()) {
    json_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_json(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ValidateConfigRequest)
}

inline void ValidateConfigRequest::SharedCtor() {
json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ValidateConfigRequest::~ValidateConfigRequest() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ValidateConfigRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ValidateConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateConfigRequest::ArenaDtor(void* object) {
  ValidateConfigRequest* _this = reinterpret_cast< ValidateConfigRequest* >(object);
  (void)_this;
}
void ValidateConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ValidateConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ValidateConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  json_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes json = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ValidateConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ValidateConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes json = 1;
  if (!this->_internal_json().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ValidateConfigRequest)
  return target;
}

size_t ValidateConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ValidateConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes json = 1;
  if (!this->_internal_json().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_json());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ValidateConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ValidateConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ValidateConfigRequest::GetClassData() const { return &_class_data_; }

void ValidateConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ValidateConfigRequest *>(to)->MergeFrom(
      static_cast<const ValidateConfigRequest &>(from));
}


void ValidateConfigRequest::MergeFrom(const ValidateConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ValidateConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_json().empty()) {
    _internal_set_json(from._internal_json());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateConfigRequest::CopyFrom(const ValidateConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ValidateConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateConfigRequest::IsInitialized() const {
  return true;
}

void ValidateConfigRequest::InternalSwap(ValidateConfigRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &json_, lhs_arena,
      &other->json_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateConfigRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[10]);
}

// ===================================================================

class ValidateConfigResponse::_Internal {
 public:
};

ValidateConfigResponse::ValidateConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ValidateConfigResponse)
}
ValidateConfigResponse::ValidateConfigResponse(const ValidateConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  valid_ = from.valid_;
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ValidateConfigResponse)
}

inline void ValidateConfigResponse::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
valid_ = false;
}

ValidateConfigResponse::~ValidateConfigResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ValidateConfigResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ValidateConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ValidateConfigResponse::ArenaDtor(void* object) {
  ValidateConfigResponse* _this = reinterpret_cast< ValidateConfigResponse* >(object);
  (void)_this;
}
void ValidateConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ValidateConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ValidateConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ValidateConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  valid_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ValidateConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool valid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          valid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.ValidateConfigResponse.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ValidateConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ValidateConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool valid = 1;
  if (this->_internal_valid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_valid(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.ValidateConfigResponse.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ValidateConfigResponse)
  return target;
}

size_t ValidateConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ValidateConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool valid = 1;
  if (this->_internal_valid() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ValidateConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ValidateConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ValidateConfigResponse::GetClassData() const { return &_class_data_; }

void ValidateConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ValidateConfigResponse *>(to)->MergeFrom(
      static_cast<const ValidateConfigResponse &>(from));
}


void ValidateConfigResponse::MergeFrom(const ValidateConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ValidateConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_valid() != 0) {
    _internal_set_valid(from._internal_valid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateConfigResponse::CopyFrom(const ValidateConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ValidateConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateConfigResponse::IsInitialized() const {
  return true;
}

void ValidateConfigResponse::InternalSwap(ValidateConfigResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(valid_, other->valid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ValidateConfigResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[11]);
}

// ===================================================================

class PathValuesRequest::_Internal {
 public:
};

PathValuesRequest::PathValuesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.PathValuesRequest)
}
PathValuesRequest::PathValuesRequest(const PathValuesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pathprefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pathprefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pathprefix().empty()) {
    pathprefix_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pathprefix(), 
      GetArenaForAllocation());
  }
  json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_json().empty()) {
    json_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_json(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.PathValuesRequest)
}

inline void PathValuesRequest::SharedCtor() {
pathprefix_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pathprefix_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PathValuesRequest::~PathValuesRequest() {
  // @@protoc_insertion_point(destructor:onos.config.admin.PathValuesRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PathValuesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pathprefix_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PathValuesRequest::ArenaDtor(void* object) {
  PathValuesRequest* _this = reinterpret_cast< PathValuesRequest* >(object);
  (void)_this;
}
void PathValuesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PathValuesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PathValuesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.PathValuesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pathprefix_.ClearToEmpty();
  json_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PathValuesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string pathPrefix = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_pathprefix();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.PathValuesRequest.pathPrefix"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes json = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PathValuesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.PathValuesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string pathPrefix = 1;
  if (!this->_internal_pathprefix().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pathprefix().data(), static_cast<int>(this->_internal_pathprefix().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.PathValuesRequest.pathPrefix");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_pathprefix(), target);
  }

  // bytes json = 2;
  if (!this->_internal_json().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.PathValuesRequest)
  return target;
}

size_t PathValuesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.PathValuesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string pathPrefix = 1;
  if (!this->_internal_pathprefix().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pathprefix());
  }

  // bytes json = 2;
  if (!this->_internal_json().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_json());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PathValuesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PathValuesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PathValuesRequest::GetClassData() const { return &_class_data_; }

void PathValuesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PathValuesRequest *>(to)->MergeFrom(
      static_cast<const PathValuesRequest &>(from));
}


void PathValuesRequest::MergeFrom(const PathValuesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.PathValuesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pathprefix().empty()) {
    _internal_set_pathprefix(from._internal_pathprefix());
  }
  if (!from._internal_json().empty()) {
    _internal_set_json(from._internal_json());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PathValuesRequest::CopyFrom(const PathValuesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.PathValuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathValuesRequest::IsInitialized() const {
  return true;
}

void PathValuesRequest::InternalSwap(PathValuesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pathprefix_, lhs_arena,
      &other->pathprefix_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &json_, lhs_arena,
      &other->json_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PathValuesRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[12]);
}

// ===================================================================

class PathValuesResponse::_Internal {
 public:
};

void PathValuesResponse::clear_pathvalues() {
  pathvalues_.Clear();
}
PathValuesResponse::PathValuesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  pathvalues_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.PathValuesResponse)
}
PathValuesResponse::PathValuesResponse(const PathValuesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pathvalues_(from.pathvalues_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.PathValuesResponse)
}

inline void PathValuesResponse::SharedCtor() {
}

PathValuesResponse::~PathValuesResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.PathValuesResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PathValuesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PathValuesResponse::ArenaDtor(void* object) {
  PathValuesResponse* _this = reinterpret_cast< PathValuesResponse* >(object);
  (void)_this;
}
void PathValuesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PathValuesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PathValuesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.PathValuesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pathvalues_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PathValuesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .onos.config.v2.PathValue pathValues = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pathvalues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PathValuesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.PathValuesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .onos.config.v2.PathValue pathValues = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pathvalues_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_pathvalues(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.PathValuesResponse)
  return target;
}

size_t PathValuesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.PathValuesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.config.v2.PathValue pathValues = 1;
  total_size += 1UL * this->_internal_pathvalues_size();
  for (const auto& msg : this->pathvalues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PathValuesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PathValuesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PathValuesResponse::GetClassData() const { return &_class_data_; }

void PathValuesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PathValuesResponse *>(to)->MergeFrom(
      static_cast<const PathValuesResponse &>(from));
}


void PathValuesResponse::MergeFrom(const PathValuesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.PathValuesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  pathvalues_.MergeFrom(from.pathvalues_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PathValuesResponse::CopyFrom(const PathValuesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.PathValuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathValuesResponse::IsInitialized() const {
  return true;
}

void PathValuesResponse::InternalSwap(PathValuesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  pathvalues_.InternalSwap(&other->pathvalues_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PathValuesResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[13]);
}

// ===================================================================

class GetTransactionRequest::_Internal {
 public:
};

GetTransactionRequest::GetTransactionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.GetTransactionRequest)
}
GetTransactionRequest::GetTransactionRequest(const GetTransactionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.GetTransactionRequest)
}

inline void GetTransactionRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
index_ = uint64_t{0u};
}

GetTransactionRequest::~GetTransactionRequest() {
  // @@protoc_insertion_point(destructor:onos.config.admin.GetTransactionRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetTransactionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetTransactionRequest::ArenaDtor(void* object) {
  GetTransactionRequest* _this = reinterpret_cast< GetTransactionRequest* >(object);
  (void)_this;
}
void GetTransactionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.GetTransactionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  index_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTransactionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.GetTransactionRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 index = 2 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTransactionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.GetTransactionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.GetTransactionRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // uint64 index = 2 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.GetTransactionRequest)
  return target;
}

size_t GetTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.GetTransactionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // uint64 index = 2 [(.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.Index"];
  if (this->_internal_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTransactionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetTransactionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTransactionRequest::GetClassData() const { return &_class_data_; }

void GetTransactionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetTransactionRequest *>(to)->MergeFrom(
      static_cast<const GetTransactionRequest &>(from));
}


void GetTransactionRequest::MergeFrom(const GetTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.GetTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_index() != 0) {
    _internal_set_index(from._internal_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTransactionRequest::CopyFrom(const GetTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.GetTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransactionRequest::IsInitialized() const {
  return true;
}

void GetTransactionRequest::InternalSwap(GetTransactionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(index_, other->index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTransactionRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[14]);
}

// ===================================================================

class GetTransactionResponse::_Internal {
 public:
  static const ::onos::config::v2::Transaction& transaction(const GetTransactionResponse* msg);
};

const ::onos::config::v2::Transaction&
GetTransactionResponse::_Internal::transaction(const GetTransactionResponse* msg) {
  return *msg->transaction_;
}
void GetTransactionResponse::clear_transaction() {
  if (GetArenaForAllocation() == nullptr && transaction_ != nullptr) {
    delete transaction_;
  }
  transaction_ = nullptr;
}
GetTransactionResponse::GetTransactionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.GetTransactionResponse)
}
GetTransactionResponse::GetTransactionResponse(const GetTransactionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction()) {
    transaction_ = new ::onos::config::v2::Transaction(*from.transaction_);
  } else {
    transaction_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.GetTransactionResponse)
}

inline void GetTransactionResponse::SharedCtor() {
transaction_ = nullptr;
}

GetTransactionResponse::~GetTransactionResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.GetTransactionResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetTransactionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete transaction_;
}

void GetTransactionResponse::ArenaDtor(void* object) {
  GetTransactionResponse* _this = reinterpret_cast< GetTransactionResponse* >(object);
  (void)_this;
}
void GetTransactionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.GetTransactionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && transaction_ != nullptr) {
    delete transaction_;
  }
  transaction_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTransactionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.Transaction transaction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetTransactionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.GetTransactionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.Transaction transaction = 1;
  if (this->_internal_has_transaction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::transaction(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.GetTransactionResponse)
  return target;
}

size_t GetTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.GetTransactionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.Transaction transaction = 1;
  if (this->_internal_has_transaction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transaction_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetTransactionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetTransactionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetTransactionResponse::GetClassData() const { return &_class_data_; }

void GetTransactionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetTransactionResponse *>(to)->MergeFrom(
      static_cast<const GetTransactionResponse &>(from));
}


void GetTransactionResponse::MergeFrom(const GetTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.GetTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transaction()) {
    _internal_mutable_transaction()->::onos::config::v2::Transaction::MergeFrom(from._internal_transaction());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetTransactionResponse::CopyFrom(const GetTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.GetTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTransactionResponse::IsInitialized() const {
  return true;
}

void GetTransactionResponse::InternalSwap(GetTransactionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(transaction_, other->transaction_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTransactionResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[15]);
}

// ===================================================================

class ListTransactionsRequest::_Internal {
 public:
};

ListTransactionsRequest::ListTransactionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ListTransactionsRequest)
}
ListTransactionsRequest::ListTransactionsRequest(const ListTransactionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ListTransactionsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListTransactionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListTransactionsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListTransactionsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[16]);
}

// ===================================================================

class ListTransactionsResponse::_Internal {
 public:
  static const ::onos::config::v2::Transaction& transaction(const ListTransactionsResponse* msg);
};

const ::onos::config::v2::Transaction&
ListTransactionsResponse::_Internal::transaction(const ListTransactionsResponse* msg) {
  return *msg->transaction_;
}
void ListTransactionsResponse::clear_transaction() {
  if (GetArenaForAllocation() == nullptr && transaction_ != nullptr) {
    delete transaction_;
  }
  transaction_ = nullptr;
}
ListTransactionsResponse::ListTransactionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ListTransactionsResponse)
}
ListTransactionsResponse::ListTransactionsResponse(const ListTransactionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_transaction()) {
    transaction_ = new ::onos::config::v2::Transaction(*from.transaction_);
  } else {
    transaction_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ListTransactionsResponse)
}

inline void ListTransactionsResponse::SharedCtor() {
transaction_ = nullptr;
}

ListTransactionsResponse::~ListTransactionsResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ListTransactionsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListTransactionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete transaction_;
}

void ListTransactionsResponse::ArenaDtor(void* object) {
  ListTransactionsResponse* _this = reinterpret_cast< ListTransactionsResponse* >(object);
  (void)_this;
}
void ListTransactionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListTransactionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListTransactionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ListTransactionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && transaction_ != nullptr) {
    delete transaction_;
  }
  transaction_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListTransactionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.Transaction transaction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_transaction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListTransactionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ListTransactionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.Transaction transaction = 1;
  if (this->_internal_has_transaction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::transaction(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ListTransactionsResponse)
  return target;
}

size_t ListTransactionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ListTransactionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.Transaction transaction = 1;
  if (this->_internal_has_transaction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transaction_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListTransactionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListTransactionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListTransactionsResponse::GetClassData() const { return &_class_data_; }

void ListTransactionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListTransactionsResponse *>(to)->MergeFrom(
      static_cast<const ListTransactionsResponse &>(from));
}


void ListTransactionsResponse::MergeFrom(const ListTransactionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ListTransactionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_transaction()) {
    _internal_mutable_transaction()->::onos::config::v2::Transaction::MergeFrom(from._internal_transaction());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListTransactionsResponse::CopyFrom(const ListTransactionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ListTransactionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListTransactionsResponse::IsInitialized() const {
  return true;
}

void ListTransactionsResponse::InternalSwap(ListTransactionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(transaction_, other->transaction_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListTransactionsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[17]);
}

// ===================================================================

class WatchTransactionsRequest::_Internal {
 public:
};

WatchTransactionsRequest::WatchTransactionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.WatchTransactionsRequest)
}
WatchTransactionsRequest::WatchTransactionsRequest(const WatchTransactionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  noreplay_ = from.noreplay_;
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.WatchTransactionsRequest)
}

inline void WatchTransactionsRequest::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
noreplay_ = false;
}

WatchTransactionsRequest::~WatchTransactionsRequest() {
  // @@protoc_insertion_point(destructor:onos.config.admin.WatchTransactionsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchTransactionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WatchTransactionsRequest::ArenaDtor(void* object) {
  WatchTransactionsRequest* _this = reinterpret_cast< WatchTransactionsRequest* >(object);
  (void)_this;
}
void WatchTransactionsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchTransactionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchTransactionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.WatchTransactionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  noreplay_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchTransactionsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.WatchTransactionsRequest.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool noreplay = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          noreplay_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchTransactionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.WatchTransactionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.WatchTransactionsRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // bool noreplay = 2;
  if (this->_internal_noreplay() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_noreplay(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.WatchTransactionsRequest)
  return target;
}

size_t WatchTransactionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.WatchTransactionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.TransactionID"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // bool noreplay = 2;
  if (this->_internal_noreplay() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchTransactionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchTransactionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchTransactionsRequest::GetClassData() const { return &_class_data_; }

void WatchTransactionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchTransactionsRequest *>(to)->MergeFrom(
      static_cast<const WatchTransactionsRequest &>(from));
}


void WatchTransactionsRequest::MergeFrom(const WatchTransactionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.WatchTransactionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_noreplay() != 0) {
    _internal_set_noreplay(from._internal_noreplay());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchTransactionsRequest::CopyFrom(const WatchTransactionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.WatchTransactionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchTransactionsRequest::IsInitialized() const {
  return true;
}

void WatchTransactionsRequest::InternalSwap(WatchTransactionsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(noreplay_, other->noreplay_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchTransactionsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[18]);
}

// ===================================================================

class WatchTransactionsResponse::_Internal {
 public:
  static const ::onos::config::v2::TransactionEvent& event(const WatchTransactionsResponse* msg);
};

const ::onos::config::v2::TransactionEvent&
WatchTransactionsResponse::_Internal::event(const WatchTransactionsResponse* msg) {
  return *msg->event_;
}
void WatchTransactionsResponse::clear_event() {
  if (GetArenaForAllocation() == nullptr && event_ != nullptr) {
    delete event_;
  }
  event_ = nullptr;
}
WatchTransactionsResponse::WatchTransactionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.WatchTransactionsResponse)
}
WatchTransactionsResponse::WatchTransactionsResponse(const WatchTransactionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_event()) {
    event_ = new ::onos::config::v2::TransactionEvent(*from.event_);
  } else {
    event_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.WatchTransactionsResponse)
}

inline void WatchTransactionsResponse::SharedCtor() {
event_ = nullptr;
}

WatchTransactionsResponse::~WatchTransactionsResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.WatchTransactionsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchTransactionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete event_;
}

void WatchTransactionsResponse::ArenaDtor(void* object) {
  WatchTransactionsResponse* _this = reinterpret_cast< WatchTransactionsResponse* >(object);
  (void)_this;
}
void WatchTransactionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchTransactionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchTransactionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.WatchTransactionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && event_ != nullptr) {
    delete event_;
  }
  event_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchTransactionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.TransactionEvent event = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_event(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchTransactionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.WatchTransactionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.TransactionEvent event = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_event()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::event(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.WatchTransactionsResponse)
  return target;
}

size_t WatchTransactionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.WatchTransactionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.TransactionEvent event = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_event()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *event_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchTransactionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchTransactionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchTransactionsResponse::GetClassData() const { return &_class_data_; }

void WatchTransactionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchTransactionsResponse *>(to)->MergeFrom(
      static_cast<const WatchTransactionsResponse &>(from));
}


void WatchTransactionsResponse::MergeFrom(const WatchTransactionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.WatchTransactionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_event()) {
    _internal_mutable_event()->::onos::config::v2::TransactionEvent::MergeFrom(from._internal_event());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchTransactionsResponse::CopyFrom(const WatchTransactionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.WatchTransactionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchTransactionsResponse::IsInitialized() const {
  return true;
}

void WatchTransactionsResponse::InternalSwap(WatchTransactionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(event_, other->event_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchTransactionsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[19]);
}

// ===================================================================

class GetConfigurationRequest::_Internal {
 public:
};

GetConfigurationRequest::GetConfigurationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.GetConfigurationRequest)
}
GetConfigurationRequest::GetConfigurationRequest(const GetConfigurationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  configuration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    configuration_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_configuration_id().empty()) {
    configuration_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_configuration_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.GetConfigurationRequest)
}

inline void GetConfigurationRequest::SharedCtor() {
configuration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  configuration_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetConfigurationRequest::~GetConfigurationRequest() {
  // @@protoc_insertion_point(destructor:onos.config.admin.GetConfigurationRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetConfigurationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  configuration_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetConfigurationRequest::ArenaDtor(void* object) {
  GetConfigurationRequest* _this = reinterpret_cast< GetConfigurationRequest* >(object);
  (void)_this;
}
void GetConfigurationRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigurationRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetConfigurationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.GetConfigurationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configuration_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigurationRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string configuration_id = 1 [(.gogoproto.customname) = "ConfigurationID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.ConfigurationID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_configuration_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.GetConfigurationRequest.configuration_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetConfigurationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.GetConfigurationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string configuration_id = 1 [(.gogoproto.customname) = "ConfigurationID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.ConfigurationID"];
  if (!this->_internal_configuration_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_configuration_id().data(), static_cast<int>(this->_internal_configuration_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.GetConfigurationRequest.configuration_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_configuration_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.GetConfigurationRequest)
  return target;
}

size_t GetConfigurationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.GetConfigurationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string configuration_id = 1 [(.gogoproto.customname) = "ConfigurationID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.ConfigurationID"];
  if (!this->_internal_configuration_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_configuration_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConfigurationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetConfigurationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConfigurationRequest::GetClassData() const { return &_class_data_; }

void GetConfigurationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetConfigurationRequest *>(to)->MergeFrom(
      static_cast<const GetConfigurationRequest &>(from));
}


void GetConfigurationRequest::MergeFrom(const GetConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.GetConfigurationRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_configuration_id().empty()) {
    _internal_set_configuration_id(from._internal_configuration_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetConfigurationRequest::CopyFrom(const GetConfigurationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.GetConfigurationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigurationRequest::IsInitialized() const {
  return true;
}

void GetConfigurationRequest::InternalSwap(GetConfigurationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &configuration_id_, lhs_arena,
      &other->configuration_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[20]);
}

// ===================================================================

class GetConfigurationResponse::_Internal {
 public:
  static const ::onos::config::v2::Configuration& configuration(const GetConfigurationResponse* msg);
};

const ::onos::config::v2::Configuration&
GetConfigurationResponse::_Internal::configuration(const GetConfigurationResponse* msg) {
  return *msg->configuration_;
}
void GetConfigurationResponse::clear_configuration() {
  if (GetArenaForAllocation() == nullptr && configuration_ != nullptr) {
    delete configuration_;
  }
  configuration_ = nullptr;
}
GetConfigurationResponse::GetConfigurationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.GetConfigurationResponse)
}
GetConfigurationResponse::GetConfigurationResponse(const GetConfigurationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_configuration()) {
    configuration_ = new ::onos::config::v2::Configuration(*from.configuration_);
  } else {
    configuration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.GetConfigurationResponse)
}

inline void GetConfigurationResponse::SharedCtor() {
configuration_ = nullptr;
}

GetConfigurationResponse::~GetConfigurationResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.GetConfigurationResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetConfigurationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete configuration_;
}

void GetConfigurationResponse::ArenaDtor(void* object) {
  GetConfigurationResponse* _this = reinterpret_cast< GetConfigurationResponse* >(object);
  (void)_this;
}
void GetConfigurationResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigurationResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetConfigurationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.GetConfigurationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && configuration_ != nullptr) {
    delete configuration_;
  }
  configuration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigurationResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.Configuration configuration = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_configuration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetConfigurationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.GetConfigurationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.Configuration configuration = 1;
  if (this->_internal_has_configuration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::configuration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.GetConfigurationResponse)
  return target;
}

size_t GetConfigurationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.GetConfigurationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.Configuration configuration = 1;
  if (this->_internal_has_configuration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *configuration_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetConfigurationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetConfigurationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetConfigurationResponse::GetClassData() const { return &_class_data_; }

void GetConfigurationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetConfigurationResponse *>(to)->MergeFrom(
      static_cast<const GetConfigurationResponse &>(from));
}


void GetConfigurationResponse::MergeFrom(const GetConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.GetConfigurationResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_configuration()) {
    _internal_mutable_configuration()->::onos::config::v2::Configuration::MergeFrom(from._internal_configuration());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetConfigurationResponse::CopyFrom(const GetConfigurationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.GetConfigurationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigurationResponse::IsInitialized() const {
  return true;
}

void GetConfigurationResponse::InternalSwap(GetConfigurationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(configuration_, other->configuration_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigurationResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[21]);
}

// ===================================================================

class ListConfigurationsRequest::_Internal {
 public:
};

ListConfigurationsRequest::ListConfigurationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ListConfigurationsRequest)
}
ListConfigurationsRequest::ListConfigurationsRequest(const ListConfigurationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ListConfigurationsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListConfigurationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListConfigurationsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ListConfigurationsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[22]);
}

// ===================================================================

class ListConfigurationsResponse::_Internal {
 public:
  static const ::onos::config::v2::Configuration& configuration(const ListConfigurationsResponse* msg);
};

const ::onos::config::v2::Configuration&
ListConfigurationsResponse::_Internal::configuration(const ListConfigurationsResponse* msg) {
  return *msg->configuration_;
}
void ListConfigurationsResponse::clear_configuration() {
  if (GetArenaForAllocation() == nullptr && configuration_ != nullptr) {
    delete configuration_;
  }
  configuration_ = nullptr;
}
ListConfigurationsResponse::ListConfigurationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.ListConfigurationsResponse)
}
ListConfigurationsResponse::ListConfigurationsResponse(const ListConfigurationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_configuration()) {
    configuration_ = new ::onos::config::v2::Configuration(*from.configuration_);
  } else {
    configuration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.ListConfigurationsResponse)
}

inline void ListConfigurationsResponse::SharedCtor() {
configuration_ = nullptr;
}

ListConfigurationsResponse::~ListConfigurationsResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.ListConfigurationsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListConfigurationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete configuration_;
}

void ListConfigurationsResponse::ArenaDtor(void* object) {
  ListConfigurationsResponse* _this = reinterpret_cast< ListConfigurationsResponse* >(object);
  (void)_this;
}
void ListConfigurationsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListConfigurationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListConfigurationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.ListConfigurationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && configuration_ != nullptr) {
    delete configuration_;
  }
  configuration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListConfigurationsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.Configuration configuration = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_configuration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListConfigurationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.ListConfigurationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.Configuration configuration = 1;
  if (this->_internal_has_configuration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::configuration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.ListConfigurationsResponse)
  return target;
}

size_t ListConfigurationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.ListConfigurationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.Configuration configuration = 1;
  if (this->_internal_has_configuration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *configuration_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListConfigurationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListConfigurationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListConfigurationsResponse::GetClassData() const { return &_class_data_; }

void ListConfigurationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListConfigurationsResponse *>(to)->MergeFrom(
      static_cast<const ListConfigurationsResponse &>(from));
}


void ListConfigurationsResponse::MergeFrom(const ListConfigurationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.ListConfigurationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_configuration()) {
    _internal_mutable_configuration()->::onos::config::v2::Configuration::MergeFrom(from._internal_configuration());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListConfigurationsResponse::CopyFrom(const ListConfigurationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.ListConfigurationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListConfigurationsResponse::IsInitialized() const {
  return true;
}

void ListConfigurationsResponse::InternalSwap(ListConfigurationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(configuration_, other->configuration_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListConfigurationsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[23]);
}

// ===================================================================

class WatchConfigurationsRequest::_Internal {
 public:
};

WatchConfigurationsRequest::WatchConfigurationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.WatchConfigurationsRequest)
}
WatchConfigurationsRequest::WatchConfigurationsRequest(const WatchConfigurationsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  configuration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    configuration_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_configuration_id().empty()) {
    configuration_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_configuration_id(), 
      GetArenaForAllocation());
  }
  noreplay_ = from.noreplay_;
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.WatchConfigurationsRequest)
}

inline void WatchConfigurationsRequest::SharedCtor() {
configuration_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  configuration_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
noreplay_ = false;
}

WatchConfigurationsRequest::~WatchConfigurationsRequest() {
  // @@protoc_insertion_point(destructor:onos.config.admin.WatchConfigurationsRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchConfigurationsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  configuration_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WatchConfigurationsRequest::ArenaDtor(void* object) {
  WatchConfigurationsRequest* _this = reinterpret_cast< WatchConfigurationsRequest* >(object);
  (void)_this;
}
void WatchConfigurationsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchConfigurationsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchConfigurationsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.WatchConfigurationsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configuration_id_.ClearToEmpty();
  noreplay_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchConfigurationsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string configuration_id = 1 [(.gogoproto.customname) = "ConfigurationID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.ConfigurationID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_configuration_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.config.admin.WatchConfigurationsRequest.configuration_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool noreplay = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          noreplay_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchConfigurationsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.WatchConfigurationsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string configuration_id = 1 [(.gogoproto.customname) = "ConfigurationID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.ConfigurationID"];
  if (!this->_internal_configuration_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_configuration_id().data(), static_cast<int>(this->_internal_configuration_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.config.admin.WatchConfigurationsRequest.configuration_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_configuration_id(), target);
  }

  // bool noreplay = 2;
  if (this->_internal_noreplay() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_noreplay(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.WatchConfigurationsRequest)
  return target;
}

size_t WatchConfigurationsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.WatchConfigurationsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string configuration_id = 1 [(.gogoproto.customname) = "ConfigurationID", (.gogoproto.casttype) = "github.com/onosproject/onos-api/go/onos/config/v2.ConfigurationID"];
  if (!this->_internal_configuration_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_configuration_id());
  }

  // bool noreplay = 2;
  if (this->_internal_noreplay() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchConfigurationsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchConfigurationsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchConfigurationsRequest::GetClassData() const { return &_class_data_; }

void WatchConfigurationsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchConfigurationsRequest *>(to)->MergeFrom(
      static_cast<const WatchConfigurationsRequest &>(from));
}


void WatchConfigurationsRequest::MergeFrom(const WatchConfigurationsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.WatchConfigurationsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_configuration_id().empty()) {
    _internal_set_configuration_id(from._internal_configuration_id());
  }
  if (from._internal_noreplay() != 0) {
    _internal_set_noreplay(from._internal_noreplay());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchConfigurationsRequest::CopyFrom(const WatchConfigurationsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.WatchConfigurationsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchConfigurationsRequest::IsInitialized() const {
  return true;
}

void WatchConfigurationsRequest::InternalSwap(WatchConfigurationsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &configuration_id_, lhs_arena,
      &other->configuration_id_, rhs_arena
  );
  swap(noreplay_, other->noreplay_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchConfigurationsRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[24]);
}

// ===================================================================

class WatchConfigurationsResponse::_Internal {
 public:
  static const ::onos::config::v2::ConfigurationEvent& event(const WatchConfigurationsResponse* msg);
};

const ::onos::config::v2::ConfigurationEvent&
WatchConfigurationsResponse::_Internal::event(const WatchConfigurationsResponse* msg) {
  return *msg->event_;
}
void WatchConfigurationsResponse::clear_event() {
  if (GetArenaForAllocation() == nullptr && event_ != nullptr) {
    delete event_;
  }
  event_ = nullptr;
}
WatchConfigurationsResponse::WatchConfigurationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.config.admin.WatchConfigurationsResponse)
}
WatchConfigurationsResponse::WatchConfigurationsResponse(const WatchConfigurationsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_event()) {
    event_ = new ::onos::config::v2::ConfigurationEvent(*from.event_);
  } else {
    event_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.config.admin.WatchConfigurationsResponse)
}

inline void WatchConfigurationsResponse::SharedCtor() {
event_ = nullptr;
}

WatchConfigurationsResponse::~WatchConfigurationsResponse() {
  // @@protoc_insertion_point(destructor:onos.config.admin.WatchConfigurationsResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void WatchConfigurationsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete event_;
}

void WatchConfigurationsResponse::ArenaDtor(void* object) {
  WatchConfigurationsResponse* _this = reinterpret_cast< WatchConfigurationsResponse* >(object);
  (void)_this;
}
void WatchConfigurationsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WatchConfigurationsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void WatchConfigurationsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.config.admin.WatchConfigurationsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && event_ != nullptr) {
    delete event_;
  }
  event_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WatchConfigurationsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.config.v2.ConfigurationEvent event = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_event(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WatchConfigurationsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.config.admin.WatchConfigurationsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.config.v2.ConfigurationEvent event = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_event()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::event(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.config.admin.WatchConfigurationsResponse)
  return target;
}

size_t WatchConfigurationsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.config.admin.WatchConfigurationsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.config.v2.ConfigurationEvent event = 1 [(.gogoproto.nullable) = false, (.gogoproto.embed) = true];
  if (this->_internal_has_event()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *event_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WatchConfigurationsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    WatchConfigurationsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WatchConfigurationsResponse::GetClassData() const { return &_class_data_; }

void WatchConfigurationsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<WatchConfigurationsResponse *>(to)->MergeFrom(
      static_cast<const WatchConfigurationsResponse &>(from));
}


void WatchConfigurationsResponse::MergeFrom(const WatchConfigurationsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.config.admin.WatchConfigurationsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_event()) {
    _internal_mutable_event()->::onos::config::v2::ConfigurationEvent::MergeFrom(from._internal_event());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WatchConfigurationsResponse::CopyFrom(const WatchConfigurationsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.config.admin.WatchConfigurationsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchConfigurationsResponse::IsInitialized() const {
  return true;
}

void WatchConfigurationsResponse::InternalSwap(WatchConfigurationsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(event_, other->event_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WatchConfigurationsResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_getter, &descriptor_table_onos_2fconfig_2fadmin_2fadmin_2eproto_once,
      file_level_metadata_onos_2fconfig_2fadmin_2fadmin_2eproto[25]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin
}  // namespace config
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::config::admin::ReadOnlySubPath* Arena::CreateMaybeMessage< ::onos::config::admin::ReadOnlySubPath >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ReadOnlySubPath >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ReadOnlyPath* Arena::CreateMaybeMessage< ::onos::config::admin::ReadOnlyPath >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ReadOnlyPath >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ReadWritePath* Arena::CreateMaybeMessage< ::onos::config::admin::ReadWritePath >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ReadWritePath >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ModelInfo* Arena::CreateMaybeMessage< ::onos::config::admin::ModelInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ModelInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ModelPlugin* Arena::CreateMaybeMessage< ::onos::config::admin::ModelPlugin >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ModelPlugin >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ListModelsRequest* Arena::CreateMaybeMessage< ::onos::config::admin::ListModelsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ListModelsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::RollbackRequest* Arena::CreateMaybeMessage< ::onos::config::admin::RollbackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::RollbackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::RollbackResponse* Arena::CreateMaybeMessage< ::onos::config::admin::RollbackResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::RollbackResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ModelInfoRequest* Arena::CreateMaybeMessage< ::onos::config::admin::ModelInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ModelInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ModelInfoResponse* Arena::CreateMaybeMessage< ::onos::config::admin::ModelInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ModelInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ValidateConfigRequest* Arena::CreateMaybeMessage< ::onos::config::admin::ValidateConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ValidateConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ValidateConfigResponse* Arena::CreateMaybeMessage< ::onos::config::admin::ValidateConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ValidateConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::PathValuesRequest* Arena::CreateMaybeMessage< ::onos::config::admin::PathValuesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::PathValuesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::PathValuesResponse* Arena::CreateMaybeMessage< ::onos::config::admin::PathValuesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::PathValuesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::GetTransactionRequest* Arena::CreateMaybeMessage< ::onos::config::admin::GetTransactionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::GetTransactionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::GetTransactionResponse* Arena::CreateMaybeMessage< ::onos::config::admin::GetTransactionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::GetTransactionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ListTransactionsRequest* Arena::CreateMaybeMessage< ::onos::config::admin::ListTransactionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ListTransactionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ListTransactionsResponse* Arena::CreateMaybeMessage< ::onos::config::admin::ListTransactionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ListTransactionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::WatchTransactionsRequest* Arena::CreateMaybeMessage< ::onos::config::admin::WatchTransactionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::WatchTransactionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::WatchTransactionsResponse* Arena::CreateMaybeMessage< ::onos::config::admin::WatchTransactionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::WatchTransactionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::GetConfigurationRequest* Arena::CreateMaybeMessage< ::onos::config::admin::GetConfigurationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::GetConfigurationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::GetConfigurationResponse* Arena::CreateMaybeMessage< ::onos::config::admin::GetConfigurationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::GetConfigurationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ListConfigurationsRequest* Arena::CreateMaybeMessage< ::onos::config::admin::ListConfigurationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ListConfigurationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::ListConfigurationsResponse* Arena::CreateMaybeMessage< ::onos::config::admin::ListConfigurationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::ListConfigurationsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::WatchConfigurationsRequest* Arena::CreateMaybeMessage< ::onos::config::admin::WatchConfigurationsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::WatchConfigurationsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::config::admin::WatchConfigurationsResponse* Arena::CreateMaybeMessage< ::onos::config::admin::WatchConfigurationsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::config::admin::WatchConfigurationsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
