// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/config/admin/admin.proto
// Original file comments:
// SPDX-FileCopyrightText: 2019-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef GRPC_onos_2fconfig_2fadmin_2fadmin_2eproto__INCLUDED
#define GRPC_onos_2fconfig_2fadmin_2fadmin_2eproto__INCLUDED

#include "onos/config/admin/admin.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace config {
namespace admin {

// ConfigAdminService provides means for enhanced interactions with the configuration subsystem.
class ConfigAdminService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.config.admin.ConfigAdminService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // ListRegisteredModels returns a stream of registered models.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::ModelPlugin>> ListRegisteredModels(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::ModelPlugin>>(ListRegisteredModelsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ModelPlugin>> AsyncListRegisteredModels(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ModelPlugin>>(AsyncListRegisteredModelsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ModelPlugin>> PrepareAsyncListRegisteredModels(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ModelPlugin>>(PrepareAsyncListRegisteredModelsRaw(context, request, cq));
    }
    // RollbackTransaction rolls back the specified configuration change transaction.
    virtual ::grpc::Status RollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::onos::config::admin::RollbackResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::RollbackResponse>> AsyncRollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::RollbackResponse>>(AsyncRollbackTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::RollbackResponse>> PrepareAsyncRollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::RollbackResponse>>(PrepareAsyncRollbackTransactionRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // ListRegisteredModels returns a stream of registered models.
      virtual void ListRegisteredModels(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::ModelPlugin>* reactor) = 0;
      // RollbackTransaction rolls back the specified configuration change transaction.
      virtual void RollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest* request, ::onos::config::admin::RollbackResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest* request, ::onos::config::admin::RollbackResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientReaderInterface< ::onos::config::admin::ModelPlugin>* ListRegisteredModelsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ModelPlugin>* AsyncListRegisteredModelsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ModelPlugin>* PrepareAsyncListRegisteredModelsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::RollbackResponse>* AsyncRollbackTransactionRaw(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::RollbackResponse>* PrepareAsyncRollbackTransactionRaw(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::ModelPlugin>> ListRegisteredModels(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::ModelPlugin>>(ListRegisteredModelsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ModelPlugin>> AsyncListRegisteredModels(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ModelPlugin>>(AsyncListRegisteredModelsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ModelPlugin>> PrepareAsyncListRegisteredModels(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ModelPlugin>>(PrepareAsyncListRegisteredModelsRaw(context, request, cq));
    }
    ::grpc::Status RollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::onos::config::admin::RollbackResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::RollbackResponse>> AsyncRollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::RollbackResponse>>(AsyncRollbackTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::RollbackResponse>> PrepareAsyncRollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::RollbackResponse>>(PrepareAsyncRollbackTransactionRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void ListRegisteredModels(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::ModelPlugin>* reactor) override;
      void RollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest* request, ::onos::config::admin::RollbackResponse* response, std::function<void(::grpc::Status)>) override;
      void RollbackTransaction(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest* request, ::onos::config::admin::RollbackResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientReader< ::onos::config::admin::ModelPlugin>* ListRegisteredModelsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::ModelPlugin>* AsyncListRegisteredModelsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::ModelPlugin>* PrepareAsyncListRegisteredModelsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListModelsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::RollbackResponse>* AsyncRollbackTransactionRaw(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::RollbackResponse>* PrepareAsyncRollbackTransactionRaw(::grpc::ClientContext* context, const ::onos::config::admin::RollbackRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ListRegisteredModels_;
    const ::grpc::internal::RpcMethod rpcmethod_RollbackTransaction_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // ListRegisteredModels returns a stream of registered models.
    virtual ::grpc::Status ListRegisteredModels(::grpc::ServerContext* context, const ::onos::config::admin::ListModelsRequest* request, ::grpc::ServerWriter< ::onos::config::admin::ModelPlugin>* writer);
    // RollbackTransaction rolls back the specified configuration change transaction.
    virtual ::grpc::Status RollbackTransaction(::grpc::ServerContext* context, const ::onos::config::admin::RollbackRequest* request, ::onos::config::admin::RollbackResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRegisteredModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRegisteredModels() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ListRegisteredModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredModels(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ModelPlugin>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRegisteredModels(::grpc::ServerContext* context, ::onos::config::admin::ListModelsRequest* request, ::grpc::ServerAsyncWriter< ::onos::config::admin::ModelPlugin>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RollbackTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RollbackTransaction() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RollbackTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollbackTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::RollbackRequest* /*request*/, ::onos::config::admin::RollbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollbackTransaction(::grpc::ServerContext* context, ::onos::config::admin::RollbackRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::config::admin::RollbackResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ListRegisteredModels<WithAsyncMethod_RollbackTransaction<Service > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_ListRegisteredModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRegisteredModels() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::config::admin::ListModelsRequest, ::onos::config::admin::ModelPlugin>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::ListModelsRequest* request) { return this->ListRegisteredModels(context, request); }));
    }
    ~WithCallbackMethod_ListRegisteredModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredModels(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ModelPlugin>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::config::admin::ModelPlugin>* ListRegisteredModels(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::ListModelsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RollbackTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RollbackTransaction() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::RollbackRequest, ::onos::config::admin::RollbackResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::RollbackRequest* request, ::onos::config::admin::RollbackResponse* response) { return this->RollbackTransaction(context, request, response); }));}
    void SetMessageAllocatorFor_RollbackTransaction(
        ::grpc::MessageAllocator< ::onos::config::admin::RollbackRequest, ::onos::config::admin::RollbackResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::RollbackRequest, ::onos::config::admin::RollbackResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RollbackTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollbackTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::RollbackRequest* /*request*/, ::onos::config::admin::RollbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollbackTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::RollbackRequest* /*request*/, ::onos::config::admin::RollbackResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_ListRegisteredModels<WithCallbackMethod_RollbackTransaction<Service > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ListRegisteredModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRegisteredModels() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ListRegisteredModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredModels(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ModelPlugin>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RollbackTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RollbackTransaction() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RollbackTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollbackTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::RollbackRequest* /*request*/, ::onos::config::admin::RollbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRegisteredModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRegisteredModels() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ListRegisteredModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredModels(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ModelPlugin>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRegisteredModels(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RollbackTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RollbackTransaction() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RollbackTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollbackTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::RollbackRequest* /*request*/, ::onos::config::admin::RollbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRollbackTransaction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRegisteredModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRegisteredModels() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListRegisteredModels(context, request); }));
    }
    ~WithRawCallbackMethod_ListRegisteredModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRegisteredModels(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ModelPlugin>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListRegisteredModels(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RollbackTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RollbackTransaction() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RollbackTransaction(context, request, response); }));
    }
    ~WithRawCallbackMethod_RollbackTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RollbackTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::RollbackRequest* /*request*/, ::onos::config::admin::RollbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RollbackTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RollbackTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RollbackTransaction() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::config::admin::RollbackRequest, ::onos::config::admin::RollbackResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::config::admin::RollbackRequest, ::onos::config::admin::RollbackResponse>* streamer) {
                       return this->StreamedRollbackTransaction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RollbackTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RollbackTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::RollbackRequest* /*request*/, ::onos::config::admin::RollbackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRollbackTransaction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::config::admin::RollbackRequest,::onos::config::admin::RollbackResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_RollbackTransaction<Service > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_ListRegisteredModels : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListRegisteredModels() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::config::admin::ListModelsRequest, ::onos::config::admin::ModelPlugin>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::config::admin::ListModelsRequest, ::onos::config::admin::ModelPlugin>* streamer) {
                       return this->StreamedListRegisteredModels(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListRegisteredModels() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRegisteredModels(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListModelsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ModelPlugin>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListRegisteredModels(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::config::admin::ListModelsRequest,::onos::config::admin::ModelPlugin>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_ListRegisteredModels<Service > SplitStreamedService;
  typedef WithSplitStreamingMethod_ListRegisteredModels<WithStreamedUnaryMethod_RollbackTransaction<Service > > StreamedService;
};

// Plugins --------------------------------------------
//
// ModelPluginService is to be implemented by model plugin sidecar
class ModelPluginService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.config.admin.ModelPluginService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // GetModelInfo provides information about the model
    virtual ::grpc::Status GetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::onos::config::admin::ModelInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ModelInfoResponse>> AsyncGetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ModelInfoResponse>>(AsyncGetModelInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ModelInfoResponse>> PrepareAsyncGetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ModelInfoResponse>>(PrepareAsyncGetModelInfoRaw(context, request, cq));
    }
    // ValidateConfig validates the provided configuration data against the model
    virtual ::grpc::Status ValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::onos::config::admin::ValidateConfigResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ValidateConfigResponse>> AsyncValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ValidateConfigResponse>>(AsyncValidateConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ValidateConfigResponse>> PrepareAsyncValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ValidateConfigResponse>>(PrepareAsyncValidateConfigRaw(context, request, cq));
    }
    // GetPathValues produces list of typed path value entries from the specified configuration change JSON tree
    virtual ::grpc::Status GetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::onos::config::admin::PathValuesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::PathValuesResponse>> AsyncGetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::PathValuesResponse>>(AsyncGetPathValuesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::PathValuesResponse>> PrepareAsyncGetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::PathValuesResponse>>(PrepareAsyncGetPathValuesRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // GetModelInfo provides information about the model
      virtual void GetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest* request, ::onos::config::admin::ModelInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest* request, ::onos::config::admin::ModelInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ValidateConfig validates the provided configuration data against the model
      virtual void ValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest* request, ::onos::config::admin::ValidateConfigResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest* request, ::onos::config::admin::ValidateConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // GetPathValues produces list of typed path value entries from the specified configuration change JSON tree
      virtual void GetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest* request, ::onos::config::admin::PathValuesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest* request, ::onos::config::admin::PathValuesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ModelInfoResponse>* AsyncGetModelInfoRaw(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ModelInfoResponse>* PrepareAsyncGetModelInfoRaw(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ValidateConfigResponse>* AsyncValidateConfigRaw(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::ValidateConfigResponse>* PrepareAsyncValidateConfigRaw(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::PathValuesResponse>* AsyncGetPathValuesRaw(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::PathValuesResponse>* PrepareAsyncGetPathValuesRaw(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::onos::config::admin::ModelInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ModelInfoResponse>> AsyncGetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ModelInfoResponse>>(AsyncGetModelInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ModelInfoResponse>> PrepareAsyncGetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ModelInfoResponse>>(PrepareAsyncGetModelInfoRaw(context, request, cq));
    }
    ::grpc::Status ValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::onos::config::admin::ValidateConfigResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ValidateConfigResponse>> AsyncValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ValidateConfigResponse>>(AsyncValidateConfigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ValidateConfigResponse>> PrepareAsyncValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ValidateConfigResponse>>(PrepareAsyncValidateConfigRaw(context, request, cq));
    }
    ::grpc::Status GetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::onos::config::admin::PathValuesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::PathValuesResponse>> AsyncGetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::PathValuesResponse>>(AsyncGetPathValuesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::PathValuesResponse>> PrepareAsyncGetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::PathValuesResponse>>(PrepareAsyncGetPathValuesRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest* request, ::onos::config::admin::ModelInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetModelInfo(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest* request, ::onos::config::admin::ModelInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest* request, ::onos::config::admin::ValidateConfigResponse* response, std::function<void(::grpc::Status)>) override;
      void ValidateConfig(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest* request, ::onos::config::admin::ValidateConfigResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest* request, ::onos::config::admin::PathValuesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetPathValues(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest* request, ::onos::config::admin::PathValuesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ModelInfoResponse>* AsyncGetModelInfoRaw(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ModelInfoResponse>* PrepareAsyncGetModelInfoRaw(::grpc::ClientContext* context, const ::onos::config::admin::ModelInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ValidateConfigResponse>* AsyncValidateConfigRaw(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::ValidateConfigResponse>* PrepareAsyncValidateConfigRaw(::grpc::ClientContext* context, const ::onos::config::admin::ValidateConfigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::PathValuesResponse>* AsyncGetPathValuesRaw(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::PathValuesResponse>* PrepareAsyncGetPathValuesRaw(::grpc::ClientContext* context, const ::onos::config::admin::PathValuesRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetModelInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_ValidateConfig_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPathValues_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // GetModelInfo provides information about the model
    virtual ::grpc::Status GetModelInfo(::grpc::ServerContext* context, const ::onos::config::admin::ModelInfoRequest* request, ::onos::config::admin::ModelInfoResponse* response);
    // ValidateConfig validates the provided configuration data against the model
    virtual ::grpc::Status ValidateConfig(::grpc::ServerContext* context, const ::onos::config::admin::ValidateConfigRequest* request, ::onos::config::admin::ValidateConfigResponse* response);
    // GetPathValues produces list of typed path value entries from the specified configuration change JSON tree
    virtual ::grpc::Status GetPathValues(::grpc::ServerContext* context, const ::onos::config::admin::PathValuesRequest* request, ::onos::config::admin::PathValuesResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetModelInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetModelInfo() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetModelInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelInfo(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ModelInfoRequest* /*request*/, ::onos::config::admin::ModelInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetModelInfo(::grpc::ServerContext* context, ::onos::config::admin::ModelInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::config::admin::ModelInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ValidateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ValidateConfig() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ValidateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateConfig(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ValidateConfigRequest* /*request*/, ::onos::config::admin::ValidateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateConfig(::grpc::ServerContext* context, ::onos::config::admin::ValidateConfigRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::config::admin::ValidateConfigResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPathValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPathValues() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetPathValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPathValues(::grpc::ServerContext* /*context*/, const ::onos::config::admin::PathValuesRequest* /*request*/, ::onos::config::admin::PathValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPathValues(::grpc::ServerContext* context, ::onos::config::admin::PathValuesRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::config::admin::PathValuesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetModelInfo<WithAsyncMethod_ValidateConfig<WithAsyncMethod_GetPathValues<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetModelInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetModelInfo() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::ModelInfoRequest, ::onos::config::admin::ModelInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::ModelInfoRequest* request, ::onos::config::admin::ModelInfoResponse* response) { return this->GetModelInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetModelInfo(
        ::grpc::MessageAllocator< ::onos::config::admin::ModelInfoRequest, ::onos::config::admin::ModelInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::ModelInfoRequest, ::onos::config::admin::ModelInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetModelInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelInfo(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ModelInfoRequest* /*request*/, ::onos::config::admin::ModelInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetModelInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::ModelInfoRequest* /*request*/, ::onos::config::admin::ModelInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ValidateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ValidateConfig() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::ValidateConfigRequest, ::onos::config::admin::ValidateConfigResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::ValidateConfigRequest* request, ::onos::config::admin::ValidateConfigResponse* response) { return this->ValidateConfig(context, request, response); }));}
    void SetMessageAllocatorFor_ValidateConfig(
        ::grpc::MessageAllocator< ::onos::config::admin::ValidateConfigRequest, ::onos::config::admin::ValidateConfigResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::ValidateConfigRequest, ::onos::config::admin::ValidateConfigResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ValidateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateConfig(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ValidateConfigRequest* /*request*/, ::onos::config::admin::ValidateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::ValidateConfigRequest* /*request*/, ::onos::config::admin::ValidateConfigResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetPathValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetPathValues() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::PathValuesRequest, ::onos::config::admin::PathValuesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::PathValuesRequest* request, ::onos::config::admin::PathValuesResponse* response) { return this->GetPathValues(context, request, response); }));}
    void SetMessageAllocatorFor_GetPathValues(
        ::grpc::MessageAllocator< ::onos::config::admin::PathValuesRequest, ::onos::config::admin::PathValuesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::PathValuesRequest, ::onos::config::admin::PathValuesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetPathValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPathValues(::grpc::ServerContext* /*context*/, const ::onos::config::admin::PathValuesRequest* /*request*/, ::onos::config::admin::PathValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPathValues(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::PathValuesRequest* /*request*/, ::onos::config::admin::PathValuesResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetModelInfo<WithCallbackMethod_ValidateConfig<WithCallbackMethod_GetPathValues<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetModelInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetModelInfo() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetModelInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelInfo(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ModelInfoRequest* /*request*/, ::onos::config::admin::ModelInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ValidateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ValidateConfig() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ValidateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateConfig(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ValidateConfigRequest* /*request*/, ::onos::config::admin::ValidateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPathValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPathValues() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetPathValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPathValues(::grpc::ServerContext* /*context*/, const ::onos::config::admin::PathValuesRequest* /*request*/, ::onos::config::admin::PathValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetModelInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetModelInfo() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetModelInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelInfo(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ModelInfoRequest* /*request*/, ::onos::config::admin::ModelInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetModelInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ValidateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ValidateConfig() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ValidateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateConfig(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ValidateConfigRequest* /*request*/, ::onos::config::admin::ValidateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateConfig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPathValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPathValues() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetPathValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPathValues(::grpc::ServerContext* /*context*/, const ::onos::config::admin::PathValuesRequest* /*request*/, ::onos::config::admin::PathValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPathValues(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetModelInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetModelInfo() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetModelInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetModelInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetModelInfo(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ModelInfoRequest* /*request*/, ::onos::config::admin::ModelInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetModelInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ValidateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ValidateConfig() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ValidateConfig(context, request, response); }));
    }
    ~WithRawCallbackMethod_ValidateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateConfig(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ValidateConfigRequest* /*request*/, ::onos::config::admin::ValidateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateConfig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetPathValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetPathValues() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPathValues(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetPathValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPathValues(::grpc::ServerContext* /*context*/, const ::onos::config::admin::PathValuesRequest* /*request*/, ::onos::config::admin::PathValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetPathValues(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetModelInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetModelInfo() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::config::admin::ModelInfoRequest, ::onos::config::admin::ModelInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::config::admin::ModelInfoRequest, ::onos::config::admin::ModelInfoResponse>* streamer) {
                       return this->StreamedGetModelInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetModelInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetModelInfo(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ModelInfoRequest* /*request*/, ::onos::config::admin::ModelInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetModelInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::config::admin::ModelInfoRequest,::onos::config::admin::ModelInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ValidateConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ValidateConfig() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::config::admin::ValidateConfigRequest, ::onos::config::admin::ValidateConfigResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::config::admin::ValidateConfigRequest, ::onos::config::admin::ValidateConfigResponse>* streamer) {
                       return this->StreamedValidateConfig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ValidateConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ValidateConfig(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ValidateConfigRequest* /*request*/, ::onos::config::admin::ValidateConfigResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedValidateConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::config::admin::ValidateConfigRequest,::onos::config::admin::ValidateConfigResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPathValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPathValues() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::config::admin::PathValuesRequest, ::onos::config::admin::PathValuesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::config::admin::PathValuesRequest, ::onos::config::admin::PathValuesResponse>* streamer) {
                       return this->StreamedGetPathValues(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPathValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPathValues(::grpc::ServerContext* /*context*/, const ::onos::config::admin::PathValuesRequest* /*request*/, ::onos::config::admin::PathValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPathValues(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::config::admin::PathValuesRequest,::onos::config::admin::PathValuesResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetModelInfo<WithStreamedUnaryMethod_ValidateConfig<WithStreamedUnaryMethod_GetPathValues<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetModelInfo<WithStreamedUnaryMethod_ValidateConfig<WithStreamedUnaryMethod_GetPathValues<Service > > > StreamedService;
};

// Transactions ---------------------------------------
//
// TransactionService provides means to inspect the contents of the internal transactions store.
class TransactionService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.config.admin.TransactionService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Get transaction by its ID or index
    virtual ::grpc::Status GetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::onos::config::admin::GetTransactionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetTransactionResponse>> AsyncGetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetTransactionResponse>>(AsyncGetTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetTransactionResponse>> PrepareAsyncGetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetTransactionResponse>>(PrepareAsyncGetTransactionRaw(context, request, cq));
    }
    // List returns all configuration transactions
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::ListTransactionsResponse>> ListTransactions(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::ListTransactionsResponse>>(ListTransactionsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListTransactionsResponse>> AsyncListTransactions(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListTransactionsResponse>>(AsyncListTransactionsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListTransactionsResponse>> PrepareAsyncListTransactions(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListTransactionsResponse>>(PrepareAsyncListTransactionsRaw(context, request, cq));
    }
    // Watch returns a stream of configuration transaction change notifications
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::WatchTransactionsResponse>> WatchTransactions(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::WatchTransactionsResponse>>(WatchTransactionsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchTransactionsResponse>> AsyncWatchTransactions(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchTransactionsResponse>>(AsyncWatchTransactionsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchTransactionsResponse>> PrepareAsyncWatchTransactions(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchTransactionsResponse>>(PrepareAsyncWatchTransactionsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Get transaction by its ID or index
      virtual void GetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest* request, ::onos::config::admin::GetTransactionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest* request, ::onos::config::admin::GetTransactionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List returns all configuration transactions
      virtual void ListTransactions(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::ListTransactionsResponse>* reactor) = 0;
      // Watch returns a stream of configuration transaction change notifications
      virtual void WatchTransactions(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::WatchTransactionsResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetTransactionResponse>* AsyncGetTransactionRaw(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetTransactionResponse>* PrepareAsyncGetTransactionRaw(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::config::admin::ListTransactionsResponse>* ListTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListTransactionsResponse>* AsyncListTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListTransactionsResponse>* PrepareAsyncListTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::config::admin::WatchTransactionsResponse>* WatchTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchTransactionsResponse>* AsyncWatchTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchTransactionsResponse>* PrepareAsyncWatchTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::onos::config::admin::GetTransactionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetTransactionResponse>> AsyncGetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetTransactionResponse>>(AsyncGetTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetTransactionResponse>> PrepareAsyncGetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetTransactionResponse>>(PrepareAsyncGetTransactionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::ListTransactionsResponse>> ListTransactions(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::ListTransactionsResponse>>(ListTransactionsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ListTransactionsResponse>> AsyncListTransactions(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ListTransactionsResponse>>(AsyncListTransactionsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ListTransactionsResponse>> PrepareAsyncListTransactions(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ListTransactionsResponse>>(PrepareAsyncListTransactionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::WatchTransactionsResponse>> WatchTransactions(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::WatchTransactionsResponse>>(WatchTransactionsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::WatchTransactionsResponse>> AsyncWatchTransactions(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::WatchTransactionsResponse>>(AsyncWatchTransactionsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::WatchTransactionsResponse>> PrepareAsyncWatchTransactions(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::WatchTransactionsResponse>>(PrepareAsyncWatchTransactionsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest* request, ::onos::config::admin::GetTransactionResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTransaction(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest* request, ::onos::config::admin::GetTransactionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListTransactions(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::ListTransactionsResponse>* reactor) override;
      void WatchTransactions(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::WatchTransactionsResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetTransactionResponse>* AsyncGetTransactionRaw(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetTransactionResponse>* PrepareAsyncGetTransactionRaw(::grpc::ClientContext* context, const ::onos::config::admin::GetTransactionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::config::admin::ListTransactionsResponse>* ListTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::ListTransactionsResponse>* AsyncListTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::ListTransactionsResponse>* PrepareAsyncListTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListTransactionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::config::admin::WatchTransactionsResponse>* WatchTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::WatchTransactionsResponse>* AsyncWatchTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::WatchTransactionsResponse>* PrepareAsyncWatchTransactionsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchTransactionsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetTransaction_;
    const ::grpc::internal::RpcMethod rpcmethod_ListTransactions_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchTransactions_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Get transaction by its ID or index
    virtual ::grpc::Status GetTransaction(::grpc::ServerContext* context, const ::onos::config::admin::GetTransactionRequest* request, ::onos::config::admin::GetTransactionResponse* response);
    // List returns all configuration transactions
    virtual ::grpc::Status ListTransactions(::grpc::ServerContext* context, const ::onos::config::admin::ListTransactionsRequest* request, ::grpc::ServerWriter< ::onos::config::admin::ListTransactionsResponse>* writer);
    // Watch returns a stream of configuration transaction change notifications
    virtual ::grpc::Status WatchTransactions(::grpc::ServerContext* context, const ::onos::config::admin::WatchTransactionsRequest* request, ::grpc::ServerWriter< ::onos::config::admin::WatchTransactionsResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTransaction() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetTransactionRequest* /*request*/, ::onos::config::admin::GetTransactionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTransaction(::grpc::ServerContext* context, ::onos::config::admin::GetTransactionRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::config::admin::GetTransactionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListTransactions() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTransactions(::grpc::ServerContext* context, ::onos::config::admin::ListTransactionsRequest* request, ::grpc::ServerAsyncWriter< ::onos::config::admin::ListTransactionsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchTransactions() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_WatchTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchTransactions(::grpc::ServerContext* context, ::onos::config::admin::WatchTransactionsRequest* request, ::grpc::ServerAsyncWriter< ::onos::config::admin::WatchTransactionsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetTransaction<WithAsyncMethod_ListTransactions<WithAsyncMethod_WatchTransactions<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTransaction() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::GetTransactionRequest, ::onos::config::admin::GetTransactionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::GetTransactionRequest* request, ::onos::config::admin::GetTransactionResponse* response) { return this->GetTransaction(context, request, response); }));}
    void SetMessageAllocatorFor_GetTransaction(
        ::grpc::MessageAllocator< ::onos::config::admin::GetTransactionRequest, ::onos::config::admin::GetTransactionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::GetTransactionRequest, ::onos::config::admin::GetTransactionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetTransactionRequest* /*request*/, ::onos::config::admin::GetTransactionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::GetTransactionRequest* /*request*/, ::onos::config::admin::GetTransactionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListTransactions() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::config::admin::ListTransactionsRequest, ::onos::config::admin::ListTransactionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::ListTransactionsRequest* request) { return this->ListTransactions(context, request); }));
    }
    ~WithCallbackMethod_ListTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::config::admin::ListTransactionsResponse>* ListTransactions(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::ListTransactionsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchTransactions() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::config::admin::WatchTransactionsRequest, ::onos::config::admin::WatchTransactionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::WatchTransactionsRequest* request) { return this->WatchTransactions(context, request); }));
    }
    ~WithCallbackMethod_WatchTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::config::admin::WatchTransactionsResponse>* WatchTransactions(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::WatchTransactionsRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetTransaction<WithCallbackMethod_ListTransactions<WithCallbackMethod_WatchTransactions<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTransaction() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetTransactionRequest* /*request*/, ::onos::config::admin::GetTransactionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListTransactions() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchTransactions() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_WatchTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTransaction() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetTransactionRequest* /*request*/, ::onos::config::admin::GetTransactionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTransaction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListTransactions() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTransactions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchTransactions() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_WatchTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchTransactions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTransaction() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTransaction(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetTransactionRequest* /*request*/, ::onos::config::admin::GetTransactionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTransaction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListTransactions() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListTransactions(context, request); }));
    }
    ~WithRawCallbackMethod_ListTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListTransactions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchTransactions() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchTransactions(context, request); }));
    }
    ~WithRawCallbackMethod_WatchTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchTransactions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTransaction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTransaction() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::config::admin::GetTransactionRequest, ::onos::config::admin::GetTransactionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::config::admin::GetTransactionRequest, ::onos::config::admin::GetTransactionResponse>* streamer) {
                       return this->StreamedGetTransaction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTransaction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTransaction(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetTransactionRequest* /*request*/, ::onos::config::admin::GetTransactionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTransaction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::config::admin::GetTransactionRequest,::onos::config::admin::GetTransactionResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetTransaction<Service > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_ListTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListTransactions() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::config::admin::ListTransactionsRequest, ::onos::config::admin::ListTransactionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::config::admin::ListTransactionsRequest, ::onos::config::admin::ListTransactionsResponse>* streamer) {
                       return this->StreamedListTransactions(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListTransactions(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::config::admin::ListTransactionsRequest,::onos::config::admin::ListTransactionsResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchTransactions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchTransactions() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::config::admin::WatchTransactionsRequest, ::onos::config::admin::WatchTransactionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::config::admin::WatchTransactionsRequest, ::onos::config::admin::WatchTransactionsResponse>* streamer) {
                       return this->StreamedWatchTransactions(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchTransactions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchTransactions(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchTransactionsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchTransactionsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchTransactions(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::config::admin::WatchTransactionsRequest,::onos::config::admin::WatchTransactionsResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_ListTransactions<WithSplitStreamingMethod_WatchTransactions<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetTransaction<WithSplitStreamingMethod_ListTransactions<WithSplitStreamingMethod_WatchTransactions<Service > > > StreamedService;
};

// Configurations -------------------------------------
//
// ConfigurationService provides means to inspect the contents of the internal configurations store.
class ConfigurationService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.config.admin.ConfigurationService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Get configuration by its target ID
    virtual ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::onos::config::admin::GetConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetConfigurationResponse>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetConfigurationResponse>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetConfigurationResponse>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetConfigurationResponse>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    // List returns all target configurations
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::ListConfigurationsResponse>> ListConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::ListConfigurationsResponse>>(ListConfigurationsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListConfigurationsResponse>> AsyncListConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListConfigurationsResponse>>(AsyncListConfigurationsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListConfigurationsResponse>> PrepareAsyncListConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListConfigurationsResponse>>(PrepareAsyncListConfigurationsRaw(context, request, cq));
    }
    // Watch returns a stream of configuration change notifications
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>> WatchConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>>(WatchConfigurationsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>> AsyncWatchConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>>(AsyncWatchConfigurationsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>> PrepareAsyncWatchConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>>(PrepareAsyncWatchConfigurationsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Get configuration by its target ID
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest* request, ::onos::config::admin::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest* request, ::onos::config::admin::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // List returns all target configurations
      virtual void ListConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::ListConfigurationsResponse>* reactor) = 0;
      // Watch returns a stream of configuration change notifications
      virtual void WatchConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::WatchConfigurationsResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetConfigurationResponse>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::config::admin::GetConfigurationResponse>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::config::admin::ListConfigurationsResponse>* ListConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListConfigurationsResponse>* AsyncListConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::ListConfigurationsResponse>* PrepareAsyncListConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>* WatchConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>* AsyncWatchConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::config::admin::WatchConfigurationsResponse>* PrepareAsyncWatchConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::onos::config::admin::GetConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetConfigurationResponse>> AsyncGetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetConfigurationResponse>>(AsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetConfigurationResponse>> PrepareAsyncGetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetConfigurationResponse>>(PrepareAsyncGetConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::ListConfigurationsResponse>> ListConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::ListConfigurationsResponse>>(ListConfigurationsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ListConfigurationsResponse>> AsyncListConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ListConfigurationsResponse>>(AsyncListConfigurationsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ListConfigurationsResponse>> PrepareAsyncListConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::ListConfigurationsResponse>>(PrepareAsyncListConfigurationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::WatchConfigurationsResponse>> WatchConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::config::admin::WatchConfigurationsResponse>>(WatchConfigurationsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::WatchConfigurationsResponse>> AsyncWatchConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::WatchConfigurationsResponse>>(AsyncWatchConfigurationsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::WatchConfigurationsResponse>> PrepareAsyncWatchConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::config::admin::WatchConfigurationsResponse>>(PrepareAsyncWatchConfigurationsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest* request, ::onos::config::admin::GetConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConfiguration(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest* request, ::onos::config::admin::GetConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::ListConfigurationsResponse>* reactor) override;
      void WatchConfigurations(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest* request, ::grpc::ClientReadReactor< ::onos::config::admin::WatchConfigurationsResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetConfigurationResponse>* AsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::config::admin::GetConfigurationResponse>* PrepareAsyncGetConfigurationRaw(::grpc::ClientContext* context, const ::onos::config::admin::GetConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::config::admin::ListConfigurationsResponse>* ListConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::ListConfigurationsResponse>* AsyncListConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::ListConfigurationsResponse>* PrepareAsyncListConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::ListConfigurationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::config::admin::WatchConfigurationsResponse>* WatchConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::WatchConfigurationsResponse>* AsyncWatchConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::config::admin::WatchConfigurationsResponse>* PrepareAsyncWatchConfigurationsRaw(::grpc::ClientContext* context, const ::onos::config::admin::WatchConfigurationsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_ListConfigurations_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchConfigurations_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Get configuration by its target ID
    virtual ::grpc::Status GetConfiguration(::grpc::ServerContext* context, const ::onos::config::admin::GetConfigurationRequest* request, ::onos::config::admin::GetConfigurationResponse* response);
    // List returns all target configurations
    virtual ::grpc::Status ListConfigurations(::grpc::ServerContext* context, const ::onos::config::admin::ListConfigurationsRequest* request, ::grpc::ServerWriter< ::onos::config::admin::ListConfigurationsResponse>* writer);
    // Watch returns a stream of configuration change notifications
    virtual ::grpc::Status WatchConfigurations(::grpc::ServerContext* context, const ::onos::config::admin::WatchConfigurationsRequest* request, ::grpc::ServerWriter< ::onos::config::admin::WatchConfigurationsResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetConfigurationRequest* /*request*/, ::onos::config::admin::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::onos::config::admin::GetConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::config::admin::GetConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListConfigurations(::grpc::ServerContext* context, ::onos::config::admin::ListConfigurationsRequest* request, ::grpc::ServerAsyncWriter< ::onos::config::admin::ListConfigurationsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchConfigurations() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_WatchConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchConfigurations(::grpc::ServerContext* context, ::onos::config::admin::WatchConfigurationsRequest* request, ::grpc::ServerAsyncWriter< ::onos::config::admin::WatchConfigurationsResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetConfiguration<WithAsyncMethod_ListConfigurations<WithAsyncMethod_WatchConfigurations<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::GetConfigurationRequest, ::onos::config::admin::GetConfigurationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::GetConfigurationRequest* request, ::onos::config::admin::GetConfigurationResponse* response) { return this->GetConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_GetConfiguration(
        ::grpc::MessageAllocator< ::onos::config::admin::GetConfigurationRequest, ::onos::config::admin::GetConfigurationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::config::admin::GetConfigurationRequest, ::onos::config::admin::GetConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetConfigurationRequest* /*request*/, ::onos::config::admin::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::GetConfigurationRequest* /*request*/, ::onos::config::admin::GetConfigurationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::config::admin::ListConfigurationsRequest, ::onos::config::admin::ListConfigurationsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::ListConfigurationsRequest* request) { return this->ListConfigurations(context, request); }));
    }
    ~WithCallbackMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::config::admin::ListConfigurationsResponse>* ListConfigurations(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::ListConfigurationsRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchConfigurations() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::config::admin::WatchConfigurationsRequest, ::onos::config::admin::WatchConfigurationsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::config::admin::WatchConfigurationsRequest* request) { return this->WatchConfigurations(context, request); }));
    }
    ~WithCallbackMethod_WatchConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::config::admin::WatchConfigurationsResponse>* WatchConfigurations(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::config::admin::WatchConfigurationsRequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetConfiguration<WithCallbackMethod_ListConfigurations<WithCallbackMethod_WatchConfigurations<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetConfigurationRequest* /*request*/, ::onos::config::admin::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchConfigurations() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_WatchConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetConfigurationRequest* /*request*/, ::onos::config::admin::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListConfigurations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchConfigurations() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_WatchConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchConfigurations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConfiguration(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetConfigurationRequest* /*request*/, ::onos::config::admin::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListConfigurations(context, request); }));
    }
    ~WithRawCallbackMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListConfigurations(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchConfigurations() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchConfigurations(context, request); }));
    }
    ~WithRawCallbackMethod_WatchConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchConfigurations(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConfiguration() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::config::admin::GetConfigurationRequest, ::onos::config::admin::GetConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::config::admin::GetConfigurationRequest, ::onos::config::admin::GetConfigurationResponse>* streamer) {
                       return this->StreamedGetConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfiguration(::grpc::ServerContext* /*context*/, const ::onos::config::admin::GetConfigurationRequest* /*request*/, ::onos::config::admin::GetConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::config::admin::GetConfigurationRequest,::onos::config::admin::GetConfigurationResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetConfiguration<Service > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_ListConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListConfigurations() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::config::admin::ListConfigurationsRequest, ::onos::config::admin::ListConfigurationsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::config::admin::ListConfigurationsRequest, ::onos::config::admin::ListConfigurationsResponse>* streamer) {
                       return this->StreamedListConfigurations(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::ListConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::ListConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListConfigurations(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::config::admin::ListConfigurationsRequest,::onos::config::admin::ListConfigurationsResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchConfigurations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchConfigurations() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::config::admin::WatchConfigurationsRequest, ::onos::config::admin::WatchConfigurationsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::config::admin::WatchConfigurationsRequest, ::onos::config::admin::WatchConfigurationsResponse>* streamer) {
                       return this->StreamedWatchConfigurations(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchConfigurations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchConfigurations(::grpc::ServerContext* /*context*/, const ::onos::config::admin::WatchConfigurationsRequest* /*request*/, ::grpc::ServerWriter< ::onos::config::admin::WatchConfigurationsResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchConfigurations(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::config::admin::WatchConfigurationsRequest,::onos::config::admin::WatchConfigurationsResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_ListConfigurations<WithSplitStreamingMethod_WatchConfigurations<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetConfiguration<WithSplitStreamingMethod_ListConfigurations<WithSplitStreamingMethod_WatchConfigurations<Service > > > StreamedService;
};

}  // namespace admin
}  // namespace config
}  // namespace onos


#endif  // GRPC_onos_2fconfig_2fadmin_2fadmin_2eproto__INCLUDED
