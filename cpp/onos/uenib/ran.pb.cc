// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/uenib/ran.proto

#include "onos/uenib/ran.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace onos {
namespace uenib {
constexpr CellConnection::CellConnection(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , signal_strength_(0){}
struct CellConnectionDefaultTypeInternal {
  constexpr CellConnectionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CellConnectionDefaultTypeInternal() {}
  union {
    CellConnection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CellConnectionDefaultTypeInternal _CellConnection_default_instance_;
constexpr CellInfo::CellInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : candidate_cells_()
  , serving_cell_(nullptr){}
struct CellInfoDefaultTypeInternal {
  constexpr CellInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CellInfoDefaultTypeInternal() {}
  union {
    CellInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CellInfoDefaultTypeInternal _CellInfo_default_instance_;
constexpr DuUeF1apID::DuUeF1apID(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(int64_t{0}){}
struct DuUeF1apIDDefaultTypeInternal {
  constexpr DuUeF1apIDDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DuUeF1apIDDefaultTypeInternal() {}
  union {
    DuUeF1apID _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DuUeF1apIDDefaultTypeInternal _DuUeF1apID_default_instance_;
constexpr CuUeF1apID::CuUeF1apID(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(int64_t{0}){}
struct CuUeF1apIDDefaultTypeInternal {
  constexpr CuUeF1apIDDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CuUeF1apIDDefaultTypeInternal() {}
  union {
    CuUeF1apID _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CuUeF1apIDDefaultTypeInternal _CuUeF1apID_default_instance_;
constexpr RanUeNgapID::RanUeNgapID(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(int64_t{0}){}
struct RanUeNgapIDDefaultTypeInternal {
  constexpr RanUeNgapIDDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RanUeNgapIDDefaultTypeInternal() {}
  union {
    RanUeNgapID _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RanUeNgapIDDefaultTypeInternal _RanUeNgapID_default_instance_;
constexpr EnbUeS1apID::EnbUeS1apID(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(0){}
struct EnbUeS1apIDDefaultTypeInternal {
  constexpr EnbUeS1apIDDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EnbUeS1apIDDefaultTypeInternal() {}
  union {
    EnbUeS1apID _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EnbUeS1apIDDefaultTypeInternal _EnbUeS1apID_default_instance_;
constexpr AmfUeNgapID::AmfUeNgapID(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(int64_t{0}){}
struct AmfUeNgapIDDefaultTypeInternal {
  constexpr AmfUeNgapIDDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AmfUeNgapIDDefaultTypeInternal() {}
  union {
    AmfUeNgapID _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AmfUeNgapIDDefaultTypeInternal _AmfUeNgapID_default_instance_;
constexpr UeIdentity::UeIdentity(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : du_ue_f1ap_id_(nullptr)
  , cu_ue_f1ap_id_(nullptr)
  , ran_ue_ngap_id_(nullptr)
  , enb_ue_s1ap_id_(nullptr)
  , amf_ue_ngap_id_(nullptr)
  , preferred_id_type_(0)
{}
struct UeIdentityDefaultTypeInternal {
  constexpr UeIdentityDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UeIdentityDefaultTypeInternal() {}
  union {
    UeIdentity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UeIdentityDefaultTypeInternal _UeIdentity_default_instance_;
constexpr BearerId::BearerId(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct BearerIdDefaultTypeInternal {
  constexpr BearerIdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BearerIdDefaultTypeInternal() {}
  union {
    BearerId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BearerIdDefaultTypeInternal _BearerId_default_instance_;
constexpr DrbId::DrbId(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct DrbIdDefaultTypeInternal {
  constexpr DrbIdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DrbIdDefaultTypeInternal() {}
  union {
    DrbId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DrbIdDefaultTypeInternal _DrbId_default_instance_;
constexpr FiveGDrbId::FiveGDrbId(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : flows_map_to_drb_()
  , qfi_(nullptr)
  , value_(0){}
struct FiveGDrbIdDefaultTypeInternal {
  constexpr FiveGDrbIdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FiveGDrbIdDefaultTypeInternal() {}
  union {
    FiveGDrbId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FiveGDrbIdDefaultTypeInternal _FiveGDrbId_default_instance_;
constexpr Qfi::Qfi(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(0){}
struct QfiDefaultTypeInternal {
  constexpr QfiDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QfiDefaultTypeInternal() {}
  union {
    Qfi _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QfiDefaultTypeInternal _Qfi_default_instance_;
constexpr QoSflowLevelParameters::QoSflowLevelParameters(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct QoSflowLevelParametersDefaultTypeInternal {
  constexpr QoSflowLevelParametersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QoSflowLevelParametersDefaultTypeInternal() {}
  union {
    QoSflowLevelParameters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QoSflowLevelParametersDefaultTypeInternal _QoSflowLevelParameters_default_instance_;
constexpr DynamicFiveQi::DynamicFiveQi(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : priority_level_(0)
  , packet_delay_budge_(0)
  , packet_error_rate_(0){}
struct DynamicFiveQiDefaultTypeInternal {
  constexpr DynamicFiveQiDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DynamicFiveQiDefaultTypeInternal() {}
  union {
    DynamicFiveQi _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DynamicFiveQiDefaultTypeInternal _DynamicFiveQi_default_instance_;
constexpr NonDynamicFiveQi::NonDynamicFiveQi(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : five_qi_(nullptr){}
struct NonDynamicFiveQiDefaultTypeInternal {
  constexpr NonDynamicFiveQiDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NonDynamicFiveQiDefaultTypeInternal() {}
  union {
    NonDynamicFiveQi _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NonDynamicFiveQiDefaultTypeInternal _NonDynamicFiveQi_default_instance_;
constexpr FiveQi::FiveQi(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(0){}
struct FiveQiDefaultTypeInternal {
  constexpr FiveQiDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FiveQiDefaultTypeInternal() {}
  union {
    FiveQi _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FiveQiDefaultTypeInternal _FiveQi_default_instance_;
constexpr FourGDrbId::FourGDrbId(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : qci_(nullptr)
  , value_(0){}
struct FourGDrbIdDefaultTypeInternal {
  constexpr FourGDrbIdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FourGDrbIdDefaultTypeInternal() {}
  union {
    FourGDrbId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FourGDrbIdDefaultTypeInternal _FourGDrbId_default_instance_;
constexpr Qci::Qci(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(0){}
struct QciDefaultTypeInternal {
  constexpr QciDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~QciDefaultTypeInternal() {}
  union {
    Qci _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT QciDefaultTypeInternal _Qci_default_instance_;
constexpr RsmUeInfo::RsmUeInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bearer_id_list_()
  , slice_list_()
  , global_ue_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cell_global_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cu_e2_node_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , du_e2_node_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ue_id_list_(nullptr){}
struct RsmUeInfoDefaultTypeInternal {
  constexpr RsmUeInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RsmUeInfoDefaultTypeInternal() {}
  union {
    RsmUeInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RsmUeInfoDefaultTypeInternal _RsmUeInfo_default_instance_;
constexpr SliceInfo::SliceInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : du_e2_node_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , cu_e2_node_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , slice_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , slice_parameters_(nullptr)
  , drb_id_(nullptr)
  , slice_type_(0)
{}
struct SliceInfoDefaultTypeInternal {
  constexpr SliceInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SliceInfoDefaultTypeInternal() {}
  union {
    SliceInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SliceInfoDefaultTypeInternal _SliceInfo_default_instance_;
constexpr RSMSliceParameters::RSMSliceParameters(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : scheduler_type_(0)

  , weight_(0)
  , qos_level_(0){}
struct RSMSliceParametersDefaultTypeInternal {
  constexpr RSMSliceParametersDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RSMSliceParametersDefaultTypeInternal() {}
  union {
    RSMSliceParameters _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RSMSliceParametersDefaultTypeInternal _RSMSliceParameters_default_instance_;
}  // namespace uenib
}  // namespace onos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_onos_2fuenib_2fran_2eproto[21];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_onos_2fuenib_2fran_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_onos_2fuenib_2fran_2eproto = nullptr;

const uint32_t TableStruct_onos_2fuenib_2fran_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::CellConnection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::CellConnection, id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::CellConnection, signal_strength_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::CellInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::CellInfo, serving_cell_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::CellInfo, candidate_cells_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DuUeF1apID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DuUeF1apID, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::CuUeF1apID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::CuUeF1apID, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RanUeNgapID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RanUeNgapID, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::EnbUeS1apID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::EnbUeS1apID, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::AmfUeNgapID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::AmfUeNgapID, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::UeIdentity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::UeIdentity, du_ue_f1ap_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::UeIdentity, cu_ue_f1ap_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::UeIdentity, ran_ue_ngap_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::UeIdentity, enb_ue_s1ap_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::UeIdentity, amf_ue_ngap_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::UeIdentity, preferred_id_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::BearerId, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::BearerId, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::onos::uenib::BearerId, bearer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DrbId, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DrbId, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DrbId, drb_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FiveGDrbId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FiveGDrbId, value_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FiveGDrbId, qfi_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FiveGDrbId, flows_map_to_drb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::Qfi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::Qfi, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::QoSflowLevelParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::QoSflowLevelParameters, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::onos::uenib::QoSflowLevelParameters, qos_flow_level_parameters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DynamicFiveQi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DynamicFiveQi, priority_level_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DynamicFiveQi, packet_delay_budge_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::DynamicFiveQi, packet_error_rate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::NonDynamicFiveQi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::NonDynamicFiveQi, five_qi_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FiveQi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FiveQi, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FourGDrbId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FourGDrbId, value_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::FourGDrbId, qci_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::Qci, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::Qci, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RsmUeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RsmUeInfo, global_ue_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RsmUeInfo, ue_id_list_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RsmUeInfo, bearer_id_list_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RsmUeInfo, cell_global_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RsmUeInfo, cu_e2_node_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RsmUeInfo, du_e2_node_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RsmUeInfo, slice_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::SliceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::SliceInfo, du_e2_node_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::SliceInfo, cu_e2_node_id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::SliceInfo, id_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::SliceInfo, slice_desc_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::SliceInfo, slice_parameters_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::SliceInfo, slice_type_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::SliceInfo, drb_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RSMSliceParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RSMSliceParameters, scheduler_type_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RSMSliceParameters, weight_),
  PROTOBUF_FIELD_OFFSET(::onos::uenib::RSMSliceParameters, qos_level_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::onos::uenib::CellConnection)},
  { 8, -1, -1, sizeof(::onos::uenib::CellInfo)},
  { 16, -1, -1, sizeof(::onos::uenib::DuUeF1apID)},
  { 23, -1, -1, sizeof(::onos::uenib::CuUeF1apID)},
  { 30, -1, -1, sizeof(::onos::uenib::RanUeNgapID)},
  { 37, -1, -1, sizeof(::onos::uenib::EnbUeS1apID)},
  { 44, -1, -1, sizeof(::onos::uenib::AmfUeNgapID)},
  { 51, -1, -1, sizeof(::onos::uenib::UeIdentity)},
  { 63, -1, -1, sizeof(::onos::uenib::BearerId)},
  { 71, -1, -1, sizeof(::onos::uenib::DrbId)},
  { 80, -1, -1, sizeof(::onos::uenib::FiveGDrbId)},
  { 89, -1, -1, sizeof(::onos::uenib::Qfi)},
  { 96, -1, -1, sizeof(::onos::uenib::QoSflowLevelParameters)},
  { 105, -1, -1, sizeof(::onos::uenib::DynamicFiveQi)},
  { 114, -1, -1, sizeof(::onos::uenib::NonDynamicFiveQi)},
  { 121, -1, -1, sizeof(::onos::uenib::FiveQi)},
  { 128, -1, -1, sizeof(::onos::uenib::FourGDrbId)},
  { 136, -1, -1, sizeof(::onos::uenib::Qci)},
  { 143, -1, -1, sizeof(::onos::uenib::RsmUeInfo)},
  { 156, -1, -1, sizeof(::onos::uenib::SliceInfo)},
  { 169, -1, -1, sizeof(::onos::uenib::RSMSliceParameters)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_CellConnection_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_CellInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_DuUeF1apID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_CuUeF1apID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_RanUeNgapID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_EnbUeS1apID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_AmfUeNgapID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_UeIdentity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_BearerId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_DrbId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_FiveGDrbId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_Qfi_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_QoSflowLevelParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_DynamicFiveQi_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_NonDynamicFiveQi_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_FiveQi_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_FourGDrbId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_Qci_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_RsmUeInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_SliceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::onos::uenib::_RSMSliceParameters_default_instance_),
};

const char descriptor_table_protodef_onos_2fuenib_2fran_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024onos/uenib/ran.proto\022\nonos.uenib\032\024gogo"
  "proto/gogo.proto\"C\n\016CellConnection\022\030\n\002id"
  "\030\001 \001(\tB\014\342\336\037\002ID\372\336\037\002ID\022\027\n\017signal_strength\030"
  "\002 \001(\001\"q\n\010CellInfo\0220\n\014serving_cell\030\001 \001(\0132"
  "\032.onos.uenib.CellConnection\0223\n\017candidate"
  "_cells\030\002 \003(\0132\032.onos.uenib.CellConnection"
  "\"\033\n\nDuUeF1apID\022\r\n\005value\030\001 \001(\003\"\033\n\nCuUeF1a"
  "pID\022\r\n\005value\030\001 \001(\003\"\034\n\013RanUeNgapID\022\r\n\005val"
  "ue\030\001 \001(\003\"\034\n\013EnbUeS1apID\022\r\n\005value\030\001 \001(\005\"\034"
  "\n\013AmfUeNgapID\022\r\n\005value\030\001 \001(\003\"\226\003\n\nUeIdent"
  "ity\022=\n\rdu_ue_f1ap_id\030\001 \001(\0132\026.onos.uenib."
  "DuUeF1apIDB\016\342\336\037\nDuUeF1apID\022=\n\rcu_ue_f1ap"
  "_id\030\002 \001(\0132\026.onos.uenib.CuUeF1apIDB\016\342\336\037\nC"
  "uUeF1apID\022@\n\016ran_ue_ngap_id\030\003 \001(\0132\027.onos"
  ".uenib.RanUeNgapIDB\017\342\336\037\013RANUeNgapID\022@\n\016e"
  "nb_ue_s1ap_id\030\004 \001(\0132\027.onos.uenib.EnbUeS1"
  "apIDB\017\342\336\037\013EnbUeS1apID\022@\n\016amf_ue_ngap_id\030"
  "\005 \001(\0132\027.onos.uenib.AmfUeNgapIDB\017\342\336\037\013AMFU"
  "eNgapID\022D\n\021preferred_id_type\030\006 \001(\0162\024.ono"
  "s.uenib.UeIdTypeB\023\342\336\037\017PreferredIDType\"C\n"
  "\010BearerId\022*\n\006drb_id\030\001 \001(\0132\021.onos.uenib.D"
  "rbIdH\000R\005drbIDB\013\n\tbearer_id\"\211\001\n\005DrbId\022:\n\014"
  "four_gdrb_id\030\001 \001(\0132\026.onos.uenib.FourGDrb"
  "IdH\000R\nfourGDrbID\022:\n\014five_gdrb_id\030\002 \001(\0132\026"
  ".onos.uenib.FiveGDrbIdH\000R\nfiveGDrbIDB\010\n\006"
  "drb_id\"w\n\nFiveGDrbId\022\r\n\005value\030\001 \001(\005\022\034\n\003q"
  "fi\030\002 \001(\0132\017.onos.uenib.Qfi\022<\n\020flows_map_t"
  "o_drb\030\003 \003(\0132\".onos.uenib.QoSflowLevelPar"
  "ameters\"\024\n\003Qfi\022\r\n\005value\030\001 \001(\005\"\250\001\n\026QoSflo"
  "wLevelParameters\0224\n\017dynamic_five_qi\030\001 \001("
  "\0132\031.onos.uenib.DynamicFiveQiH\000\022;\n\023non_dy"
  "namic_five_qi\030\002 \001(\0132\034.onos.uenib.NonDyna"
  "micFiveQiH\000B\033\n\031qos_flow_level_parameters"
  "\"^\n\rDynamicFiveQi\022\026\n\016priority_level\030\001 \001("
  "\005\022\032\n\022packet_delay_budge\030\002 \001(\005\022\031\n\021packet_"
  "error_rate\030\003 \001(\005\"7\n\020NonDynamicFiveQi\022#\n\007"
  "five_qi\030\001 \001(\0132\022.onos.uenib.FiveQi\"\027\n\006Fiv"
  "eQi\022\r\n\005value\030\001 \001(\005\"9\n\nFourGDrbId\022\r\n\005valu"
  "e\030\001 \001(\005\022\034\n\003qci\030\002 \001(\0132\017.onos.uenib.Qci\"\024\n"
  "\003Qci\022\r\n\005value\030\001 \001(\005\"\374\001\n\tRsmUeInfo\022$\n\014glo"
  "bal_ue_id\030\001 \001(\tB\016\342\336\037\nGlobalUeID\022*\n\nue_id"
  "_list\030\002 \001(\0132\026.onos.uenib.UeIdentity\022,\n\016b"
  "earer_id_list\030\003 \003(\0132\024.onos.uenib.BearerI"
  "d\022\026\n\016cell_global_id\030\004 \001(\t\022\025\n\rcu_e2_node_"
  "id\030\005 \001(\t\022\025\n\rdu_e2_node_id\030\006 \001(\t\022)\n\nslice"
  "_list\030\007 \003(\0132\025.onos.uenib.SliceInfo\"\354\001\n\tS"
  "liceInfo\022\025\n\rdu_e2_node_id\030\001 \001(\t\022\025\n\rcu_e2"
  "_node_id\030\002 \001(\t\022\022\n\002id\030\003 \001(\tB\006\342\336\037\002ID\022\022\n\nsl"
  "ice_desc\030\004 \001(\t\0228\n\020slice_parameters\030\005 \001(\013"
  "2\036.onos.uenib.RSMSliceParameters\022,\n\nslic"
  "e_type\030\006 \001(\0162\030.onos.uenib.RSMSliceType\022!"
  "\n\006drb_id\030\007 \001(\0132\021.onos.uenib.DrbId\"m\n\022RSM"
  "SliceParameters\0224\n\016scheduler_type\030\001 \001(\0162"
  "\034.onos.uenib.RSMSchedulerType\022\016\n\006weight\030"
  "\002 \001(\005\022\021\n\tqos_level\030\003 \001(\005*\246\001\n\010UeIdType\022\035\n"
  "\031UE_ID_TYPE_CU_UE_F1_AP_ID\020\000\022\035\n\031UE_ID_TY"
  "PE_DU_UE_F1_AP_ID\020\001\022\035\n\031UE_ID_TYPE_RAN_UE"
  "_NGAP_ID\020\002\022\035\n\031UE_ID_TYPE_AMF_UE_NGAP_ID\020"
  "\003\022\036\n\032UE_ID_TYPE_ENB_UE_S1_AP_ID\020\004*x\n\020RSM"
  "SchedulerType\022\036\n\032SCHEDULER_TYPE_ROUND_RO"
  "BIN\020\000\022&\n\"SCHEDULER_TYPE_PROPORTIONALLY_F"
  "AIR\020\001\022\034\n\030SCHEDULER_TYPE_QOS_BASED\020\002*@\n\014R"
  "SMSliceType\022\027\n\023SLICE_TYPE_DL_SLICE\020\000\022\027\n\023"
  "SLICE_TYPE_UL_SLICE\020\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_onos_2fuenib_2fran_2eproto_deps[1] = {
  &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_onos_2fuenib_2fran_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fuenib_2fran_2eproto = {
  false, false, 2549, descriptor_table_protodef_onos_2fuenib_2fran_2eproto, "onos/uenib/ran.proto", 
  &descriptor_table_onos_2fuenib_2fran_2eproto_once, descriptor_table_onos_2fuenib_2fran_2eproto_deps, 1, 21,
  schemas, file_default_instances, TableStruct_onos_2fuenib_2fran_2eproto::offsets,
  file_level_metadata_onos_2fuenib_2fran_2eproto, file_level_enum_descriptors_onos_2fuenib_2fran_2eproto, file_level_service_descriptors_onos_2fuenib_2fran_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_onos_2fuenib_2fran_2eproto_getter() {
  return &descriptor_table_onos_2fuenib_2fran_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_onos_2fuenib_2fran_2eproto(&descriptor_table_onos_2fuenib_2fran_2eproto);
namespace onos {
namespace uenib {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UeIdType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fuenib_2fran_2eproto);
  return file_level_enum_descriptors_onos_2fuenib_2fran_2eproto[0];
}
bool UeIdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RSMSchedulerType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fuenib_2fran_2eproto);
  return file_level_enum_descriptors_onos_2fuenib_2fran_2eproto[1];
}
bool RSMSchedulerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RSMSliceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_onos_2fuenib_2fran_2eproto);
  return file_level_enum_descriptors_onos_2fuenib_2fran_2eproto[2];
}
bool RSMSliceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CellConnection::_Internal {
 public:
};

CellConnection::CellConnection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.CellConnection)
}
CellConnection::CellConnection(const CellConnection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  signal_strength_ = from.signal_strength_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.CellConnection)
}

inline void CellConnection::SharedCtor() {
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
signal_strength_ = 0;
}

CellConnection::~CellConnection() {
  // @@protoc_insertion_point(destructor:onos.uenib.CellConnection)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CellConnection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CellConnection::ArenaDtor(void* object) {
  CellConnection* _this = reinterpret_cast< CellConnection* >(object);
  (void)_this;
}
void CellConnection::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CellConnection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CellConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.CellConnection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  signal_strength_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CellConnection::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.CellConnection.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double signal_strength = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          signal_strength_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CellConnection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.CellConnection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ID"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.CellConnection.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // double signal_strength = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_signal_strength = this->_internal_signal_strength();
  uint64_t raw_signal_strength;
  memcpy(&raw_signal_strength, &tmp_signal_strength, sizeof(tmp_signal_strength));
  if (raw_signal_strength != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_signal_strength(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.CellConnection)
  return target;
}

size_t CellConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.CellConnection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ID"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // double signal_strength = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_signal_strength = this->_internal_signal_strength();
  uint64_t raw_signal_strength;
  memcpy(&raw_signal_strength, &tmp_signal_strength, sizeof(tmp_signal_strength));
  if (raw_signal_strength != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CellConnection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CellConnection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CellConnection::GetClassData() const { return &_class_data_; }

void CellConnection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CellConnection *>(to)->MergeFrom(
      static_cast<const CellConnection &>(from));
}


void CellConnection::MergeFrom(const CellConnection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.CellConnection)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_signal_strength = from._internal_signal_strength();
  uint64_t raw_signal_strength;
  memcpy(&raw_signal_strength, &tmp_signal_strength, sizeof(tmp_signal_strength));
  if (raw_signal_strength != 0) {
    _internal_set_signal_strength(from._internal_signal_strength());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CellConnection::CopyFrom(const CellConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.CellConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CellConnection::IsInitialized() const {
  return true;
}

void CellConnection::InternalSwap(CellConnection* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(signal_strength_, other->signal_strength_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CellConnection::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[0]);
}

// ===================================================================

class CellInfo::_Internal {
 public:
  static const ::onos::uenib::CellConnection& serving_cell(const CellInfo* msg);
};

const ::onos::uenib::CellConnection&
CellInfo::_Internal::serving_cell(const CellInfo* msg) {
  return *msg->serving_cell_;
}
CellInfo::CellInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  candidate_cells_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.CellInfo)
}
CellInfo::CellInfo(const CellInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      candidate_cells_(from.candidate_cells_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_serving_cell()) {
    serving_cell_ = new ::onos::uenib::CellConnection(*from.serving_cell_);
  } else {
    serving_cell_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.uenib.CellInfo)
}

inline void CellInfo::SharedCtor() {
serving_cell_ = nullptr;
}

CellInfo::~CellInfo() {
  // @@protoc_insertion_point(destructor:onos.uenib.CellInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CellInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete serving_cell_;
}

void CellInfo::ArenaDtor(void* object) {
  CellInfo* _this = reinterpret_cast< CellInfo* >(object);
  (void)_this;
}
void CellInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CellInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CellInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.CellInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  candidate_cells_.Clear();
  if (GetArenaForAllocation() == nullptr && serving_cell_ != nullptr) {
    delete serving_cell_;
  }
  serving_cell_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CellInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.uenib.CellConnection serving_cell = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_serving_cell(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .onos.uenib.CellConnection candidate_cells = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_candidate_cells(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CellInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.CellInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.uenib.CellConnection serving_cell = 1;
  if (this->_internal_has_serving_cell()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::serving_cell(this), target, stream);
  }

  // repeated .onos.uenib.CellConnection candidate_cells = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_candidate_cells_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_candidate_cells(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.CellInfo)
  return target;
}

size_t CellInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.CellInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.uenib.CellConnection candidate_cells = 2;
  total_size += 1UL * this->_internal_candidate_cells_size();
  for (const auto& msg : this->candidate_cells_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .onos.uenib.CellConnection serving_cell = 1;
  if (this->_internal_has_serving_cell()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *serving_cell_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CellInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CellInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CellInfo::GetClassData() const { return &_class_data_; }

void CellInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CellInfo *>(to)->MergeFrom(
      static_cast<const CellInfo &>(from));
}


void CellInfo::MergeFrom(const CellInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.CellInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  candidate_cells_.MergeFrom(from.candidate_cells_);
  if (from._internal_has_serving_cell()) {
    _internal_mutable_serving_cell()->::onos::uenib::CellConnection::MergeFrom(from._internal_serving_cell());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CellInfo::CopyFrom(const CellInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.CellInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CellInfo::IsInitialized() const {
  return true;
}

void CellInfo::InternalSwap(CellInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  candidate_cells_.InternalSwap(&other->candidate_cells_);
  swap(serving_cell_, other->serving_cell_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CellInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[1]);
}

// ===================================================================

class DuUeF1apID::_Internal {
 public:
};

DuUeF1apID::DuUeF1apID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.DuUeF1apID)
}
DuUeF1apID::DuUeF1apID(const DuUeF1apID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.DuUeF1apID)
}

inline void DuUeF1apID::SharedCtor() {
value_ = int64_t{0};
}

DuUeF1apID::~DuUeF1apID() {
  // @@protoc_insertion_point(destructor:onos.uenib.DuUeF1apID)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DuUeF1apID::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DuUeF1apID::ArenaDtor(void* object) {
  DuUeF1apID* _this = reinterpret_cast< DuUeF1apID* >(object);
  (void)_this;
}
void DuUeF1apID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DuUeF1apID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DuUeF1apID::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.DuUeF1apID)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DuUeF1apID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DuUeF1apID::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.DuUeF1apID)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.DuUeF1apID)
  return target;
}

size_t DuUeF1apID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.DuUeF1apID)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DuUeF1apID::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DuUeF1apID::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DuUeF1apID::GetClassData() const { return &_class_data_; }

void DuUeF1apID::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DuUeF1apID *>(to)->MergeFrom(
      static_cast<const DuUeF1apID &>(from));
}


void DuUeF1apID::MergeFrom(const DuUeF1apID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.DuUeF1apID)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DuUeF1apID::CopyFrom(const DuUeF1apID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.DuUeF1apID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DuUeF1apID::IsInitialized() const {
  return true;
}

void DuUeF1apID::InternalSwap(DuUeF1apID* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DuUeF1apID::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[2]);
}

// ===================================================================

class CuUeF1apID::_Internal {
 public:
};

CuUeF1apID::CuUeF1apID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.CuUeF1apID)
}
CuUeF1apID::CuUeF1apID(const CuUeF1apID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.CuUeF1apID)
}

inline void CuUeF1apID::SharedCtor() {
value_ = int64_t{0};
}

CuUeF1apID::~CuUeF1apID() {
  // @@protoc_insertion_point(destructor:onos.uenib.CuUeF1apID)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CuUeF1apID::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CuUeF1apID::ArenaDtor(void* object) {
  CuUeF1apID* _this = reinterpret_cast< CuUeF1apID* >(object);
  (void)_this;
}
void CuUeF1apID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CuUeF1apID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CuUeF1apID::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.CuUeF1apID)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CuUeF1apID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CuUeF1apID::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.CuUeF1apID)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.CuUeF1apID)
  return target;
}

size_t CuUeF1apID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.CuUeF1apID)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CuUeF1apID::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CuUeF1apID::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CuUeF1apID::GetClassData() const { return &_class_data_; }

void CuUeF1apID::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CuUeF1apID *>(to)->MergeFrom(
      static_cast<const CuUeF1apID &>(from));
}


void CuUeF1apID::MergeFrom(const CuUeF1apID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.CuUeF1apID)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CuUeF1apID::CopyFrom(const CuUeF1apID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.CuUeF1apID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CuUeF1apID::IsInitialized() const {
  return true;
}

void CuUeF1apID::InternalSwap(CuUeF1apID* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CuUeF1apID::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[3]);
}

// ===================================================================

class RanUeNgapID::_Internal {
 public:
};

RanUeNgapID::RanUeNgapID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.RanUeNgapID)
}
RanUeNgapID::RanUeNgapID(const RanUeNgapID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.RanUeNgapID)
}

inline void RanUeNgapID::SharedCtor() {
value_ = int64_t{0};
}

RanUeNgapID::~RanUeNgapID() {
  // @@protoc_insertion_point(destructor:onos.uenib.RanUeNgapID)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RanUeNgapID::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RanUeNgapID::ArenaDtor(void* object) {
  RanUeNgapID* _this = reinterpret_cast< RanUeNgapID* >(object);
  (void)_this;
}
void RanUeNgapID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RanUeNgapID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RanUeNgapID::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.RanUeNgapID)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RanUeNgapID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RanUeNgapID::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.RanUeNgapID)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.RanUeNgapID)
  return target;
}

size_t RanUeNgapID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.RanUeNgapID)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RanUeNgapID::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RanUeNgapID::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RanUeNgapID::GetClassData() const { return &_class_data_; }

void RanUeNgapID::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RanUeNgapID *>(to)->MergeFrom(
      static_cast<const RanUeNgapID &>(from));
}


void RanUeNgapID::MergeFrom(const RanUeNgapID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.RanUeNgapID)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RanUeNgapID::CopyFrom(const RanUeNgapID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.RanUeNgapID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RanUeNgapID::IsInitialized() const {
  return true;
}

void RanUeNgapID::InternalSwap(RanUeNgapID* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RanUeNgapID::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[4]);
}

// ===================================================================

class EnbUeS1apID::_Internal {
 public:
};

EnbUeS1apID::EnbUeS1apID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.EnbUeS1apID)
}
EnbUeS1apID::EnbUeS1apID(const EnbUeS1apID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.EnbUeS1apID)
}

inline void EnbUeS1apID::SharedCtor() {
value_ = 0;
}

EnbUeS1apID::~EnbUeS1apID() {
  // @@protoc_insertion_point(destructor:onos.uenib.EnbUeS1apID)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void EnbUeS1apID::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EnbUeS1apID::ArenaDtor(void* object) {
  EnbUeS1apID* _this = reinterpret_cast< EnbUeS1apID* >(object);
  (void)_this;
}
void EnbUeS1apID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnbUeS1apID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EnbUeS1apID::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.EnbUeS1apID)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnbUeS1apID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EnbUeS1apID::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.EnbUeS1apID)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.EnbUeS1apID)
  return target;
}

size_t EnbUeS1apID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.EnbUeS1apID)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EnbUeS1apID::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EnbUeS1apID::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EnbUeS1apID::GetClassData() const { return &_class_data_; }

void EnbUeS1apID::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EnbUeS1apID *>(to)->MergeFrom(
      static_cast<const EnbUeS1apID &>(from));
}


void EnbUeS1apID::MergeFrom(const EnbUeS1apID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.EnbUeS1apID)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EnbUeS1apID::CopyFrom(const EnbUeS1apID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.EnbUeS1apID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnbUeS1apID::IsInitialized() const {
  return true;
}

void EnbUeS1apID::InternalSwap(EnbUeS1apID* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnbUeS1apID::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[5]);
}

// ===================================================================

class AmfUeNgapID::_Internal {
 public:
};

AmfUeNgapID::AmfUeNgapID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.AmfUeNgapID)
}
AmfUeNgapID::AmfUeNgapID(const AmfUeNgapID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.AmfUeNgapID)
}

inline void AmfUeNgapID::SharedCtor() {
value_ = int64_t{0};
}

AmfUeNgapID::~AmfUeNgapID() {
  // @@protoc_insertion_point(destructor:onos.uenib.AmfUeNgapID)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AmfUeNgapID::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AmfUeNgapID::ArenaDtor(void* object) {
  AmfUeNgapID* _this = reinterpret_cast< AmfUeNgapID* >(object);
  (void)_this;
}
void AmfUeNgapID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AmfUeNgapID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AmfUeNgapID::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.AmfUeNgapID)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AmfUeNgapID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AmfUeNgapID::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.AmfUeNgapID)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.AmfUeNgapID)
  return target;
}

size_t AmfUeNgapID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.AmfUeNgapID)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AmfUeNgapID::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AmfUeNgapID::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AmfUeNgapID::GetClassData() const { return &_class_data_; }

void AmfUeNgapID::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AmfUeNgapID *>(to)->MergeFrom(
      static_cast<const AmfUeNgapID &>(from));
}


void AmfUeNgapID::MergeFrom(const AmfUeNgapID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.AmfUeNgapID)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AmfUeNgapID::CopyFrom(const AmfUeNgapID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.AmfUeNgapID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AmfUeNgapID::IsInitialized() const {
  return true;
}

void AmfUeNgapID::InternalSwap(AmfUeNgapID* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AmfUeNgapID::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[6]);
}

// ===================================================================

class UeIdentity::_Internal {
 public:
  static const ::onos::uenib::DuUeF1apID& du_ue_f1ap_id(const UeIdentity* msg);
  static const ::onos::uenib::CuUeF1apID& cu_ue_f1ap_id(const UeIdentity* msg);
  static const ::onos::uenib::RanUeNgapID& ran_ue_ngap_id(const UeIdentity* msg);
  static const ::onos::uenib::EnbUeS1apID& enb_ue_s1ap_id(const UeIdentity* msg);
  static const ::onos::uenib::AmfUeNgapID& amf_ue_ngap_id(const UeIdentity* msg);
};

const ::onos::uenib::DuUeF1apID&
UeIdentity::_Internal::du_ue_f1ap_id(const UeIdentity* msg) {
  return *msg->du_ue_f1ap_id_;
}
const ::onos::uenib::CuUeF1apID&
UeIdentity::_Internal::cu_ue_f1ap_id(const UeIdentity* msg) {
  return *msg->cu_ue_f1ap_id_;
}
const ::onos::uenib::RanUeNgapID&
UeIdentity::_Internal::ran_ue_ngap_id(const UeIdentity* msg) {
  return *msg->ran_ue_ngap_id_;
}
const ::onos::uenib::EnbUeS1apID&
UeIdentity::_Internal::enb_ue_s1ap_id(const UeIdentity* msg) {
  return *msg->enb_ue_s1ap_id_;
}
const ::onos::uenib::AmfUeNgapID&
UeIdentity::_Internal::amf_ue_ngap_id(const UeIdentity* msg) {
  return *msg->amf_ue_ngap_id_;
}
UeIdentity::UeIdentity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.UeIdentity)
}
UeIdentity::UeIdentity(const UeIdentity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_du_ue_f1ap_id()) {
    du_ue_f1ap_id_ = new ::onos::uenib::DuUeF1apID(*from.du_ue_f1ap_id_);
  } else {
    du_ue_f1ap_id_ = nullptr;
  }
  if (from._internal_has_cu_ue_f1ap_id()) {
    cu_ue_f1ap_id_ = new ::onos::uenib::CuUeF1apID(*from.cu_ue_f1ap_id_);
  } else {
    cu_ue_f1ap_id_ = nullptr;
  }
  if (from._internal_has_ran_ue_ngap_id()) {
    ran_ue_ngap_id_ = new ::onos::uenib::RanUeNgapID(*from.ran_ue_ngap_id_);
  } else {
    ran_ue_ngap_id_ = nullptr;
  }
  if (from._internal_has_enb_ue_s1ap_id()) {
    enb_ue_s1ap_id_ = new ::onos::uenib::EnbUeS1apID(*from.enb_ue_s1ap_id_);
  } else {
    enb_ue_s1ap_id_ = nullptr;
  }
  if (from._internal_has_amf_ue_ngap_id()) {
    amf_ue_ngap_id_ = new ::onos::uenib::AmfUeNgapID(*from.amf_ue_ngap_id_);
  } else {
    amf_ue_ngap_id_ = nullptr;
  }
  preferred_id_type_ = from.preferred_id_type_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.UeIdentity)
}

inline void UeIdentity::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&du_ue_f1ap_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&preferred_id_type_) -
    reinterpret_cast<char*>(&du_ue_f1ap_id_)) + sizeof(preferred_id_type_));
}

UeIdentity::~UeIdentity() {
  // @@protoc_insertion_point(destructor:onos.uenib.UeIdentity)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UeIdentity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete du_ue_f1ap_id_;
  if (this != internal_default_instance()) delete cu_ue_f1ap_id_;
  if (this != internal_default_instance()) delete ran_ue_ngap_id_;
  if (this != internal_default_instance()) delete enb_ue_s1ap_id_;
  if (this != internal_default_instance()) delete amf_ue_ngap_id_;
}

void UeIdentity::ArenaDtor(void* object) {
  UeIdentity* _this = reinterpret_cast< UeIdentity* >(object);
  (void)_this;
}
void UeIdentity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UeIdentity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UeIdentity::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.UeIdentity)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && du_ue_f1ap_id_ != nullptr) {
    delete du_ue_f1ap_id_;
  }
  du_ue_f1ap_id_ = nullptr;
  if (GetArenaForAllocation() == nullptr && cu_ue_f1ap_id_ != nullptr) {
    delete cu_ue_f1ap_id_;
  }
  cu_ue_f1ap_id_ = nullptr;
  if (GetArenaForAllocation() == nullptr && ran_ue_ngap_id_ != nullptr) {
    delete ran_ue_ngap_id_;
  }
  ran_ue_ngap_id_ = nullptr;
  if (GetArenaForAllocation() == nullptr && enb_ue_s1ap_id_ != nullptr) {
    delete enb_ue_s1ap_id_;
  }
  enb_ue_s1ap_id_ = nullptr;
  if (GetArenaForAllocation() == nullptr && amf_ue_ngap_id_ != nullptr) {
    delete amf_ue_ngap_id_;
  }
  amf_ue_ngap_id_ = nullptr;
  preferred_id_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UeIdentity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.uenib.DuUeF1apID du_ue_f1ap_id = 1 [(.gogoproto.customname) = "DuUeF1apID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_du_ue_f1ap_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.CuUeF1apID cu_ue_f1ap_id = 2 [(.gogoproto.customname) = "CuUeF1apID"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cu_ue_f1ap_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.RanUeNgapID ran_ue_ngap_id = 3 [(.gogoproto.customname) = "RANUeNgapID"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_ran_ue_ngap_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.EnbUeS1apID enb_ue_s1ap_id = 4 [(.gogoproto.customname) = "EnbUeS1apID"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_enb_ue_s1ap_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.AmfUeNgapID amf_ue_ngap_id = 5 [(.gogoproto.customname) = "AMFUeNgapID"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_amf_ue_ngap_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.UeIdType preferred_id_type = 6 [(.gogoproto.customname) = "PreferredIDType"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_preferred_id_type(static_cast<::onos::uenib::UeIdType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UeIdentity::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.UeIdentity)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.uenib.DuUeF1apID du_ue_f1ap_id = 1 [(.gogoproto.customname) = "DuUeF1apID"];
  if (this->_internal_has_du_ue_f1ap_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::du_ue_f1ap_id(this), target, stream);
  }

  // .onos.uenib.CuUeF1apID cu_ue_f1ap_id = 2 [(.gogoproto.customname) = "CuUeF1apID"];
  if (this->_internal_has_cu_ue_f1ap_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::cu_ue_f1ap_id(this), target, stream);
  }

  // .onos.uenib.RanUeNgapID ran_ue_ngap_id = 3 [(.gogoproto.customname) = "RANUeNgapID"];
  if (this->_internal_has_ran_ue_ngap_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::ran_ue_ngap_id(this), target, stream);
  }

  // .onos.uenib.EnbUeS1apID enb_ue_s1ap_id = 4 [(.gogoproto.customname) = "EnbUeS1apID"];
  if (this->_internal_has_enb_ue_s1ap_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::enb_ue_s1ap_id(this), target, stream);
  }

  // .onos.uenib.AmfUeNgapID amf_ue_ngap_id = 5 [(.gogoproto.customname) = "AMFUeNgapID"];
  if (this->_internal_has_amf_ue_ngap_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::amf_ue_ngap_id(this), target, stream);
  }

  // .onos.uenib.UeIdType preferred_id_type = 6 [(.gogoproto.customname) = "PreferredIDType"];
  if (this->_internal_preferred_id_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_preferred_id_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.UeIdentity)
  return target;
}

size_t UeIdentity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.UeIdentity)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.uenib.DuUeF1apID du_ue_f1ap_id = 1 [(.gogoproto.customname) = "DuUeF1apID"];
  if (this->_internal_has_du_ue_f1ap_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *du_ue_f1ap_id_);
  }

  // .onos.uenib.CuUeF1apID cu_ue_f1ap_id = 2 [(.gogoproto.customname) = "CuUeF1apID"];
  if (this->_internal_has_cu_ue_f1ap_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cu_ue_f1ap_id_);
  }

  // .onos.uenib.RanUeNgapID ran_ue_ngap_id = 3 [(.gogoproto.customname) = "RANUeNgapID"];
  if (this->_internal_has_ran_ue_ngap_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ran_ue_ngap_id_);
  }

  // .onos.uenib.EnbUeS1apID enb_ue_s1ap_id = 4 [(.gogoproto.customname) = "EnbUeS1apID"];
  if (this->_internal_has_enb_ue_s1ap_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *enb_ue_s1ap_id_);
  }

  // .onos.uenib.AmfUeNgapID amf_ue_ngap_id = 5 [(.gogoproto.customname) = "AMFUeNgapID"];
  if (this->_internal_has_amf_ue_ngap_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amf_ue_ngap_id_);
  }

  // .onos.uenib.UeIdType preferred_id_type = 6 [(.gogoproto.customname) = "PreferredIDType"];
  if (this->_internal_preferred_id_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_preferred_id_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UeIdentity::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UeIdentity::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UeIdentity::GetClassData() const { return &_class_data_; }

void UeIdentity::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UeIdentity *>(to)->MergeFrom(
      static_cast<const UeIdentity &>(from));
}


void UeIdentity::MergeFrom(const UeIdentity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.UeIdentity)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_du_ue_f1ap_id()) {
    _internal_mutable_du_ue_f1ap_id()->::onos::uenib::DuUeF1apID::MergeFrom(from._internal_du_ue_f1ap_id());
  }
  if (from._internal_has_cu_ue_f1ap_id()) {
    _internal_mutable_cu_ue_f1ap_id()->::onos::uenib::CuUeF1apID::MergeFrom(from._internal_cu_ue_f1ap_id());
  }
  if (from._internal_has_ran_ue_ngap_id()) {
    _internal_mutable_ran_ue_ngap_id()->::onos::uenib::RanUeNgapID::MergeFrom(from._internal_ran_ue_ngap_id());
  }
  if (from._internal_has_enb_ue_s1ap_id()) {
    _internal_mutable_enb_ue_s1ap_id()->::onos::uenib::EnbUeS1apID::MergeFrom(from._internal_enb_ue_s1ap_id());
  }
  if (from._internal_has_amf_ue_ngap_id()) {
    _internal_mutable_amf_ue_ngap_id()->::onos::uenib::AmfUeNgapID::MergeFrom(from._internal_amf_ue_ngap_id());
  }
  if (from._internal_preferred_id_type() != 0) {
    _internal_set_preferred_id_type(from._internal_preferred_id_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UeIdentity::CopyFrom(const UeIdentity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.UeIdentity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UeIdentity::IsInitialized() const {
  return true;
}

void UeIdentity::InternalSwap(UeIdentity* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UeIdentity, preferred_id_type_)
      + sizeof(UeIdentity::preferred_id_type_)
      - PROTOBUF_FIELD_OFFSET(UeIdentity, du_ue_f1ap_id_)>(
          reinterpret_cast<char*>(&du_ue_f1ap_id_),
          reinterpret_cast<char*>(&other->du_ue_f1ap_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UeIdentity::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[7]);
}

// ===================================================================

class BearerId::_Internal {
 public:
  static const ::onos::uenib::DrbId& drb_id(const BearerId* msg);
};

const ::onos::uenib::DrbId&
BearerId::_Internal::drb_id(const BearerId* msg) {
  return *msg->bearer_id_.drb_id_;
}
void BearerId::set_allocated_drb_id(::onos::uenib::DrbId* drb_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_bearer_id();
  if (drb_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::DrbId>::GetOwningArena(drb_id);
    if (message_arena != submessage_arena) {
      drb_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drb_id, submessage_arena);
    }
    set_has_drb_id();
    bearer_id_.drb_id_ = drb_id;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.BearerId.drb_id)
}
BearerId::BearerId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.BearerId)
}
BearerId::BearerId(const BearerId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_bearer_id();
  switch (from.bearer_id_case()) {
    case kDrbId: {
      _internal_mutable_drb_id()->::onos::uenib::DrbId::MergeFrom(from._internal_drb_id());
      break;
    }
    case BEARER_ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:onos.uenib.BearerId)
}

inline void BearerId::SharedCtor() {
clear_has_bearer_id();
}

BearerId::~BearerId() {
  // @@protoc_insertion_point(destructor:onos.uenib.BearerId)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BearerId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_bearer_id()) {
    clear_bearer_id();
  }
}

void BearerId::ArenaDtor(void* object) {
  BearerId* _this = reinterpret_cast< BearerId* >(object);
  (void)_this;
}
void BearerId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BearerId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BearerId::clear_bearer_id() {
// @@protoc_insertion_point(one_of_clear_start:onos.uenib.BearerId)
  switch (bearer_id_case()) {
    case kDrbId: {
      if (GetArenaForAllocation() == nullptr) {
        delete bearer_id_.drb_id_;
      }
      break;
    }
    case BEARER_ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BEARER_ID_NOT_SET;
}


void BearerId::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.BearerId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_bearer_id();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BearerId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.uenib.DrbId drb_id = 1 [json_name = "drbID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_drb_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BearerId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.BearerId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.uenib.DrbId drb_id = 1 [json_name = "drbID"];
  if (_internal_has_drb_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::drb_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.BearerId)
  return target;
}

size_t BearerId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.BearerId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (bearer_id_case()) {
    // .onos.uenib.DrbId drb_id = 1 [json_name = "drbID"];
    case kDrbId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bearer_id_.drb_id_);
      break;
    }
    case BEARER_ID_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BearerId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BearerId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BearerId::GetClassData() const { return &_class_data_; }

void BearerId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BearerId *>(to)->MergeFrom(
      static_cast<const BearerId &>(from));
}


void BearerId::MergeFrom(const BearerId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.BearerId)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.bearer_id_case()) {
    case kDrbId: {
      _internal_mutable_drb_id()->::onos::uenib::DrbId::MergeFrom(from._internal_drb_id());
      break;
    }
    case BEARER_ID_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BearerId::CopyFrom(const BearerId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.BearerId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BearerId::IsInitialized() const {
  return true;
}

void BearerId::InternalSwap(BearerId* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(bearer_id_, other->bearer_id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata BearerId::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[8]);
}

// ===================================================================

class DrbId::_Internal {
 public:
  static const ::onos::uenib::FourGDrbId& four_gdrb_id(const DrbId* msg);
  static const ::onos::uenib::FiveGDrbId& five_gdrb_id(const DrbId* msg);
};

const ::onos::uenib::FourGDrbId&
DrbId::_Internal::four_gdrb_id(const DrbId* msg) {
  return *msg->drb_id_.four_gdrb_id_;
}
const ::onos::uenib::FiveGDrbId&
DrbId::_Internal::five_gdrb_id(const DrbId* msg) {
  return *msg->drb_id_.five_gdrb_id_;
}
void DrbId::set_allocated_four_gdrb_id(::onos::uenib::FourGDrbId* four_gdrb_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_drb_id();
  if (four_gdrb_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::FourGDrbId>::GetOwningArena(four_gdrb_id);
    if (message_arena != submessage_arena) {
      four_gdrb_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, four_gdrb_id, submessage_arena);
    }
    set_has_four_gdrb_id();
    drb_id_.four_gdrb_id_ = four_gdrb_id;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.DrbId.four_gdrb_id)
}
void DrbId::set_allocated_five_gdrb_id(::onos::uenib::FiveGDrbId* five_gdrb_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_drb_id();
  if (five_gdrb_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::FiveGDrbId>::GetOwningArena(five_gdrb_id);
    if (message_arena != submessage_arena) {
      five_gdrb_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, five_gdrb_id, submessage_arena);
    }
    set_has_five_gdrb_id();
    drb_id_.five_gdrb_id_ = five_gdrb_id;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.DrbId.five_gdrb_id)
}
DrbId::DrbId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.DrbId)
}
DrbId::DrbId(const DrbId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_drb_id();
  switch (from.drb_id_case()) {
    case kFourGdrbId: {
      _internal_mutable_four_gdrb_id()->::onos::uenib::FourGDrbId::MergeFrom(from._internal_four_gdrb_id());
      break;
    }
    case kFiveGdrbId: {
      _internal_mutable_five_gdrb_id()->::onos::uenib::FiveGDrbId::MergeFrom(from._internal_five_gdrb_id());
      break;
    }
    case DRB_ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:onos.uenib.DrbId)
}

inline void DrbId::SharedCtor() {
clear_has_drb_id();
}

DrbId::~DrbId() {
  // @@protoc_insertion_point(destructor:onos.uenib.DrbId)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DrbId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_drb_id()) {
    clear_drb_id();
  }
}

void DrbId::ArenaDtor(void* object) {
  DrbId* _this = reinterpret_cast< DrbId* >(object);
  (void)_this;
}
void DrbId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DrbId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DrbId::clear_drb_id() {
// @@protoc_insertion_point(one_of_clear_start:onos.uenib.DrbId)
  switch (drb_id_case()) {
    case kFourGdrbId: {
      if (GetArenaForAllocation() == nullptr) {
        delete drb_id_.four_gdrb_id_;
      }
      break;
    }
    case kFiveGdrbId: {
      if (GetArenaForAllocation() == nullptr) {
        delete drb_id_.five_gdrb_id_;
      }
      break;
    }
    case DRB_ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DRB_ID_NOT_SET;
}


void DrbId::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.DrbId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_drb_id();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DrbId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.uenib.FourGDrbId four_gdrb_id = 1 [json_name = "fourGDrbID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_four_gdrb_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.FiveGDrbId five_gdrb_id = 2 [json_name = "fiveGDrbID"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_five_gdrb_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DrbId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.DrbId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.uenib.FourGDrbId four_gdrb_id = 1 [json_name = "fourGDrbID"];
  if (_internal_has_four_gdrb_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::four_gdrb_id(this), target, stream);
  }

  // .onos.uenib.FiveGDrbId five_gdrb_id = 2 [json_name = "fiveGDrbID"];
  if (_internal_has_five_gdrb_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::five_gdrb_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.DrbId)
  return target;
}

size_t DrbId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.DrbId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (drb_id_case()) {
    // .onos.uenib.FourGDrbId four_gdrb_id = 1 [json_name = "fourGDrbID"];
    case kFourGdrbId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *drb_id_.four_gdrb_id_);
      break;
    }
    // .onos.uenib.FiveGDrbId five_gdrb_id = 2 [json_name = "fiveGDrbID"];
    case kFiveGdrbId: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *drb_id_.five_gdrb_id_);
      break;
    }
    case DRB_ID_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DrbId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DrbId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DrbId::GetClassData() const { return &_class_data_; }

void DrbId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DrbId *>(to)->MergeFrom(
      static_cast<const DrbId &>(from));
}


void DrbId::MergeFrom(const DrbId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.DrbId)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.drb_id_case()) {
    case kFourGdrbId: {
      _internal_mutable_four_gdrb_id()->::onos::uenib::FourGDrbId::MergeFrom(from._internal_four_gdrb_id());
      break;
    }
    case kFiveGdrbId: {
      _internal_mutable_five_gdrb_id()->::onos::uenib::FiveGDrbId::MergeFrom(from._internal_five_gdrb_id());
      break;
    }
    case DRB_ID_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DrbId::CopyFrom(const DrbId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.DrbId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DrbId::IsInitialized() const {
  return true;
}

void DrbId::InternalSwap(DrbId* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(drb_id_, other->drb_id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata DrbId::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[9]);
}

// ===================================================================

class FiveGDrbId::_Internal {
 public:
  static const ::onos::uenib::Qfi& qfi(const FiveGDrbId* msg);
};

const ::onos::uenib::Qfi&
FiveGDrbId::_Internal::qfi(const FiveGDrbId* msg) {
  return *msg->qfi_;
}
FiveGDrbId::FiveGDrbId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  flows_map_to_drb_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.FiveGDrbId)
}
FiveGDrbId::FiveGDrbId(const FiveGDrbId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      flows_map_to_drb_(from.flows_map_to_drb_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_qfi()) {
    qfi_ = new ::onos::uenib::Qfi(*from.qfi_);
  } else {
    qfi_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.FiveGDrbId)
}

inline void FiveGDrbId::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&qfi_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&qfi_)) + sizeof(value_));
}

FiveGDrbId::~FiveGDrbId() {
  // @@protoc_insertion_point(destructor:onos.uenib.FiveGDrbId)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FiveGDrbId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete qfi_;
}

void FiveGDrbId::ArenaDtor(void* object) {
  FiveGDrbId* _this = reinterpret_cast< FiveGDrbId* >(object);
  (void)_this;
}
void FiveGDrbId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FiveGDrbId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FiveGDrbId::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.FiveGDrbId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flows_map_to_drb_.Clear();
  if (GetArenaForAllocation() == nullptr && qfi_ != nullptr) {
    delete qfi_;
  }
  qfi_ = nullptr;
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FiveGDrbId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.Qfi qfi = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_qfi(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .onos.uenib.QoSflowLevelParameters flows_map_to_drb = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_flows_map_to_drb(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FiveGDrbId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.FiveGDrbId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  // .onos.uenib.Qfi qfi = 2;
  if (this->_internal_has_qfi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::qfi(this), target, stream);
  }

  // repeated .onos.uenib.QoSflowLevelParameters flows_map_to_drb = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_flows_map_to_drb_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_flows_map_to_drb(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.FiveGDrbId)
  return target;
}

size_t FiveGDrbId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.FiveGDrbId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.uenib.QoSflowLevelParameters flows_map_to_drb = 3;
  total_size += 1UL * this->_internal_flows_map_to_drb_size();
  for (const auto& msg : this->flows_map_to_drb_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .onos.uenib.Qfi qfi = 2;
  if (this->_internal_has_qfi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *qfi_);
  }

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FiveGDrbId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FiveGDrbId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FiveGDrbId::GetClassData() const { return &_class_data_; }

void FiveGDrbId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FiveGDrbId *>(to)->MergeFrom(
      static_cast<const FiveGDrbId &>(from));
}


void FiveGDrbId::MergeFrom(const FiveGDrbId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.FiveGDrbId)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  flows_map_to_drb_.MergeFrom(from.flows_map_to_drb_);
  if (from._internal_has_qfi()) {
    _internal_mutable_qfi()->::onos::uenib::Qfi::MergeFrom(from._internal_qfi());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FiveGDrbId::CopyFrom(const FiveGDrbId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.FiveGDrbId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FiveGDrbId::IsInitialized() const {
  return true;
}

void FiveGDrbId::InternalSwap(FiveGDrbId* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  flows_map_to_drb_.InternalSwap(&other->flows_map_to_drb_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FiveGDrbId, value_)
      + sizeof(FiveGDrbId::value_)
      - PROTOBUF_FIELD_OFFSET(FiveGDrbId, qfi_)>(
          reinterpret_cast<char*>(&qfi_),
          reinterpret_cast<char*>(&other->qfi_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FiveGDrbId::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[10]);
}

// ===================================================================

class Qfi::_Internal {
 public:
};

Qfi::Qfi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.Qfi)
}
Qfi::Qfi(const Qfi& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.Qfi)
}

inline void Qfi::SharedCtor() {
value_ = 0;
}

Qfi::~Qfi() {
  // @@protoc_insertion_point(destructor:onos.uenib.Qfi)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Qfi::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Qfi::ArenaDtor(void* object) {
  Qfi* _this = reinterpret_cast< Qfi* >(object);
  (void)_this;
}
void Qfi::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Qfi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Qfi::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.Qfi)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Qfi::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Qfi::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.Qfi)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.Qfi)
  return target;
}

size_t Qfi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.Qfi)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Qfi::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Qfi::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Qfi::GetClassData() const { return &_class_data_; }

void Qfi::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Qfi *>(to)->MergeFrom(
      static_cast<const Qfi &>(from));
}


void Qfi::MergeFrom(const Qfi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.Qfi)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Qfi::CopyFrom(const Qfi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.Qfi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Qfi::IsInitialized() const {
  return true;
}

void Qfi::InternalSwap(Qfi* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Qfi::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[11]);
}

// ===================================================================

class QoSflowLevelParameters::_Internal {
 public:
  static const ::onos::uenib::DynamicFiveQi& dynamic_five_qi(const QoSflowLevelParameters* msg);
  static const ::onos::uenib::NonDynamicFiveQi& non_dynamic_five_qi(const QoSflowLevelParameters* msg);
};

const ::onos::uenib::DynamicFiveQi&
QoSflowLevelParameters::_Internal::dynamic_five_qi(const QoSflowLevelParameters* msg) {
  return *msg->qos_flow_level_parameters_.dynamic_five_qi_;
}
const ::onos::uenib::NonDynamicFiveQi&
QoSflowLevelParameters::_Internal::non_dynamic_five_qi(const QoSflowLevelParameters* msg) {
  return *msg->qos_flow_level_parameters_.non_dynamic_five_qi_;
}
void QoSflowLevelParameters::set_allocated_dynamic_five_qi(::onos::uenib::DynamicFiveQi* dynamic_five_qi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_qos_flow_level_parameters();
  if (dynamic_five_qi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::DynamicFiveQi>::GetOwningArena(dynamic_five_qi);
    if (message_arena != submessage_arena) {
      dynamic_five_qi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dynamic_five_qi, submessage_arena);
    }
    set_has_dynamic_five_qi();
    qos_flow_level_parameters_.dynamic_five_qi_ = dynamic_five_qi;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.QoSflowLevelParameters.dynamic_five_qi)
}
void QoSflowLevelParameters::set_allocated_non_dynamic_five_qi(::onos::uenib::NonDynamicFiveQi* non_dynamic_five_qi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_qos_flow_level_parameters();
  if (non_dynamic_five_qi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::NonDynamicFiveQi>::GetOwningArena(non_dynamic_five_qi);
    if (message_arena != submessage_arena) {
      non_dynamic_five_qi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, non_dynamic_five_qi, submessage_arena);
    }
    set_has_non_dynamic_five_qi();
    qos_flow_level_parameters_.non_dynamic_five_qi_ = non_dynamic_five_qi;
  }
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.QoSflowLevelParameters.non_dynamic_five_qi)
}
QoSflowLevelParameters::QoSflowLevelParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.QoSflowLevelParameters)
}
QoSflowLevelParameters::QoSflowLevelParameters(const QoSflowLevelParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_qos_flow_level_parameters();
  switch (from.qos_flow_level_parameters_case()) {
    case kDynamicFiveQi: {
      _internal_mutable_dynamic_five_qi()->::onos::uenib::DynamicFiveQi::MergeFrom(from._internal_dynamic_five_qi());
      break;
    }
    case kNonDynamicFiveQi: {
      _internal_mutable_non_dynamic_five_qi()->::onos::uenib::NonDynamicFiveQi::MergeFrom(from._internal_non_dynamic_five_qi());
      break;
    }
    case QOS_FLOW_LEVEL_PARAMETERS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:onos.uenib.QoSflowLevelParameters)
}

inline void QoSflowLevelParameters::SharedCtor() {
clear_has_qos_flow_level_parameters();
}

QoSflowLevelParameters::~QoSflowLevelParameters() {
  // @@protoc_insertion_point(destructor:onos.uenib.QoSflowLevelParameters)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void QoSflowLevelParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_qos_flow_level_parameters()) {
    clear_qos_flow_level_parameters();
  }
}

void QoSflowLevelParameters::ArenaDtor(void* object) {
  QoSflowLevelParameters* _this = reinterpret_cast< QoSflowLevelParameters* >(object);
  (void)_this;
}
void QoSflowLevelParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QoSflowLevelParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void QoSflowLevelParameters::clear_qos_flow_level_parameters() {
// @@protoc_insertion_point(one_of_clear_start:onos.uenib.QoSflowLevelParameters)
  switch (qos_flow_level_parameters_case()) {
    case kDynamicFiveQi: {
      if (GetArenaForAllocation() == nullptr) {
        delete qos_flow_level_parameters_.dynamic_five_qi_;
      }
      break;
    }
    case kNonDynamicFiveQi: {
      if (GetArenaForAllocation() == nullptr) {
        delete qos_flow_level_parameters_.non_dynamic_five_qi_;
      }
      break;
    }
    case QOS_FLOW_LEVEL_PARAMETERS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = QOS_FLOW_LEVEL_PARAMETERS_NOT_SET;
}


void QoSflowLevelParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.QoSflowLevelParameters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_qos_flow_level_parameters();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QoSflowLevelParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.uenib.DynamicFiveQi dynamic_five_qi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dynamic_five_qi(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.NonDynamicFiveQi non_dynamic_five_qi = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_non_dynamic_five_qi(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* QoSflowLevelParameters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.QoSflowLevelParameters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.uenib.DynamicFiveQi dynamic_five_qi = 1;
  if (_internal_has_dynamic_five_qi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dynamic_five_qi(this), target, stream);
  }

  // .onos.uenib.NonDynamicFiveQi non_dynamic_five_qi = 2;
  if (_internal_has_non_dynamic_five_qi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::non_dynamic_five_qi(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.QoSflowLevelParameters)
  return target;
}

size_t QoSflowLevelParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.QoSflowLevelParameters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (qos_flow_level_parameters_case()) {
    // .onos.uenib.DynamicFiveQi dynamic_five_qi = 1;
    case kDynamicFiveQi: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *qos_flow_level_parameters_.dynamic_five_qi_);
      break;
    }
    // .onos.uenib.NonDynamicFiveQi non_dynamic_five_qi = 2;
    case kNonDynamicFiveQi: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *qos_flow_level_parameters_.non_dynamic_five_qi_);
      break;
    }
    case QOS_FLOW_LEVEL_PARAMETERS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QoSflowLevelParameters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    QoSflowLevelParameters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QoSflowLevelParameters::GetClassData() const { return &_class_data_; }

void QoSflowLevelParameters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<QoSflowLevelParameters *>(to)->MergeFrom(
      static_cast<const QoSflowLevelParameters &>(from));
}


void QoSflowLevelParameters::MergeFrom(const QoSflowLevelParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.QoSflowLevelParameters)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.qos_flow_level_parameters_case()) {
    case kDynamicFiveQi: {
      _internal_mutable_dynamic_five_qi()->::onos::uenib::DynamicFiveQi::MergeFrom(from._internal_dynamic_five_qi());
      break;
    }
    case kNonDynamicFiveQi: {
      _internal_mutable_non_dynamic_five_qi()->::onos::uenib::NonDynamicFiveQi::MergeFrom(from._internal_non_dynamic_five_qi());
      break;
    }
    case QOS_FLOW_LEVEL_PARAMETERS_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QoSflowLevelParameters::CopyFrom(const QoSflowLevelParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.QoSflowLevelParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QoSflowLevelParameters::IsInitialized() const {
  return true;
}

void QoSflowLevelParameters::InternalSwap(QoSflowLevelParameters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(qos_flow_level_parameters_, other->qos_flow_level_parameters_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata QoSflowLevelParameters::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[12]);
}

// ===================================================================

class DynamicFiveQi::_Internal {
 public:
};

DynamicFiveQi::DynamicFiveQi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.DynamicFiveQi)
}
DynamicFiveQi::DynamicFiveQi(const DynamicFiveQi& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&priority_level_, &from.priority_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&packet_error_rate_) -
    reinterpret_cast<char*>(&priority_level_)) + sizeof(packet_error_rate_));
  // @@protoc_insertion_point(copy_constructor:onos.uenib.DynamicFiveQi)
}

inline void DynamicFiveQi::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&priority_level_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&packet_error_rate_) -
    reinterpret_cast<char*>(&priority_level_)) + sizeof(packet_error_rate_));
}

DynamicFiveQi::~DynamicFiveQi() {
  // @@protoc_insertion_point(destructor:onos.uenib.DynamicFiveQi)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void DynamicFiveQi::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DynamicFiveQi::ArenaDtor(void* object) {
  DynamicFiveQi* _this = reinterpret_cast< DynamicFiveQi* >(object);
  (void)_this;
}
void DynamicFiveQi::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DynamicFiveQi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DynamicFiveQi::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.DynamicFiveQi)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&priority_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packet_error_rate_) -
      reinterpret_cast<char*>(&priority_level_)) + sizeof(packet_error_rate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DynamicFiveQi::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 priority_level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          priority_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 packet_delay_budge = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          packet_delay_budge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 packet_error_rate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          packet_error_rate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DynamicFiveQi::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.DynamicFiveQi)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 priority_level = 1;
  if (this->_internal_priority_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_priority_level(), target);
  }

  // int32 packet_delay_budge = 2;
  if (this->_internal_packet_delay_budge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_packet_delay_budge(), target);
  }

  // int32 packet_error_rate = 3;
  if (this->_internal_packet_error_rate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_packet_error_rate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.DynamicFiveQi)
  return target;
}

size_t DynamicFiveQi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.DynamicFiveQi)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 priority_level = 1;
  if (this->_internal_priority_level() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_priority_level());
  }

  // int32 packet_delay_budge = 2;
  if (this->_internal_packet_delay_budge() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_packet_delay_budge());
  }

  // int32 packet_error_rate = 3;
  if (this->_internal_packet_error_rate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_packet_error_rate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DynamicFiveQi::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DynamicFiveQi::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DynamicFiveQi::GetClassData() const { return &_class_data_; }

void DynamicFiveQi::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DynamicFiveQi *>(to)->MergeFrom(
      static_cast<const DynamicFiveQi &>(from));
}


void DynamicFiveQi::MergeFrom(const DynamicFiveQi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.DynamicFiveQi)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_priority_level() != 0) {
    _internal_set_priority_level(from._internal_priority_level());
  }
  if (from._internal_packet_delay_budge() != 0) {
    _internal_set_packet_delay_budge(from._internal_packet_delay_budge());
  }
  if (from._internal_packet_error_rate() != 0) {
    _internal_set_packet_error_rate(from._internal_packet_error_rate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DynamicFiveQi::CopyFrom(const DynamicFiveQi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.DynamicFiveQi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DynamicFiveQi::IsInitialized() const {
  return true;
}

void DynamicFiveQi::InternalSwap(DynamicFiveQi* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DynamicFiveQi, packet_error_rate_)
      + sizeof(DynamicFiveQi::packet_error_rate_)
      - PROTOBUF_FIELD_OFFSET(DynamicFiveQi, priority_level_)>(
          reinterpret_cast<char*>(&priority_level_),
          reinterpret_cast<char*>(&other->priority_level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DynamicFiveQi::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[13]);
}

// ===================================================================

class NonDynamicFiveQi::_Internal {
 public:
  static const ::onos::uenib::FiveQi& five_qi(const NonDynamicFiveQi* msg);
};

const ::onos::uenib::FiveQi&
NonDynamicFiveQi::_Internal::five_qi(const NonDynamicFiveQi* msg) {
  return *msg->five_qi_;
}
NonDynamicFiveQi::NonDynamicFiveQi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.NonDynamicFiveQi)
}
NonDynamicFiveQi::NonDynamicFiveQi(const NonDynamicFiveQi& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_five_qi()) {
    five_qi_ = new ::onos::uenib::FiveQi(*from.five_qi_);
  } else {
    five_qi_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.uenib.NonDynamicFiveQi)
}

inline void NonDynamicFiveQi::SharedCtor() {
five_qi_ = nullptr;
}

NonDynamicFiveQi::~NonDynamicFiveQi() {
  // @@protoc_insertion_point(destructor:onos.uenib.NonDynamicFiveQi)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void NonDynamicFiveQi::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete five_qi_;
}

void NonDynamicFiveQi::ArenaDtor(void* object) {
  NonDynamicFiveQi* _this = reinterpret_cast< NonDynamicFiveQi* >(object);
  (void)_this;
}
void NonDynamicFiveQi::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NonDynamicFiveQi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NonDynamicFiveQi::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.NonDynamicFiveQi)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && five_qi_ != nullptr) {
    delete five_qi_;
  }
  five_qi_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NonDynamicFiveQi::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.uenib.FiveQi five_qi = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_five_qi(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NonDynamicFiveQi::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.NonDynamicFiveQi)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.uenib.FiveQi five_qi = 1;
  if (this->_internal_has_five_qi()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::five_qi(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.NonDynamicFiveQi)
  return target;
}

size_t NonDynamicFiveQi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.NonDynamicFiveQi)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.uenib.FiveQi five_qi = 1;
  if (this->_internal_has_five_qi()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *five_qi_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NonDynamicFiveQi::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NonDynamicFiveQi::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NonDynamicFiveQi::GetClassData() const { return &_class_data_; }

void NonDynamicFiveQi::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NonDynamicFiveQi *>(to)->MergeFrom(
      static_cast<const NonDynamicFiveQi &>(from));
}


void NonDynamicFiveQi::MergeFrom(const NonDynamicFiveQi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.NonDynamicFiveQi)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_five_qi()) {
    _internal_mutable_five_qi()->::onos::uenib::FiveQi::MergeFrom(from._internal_five_qi());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NonDynamicFiveQi::CopyFrom(const NonDynamicFiveQi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.NonDynamicFiveQi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NonDynamicFiveQi::IsInitialized() const {
  return true;
}

void NonDynamicFiveQi::InternalSwap(NonDynamicFiveQi* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(five_qi_, other->five_qi_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NonDynamicFiveQi::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[14]);
}

// ===================================================================

class FiveQi::_Internal {
 public:
};

FiveQi::FiveQi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.FiveQi)
}
FiveQi::FiveQi(const FiveQi& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.FiveQi)
}

inline void FiveQi::SharedCtor() {
value_ = 0;
}

FiveQi::~FiveQi() {
  // @@protoc_insertion_point(destructor:onos.uenib.FiveQi)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FiveQi::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FiveQi::ArenaDtor(void* object) {
  FiveQi* _this = reinterpret_cast< FiveQi* >(object);
  (void)_this;
}
void FiveQi::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FiveQi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FiveQi::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.FiveQi)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FiveQi::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FiveQi::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.FiveQi)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.FiveQi)
  return target;
}

size_t FiveQi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.FiveQi)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FiveQi::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FiveQi::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FiveQi::GetClassData() const { return &_class_data_; }

void FiveQi::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FiveQi *>(to)->MergeFrom(
      static_cast<const FiveQi &>(from));
}


void FiveQi::MergeFrom(const FiveQi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.FiveQi)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FiveQi::CopyFrom(const FiveQi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.FiveQi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FiveQi::IsInitialized() const {
  return true;
}

void FiveQi::InternalSwap(FiveQi* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FiveQi::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[15]);
}

// ===================================================================

class FourGDrbId::_Internal {
 public:
  static const ::onos::uenib::Qci& qci(const FourGDrbId* msg);
};

const ::onos::uenib::Qci&
FourGDrbId::_Internal::qci(const FourGDrbId* msg) {
  return *msg->qci_;
}
FourGDrbId::FourGDrbId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.FourGDrbId)
}
FourGDrbId::FourGDrbId(const FourGDrbId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_qci()) {
    qci_ = new ::onos::uenib::Qci(*from.qci_);
  } else {
    qci_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.FourGDrbId)
}

inline void FourGDrbId::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&qci_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&qci_)) + sizeof(value_));
}

FourGDrbId::~FourGDrbId() {
  // @@protoc_insertion_point(destructor:onos.uenib.FourGDrbId)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FourGDrbId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete qci_;
}

void FourGDrbId::ArenaDtor(void* object) {
  FourGDrbId* _this = reinterpret_cast< FourGDrbId* >(object);
  (void)_this;
}
void FourGDrbId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FourGDrbId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FourGDrbId::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.FourGDrbId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && qci_ != nullptr) {
    delete qci_;
  }
  qci_ = nullptr;
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FourGDrbId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.Qci qci = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_qci(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FourGDrbId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.FourGDrbId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  // .onos.uenib.Qci qci = 2;
  if (this->_internal_has_qci()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::qci(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.FourGDrbId)
  return target;
}

size_t FourGDrbId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.FourGDrbId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.uenib.Qci qci = 2;
  if (this->_internal_has_qci()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *qci_);
  }

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FourGDrbId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FourGDrbId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FourGDrbId::GetClassData() const { return &_class_data_; }

void FourGDrbId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FourGDrbId *>(to)->MergeFrom(
      static_cast<const FourGDrbId &>(from));
}


void FourGDrbId::MergeFrom(const FourGDrbId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.FourGDrbId)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_qci()) {
    _internal_mutable_qci()->::onos::uenib::Qci::MergeFrom(from._internal_qci());
  }
  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FourGDrbId::CopyFrom(const FourGDrbId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.FourGDrbId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FourGDrbId::IsInitialized() const {
  return true;
}

void FourGDrbId::InternalSwap(FourGDrbId* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FourGDrbId, value_)
      + sizeof(FourGDrbId::value_)
      - PROTOBUF_FIELD_OFFSET(FourGDrbId, qci_)>(
          reinterpret_cast<char*>(&qci_),
          reinterpret_cast<char*>(&other->qci_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FourGDrbId::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[16]);
}

// ===================================================================

class Qci::_Internal {
 public:
};

Qci::Qci(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.Qci)
}
Qci::Qci(const Qci& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.Qci)
}

inline void Qci::SharedCtor() {
value_ = 0;
}

Qci::~Qci() {
  // @@protoc_insertion_point(destructor:onos.uenib.Qci)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Qci::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Qci::ArenaDtor(void* object) {
  Qci* _this = reinterpret_cast< Qci* >(object);
  (void)_this;
}
void Qci::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Qci::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Qci::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.Qci)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Qci::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Qci::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.Qci)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.Qci)
  return target;
}

size_t Qci::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.Qci)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 value = 1;
  if (this->_internal_value() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Qci::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Qci::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Qci::GetClassData() const { return &_class_data_; }

void Qci::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Qci *>(to)->MergeFrom(
      static_cast<const Qci &>(from));
}


void Qci::MergeFrom(const Qci& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.Qci)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Qci::CopyFrom(const Qci& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.Qci)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Qci::IsInitialized() const {
  return true;
}

void Qci::InternalSwap(Qci* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Qci::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[17]);
}

// ===================================================================

class RsmUeInfo::_Internal {
 public:
  static const ::onos::uenib::UeIdentity& ue_id_list(const RsmUeInfo* msg);
};

const ::onos::uenib::UeIdentity&
RsmUeInfo::_Internal::ue_id_list(const RsmUeInfo* msg) {
  return *msg->ue_id_list_;
}
RsmUeInfo::RsmUeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bearer_id_list_(arena),
  slice_list_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.RsmUeInfo)
}
RsmUeInfo::RsmUeInfo(const RsmUeInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bearer_id_list_(from.bearer_id_list_),
      slice_list_(from.slice_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  global_ue_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    global_ue_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_global_ue_id().empty()) {
    global_ue_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_global_ue_id(), 
      GetArenaForAllocation());
  }
  cell_global_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cell_global_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cell_global_id().empty()) {
    cell_global_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cell_global_id(), 
      GetArenaForAllocation());
  }
  cu_e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cu_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cu_e2_node_id().empty()) {
    cu_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cu_e2_node_id(), 
      GetArenaForAllocation());
  }
  du_e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    du_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_du_e2_node_id().empty()) {
    du_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_du_e2_node_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_ue_id_list()) {
    ue_id_list_ = new ::onos::uenib::UeIdentity(*from.ue_id_list_);
  } else {
    ue_id_list_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:onos.uenib.RsmUeInfo)
}

inline void RsmUeInfo::SharedCtor() {
global_ue_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  global_ue_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
cell_global_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cell_global_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
cu_e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cu_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
du_e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  du_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
ue_id_list_ = nullptr;
}

RsmUeInfo::~RsmUeInfo() {
  // @@protoc_insertion_point(destructor:onos.uenib.RsmUeInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RsmUeInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  global_ue_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cell_global_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cu_e2_node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  du_e2_node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ue_id_list_;
}

void RsmUeInfo::ArenaDtor(void* object) {
  RsmUeInfo* _this = reinterpret_cast< RsmUeInfo* >(object);
  (void)_this;
}
void RsmUeInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RsmUeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RsmUeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.RsmUeInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bearer_id_list_.Clear();
  slice_list_.Clear();
  global_ue_id_.ClearToEmpty();
  cell_global_id_.ClearToEmpty();
  cu_e2_node_id_.ClearToEmpty();
  du_e2_node_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && ue_id_list_ != nullptr) {
    delete ue_id_list_;
  }
  ue_id_list_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RsmUeInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string global_ue_id = 1 [(.gogoproto.customname) = "GlobalUeID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_global_ue_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.RsmUeInfo.global_ue_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.UeIdentity ue_id_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ue_id_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .onos.uenib.BearerId bearer_id_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bearer_id_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string cell_global_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_cell_global_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.RsmUeInfo.cell_global_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cu_e2_node_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_cu_e2_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.RsmUeInfo.cu_e2_node_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string du_e2_node_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_du_e2_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.RsmUeInfo.du_e2_node_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .onos.uenib.SliceInfo slice_list = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_slice_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RsmUeInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.RsmUeInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string global_ue_id = 1 [(.gogoproto.customname) = "GlobalUeID"];
  if (!this->_internal_global_ue_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_global_ue_id().data(), static_cast<int>(this->_internal_global_ue_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.RsmUeInfo.global_ue_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_global_ue_id(), target);
  }

  // .onos.uenib.UeIdentity ue_id_list = 2;
  if (this->_internal_has_ue_id_list()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::ue_id_list(this), target, stream);
  }

  // repeated .onos.uenib.BearerId bearer_id_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bearer_id_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_bearer_id_list(i), target, stream);
  }

  // string cell_global_id = 4;
  if (!this->_internal_cell_global_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cell_global_id().data(), static_cast<int>(this->_internal_cell_global_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.RsmUeInfo.cell_global_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_cell_global_id(), target);
  }

  // string cu_e2_node_id = 5;
  if (!this->_internal_cu_e2_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cu_e2_node_id().data(), static_cast<int>(this->_internal_cu_e2_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.RsmUeInfo.cu_e2_node_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_cu_e2_node_id(), target);
  }

  // string du_e2_node_id = 6;
  if (!this->_internal_du_e2_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_du_e2_node_id().data(), static_cast<int>(this->_internal_du_e2_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.RsmUeInfo.du_e2_node_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_du_e2_node_id(), target);
  }

  // repeated .onos.uenib.SliceInfo slice_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_slice_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_slice_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.RsmUeInfo)
  return target;
}

size_t RsmUeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.RsmUeInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .onos.uenib.BearerId bearer_id_list = 3;
  total_size += 1UL * this->_internal_bearer_id_list_size();
  for (const auto& msg : this->bearer_id_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .onos.uenib.SliceInfo slice_list = 7;
  total_size += 1UL * this->_internal_slice_list_size();
  for (const auto& msg : this->slice_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string global_ue_id = 1 [(.gogoproto.customname) = "GlobalUeID"];
  if (!this->_internal_global_ue_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_global_ue_id());
  }

  // string cell_global_id = 4;
  if (!this->_internal_cell_global_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cell_global_id());
  }

  // string cu_e2_node_id = 5;
  if (!this->_internal_cu_e2_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cu_e2_node_id());
  }

  // string du_e2_node_id = 6;
  if (!this->_internal_du_e2_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_du_e2_node_id());
  }

  // .onos.uenib.UeIdentity ue_id_list = 2;
  if (this->_internal_has_ue_id_list()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ue_id_list_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RsmUeInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RsmUeInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RsmUeInfo::GetClassData() const { return &_class_data_; }

void RsmUeInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RsmUeInfo *>(to)->MergeFrom(
      static_cast<const RsmUeInfo &>(from));
}


void RsmUeInfo::MergeFrom(const RsmUeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.RsmUeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bearer_id_list_.MergeFrom(from.bearer_id_list_);
  slice_list_.MergeFrom(from.slice_list_);
  if (!from._internal_global_ue_id().empty()) {
    _internal_set_global_ue_id(from._internal_global_ue_id());
  }
  if (!from._internal_cell_global_id().empty()) {
    _internal_set_cell_global_id(from._internal_cell_global_id());
  }
  if (!from._internal_cu_e2_node_id().empty()) {
    _internal_set_cu_e2_node_id(from._internal_cu_e2_node_id());
  }
  if (!from._internal_du_e2_node_id().empty()) {
    _internal_set_du_e2_node_id(from._internal_du_e2_node_id());
  }
  if (from._internal_has_ue_id_list()) {
    _internal_mutable_ue_id_list()->::onos::uenib::UeIdentity::MergeFrom(from._internal_ue_id_list());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RsmUeInfo::CopyFrom(const RsmUeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.RsmUeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RsmUeInfo::IsInitialized() const {
  return true;
}

void RsmUeInfo::InternalSwap(RsmUeInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bearer_id_list_.InternalSwap(&other->bearer_id_list_);
  slice_list_.InternalSwap(&other->slice_list_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &global_ue_id_, lhs_arena,
      &other->global_ue_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cell_global_id_, lhs_arena,
      &other->cell_global_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cu_e2_node_id_, lhs_arena,
      &other->cu_e2_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &du_e2_node_id_, lhs_arena,
      &other->du_e2_node_id_, rhs_arena
  );
  swap(ue_id_list_, other->ue_id_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RsmUeInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[18]);
}

// ===================================================================

class SliceInfo::_Internal {
 public:
  static const ::onos::uenib::RSMSliceParameters& slice_parameters(const SliceInfo* msg);
  static const ::onos::uenib::DrbId& drb_id(const SliceInfo* msg);
};

const ::onos::uenib::RSMSliceParameters&
SliceInfo::_Internal::slice_parameters(const SliceInfo* msg) {
  return *msg->slice_parameters_;
}
const ::onos::uenib::DrbId&
SliceInfo::_Internal::drb_id(const SliceInfo* msg) {
  return *msg->drb_id_;
}
SliceInfo::SliceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.SliceInfo)
}
SliceInfo::SliceInfo(const SliceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  du_e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    du_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_du_e2_node_id().empty()) {
    du_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_du_e2_node_id(), 
      GetArenaForAllocation());
  }
  cu_e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    cu_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cu_e2_node_id().empty()) {
    cu_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cu_e2_node_id(), 
      GetArenaForAllocation());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  slice_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    slice_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_slice_desc().empty()) {
    slice_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_slice_desc(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_slice_parameters()) {
    slice_parameters_ = new ::onos::uenib::RSMSliceParameters(*from.slice_parameters_);
  } else {
    slice_parameters_ = nullptr;
  }
  if (from._internal_has_drb_id()) {
    drb_id_ = new ::onos::uenib::DrbId(*from.drb_id_);
  } else {
    drb_id_ = nullptr;
  }
  slice_type_ = from.slice_type_;
  // @@protoc_insertion_point(copy_constructor:onos.uenib.SliceInfo)
}

inline void SliceInfo::SharedCtor() {
du_e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  du_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
cu_e2_node_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  cu_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
slice_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  slice_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&slice_parameters_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&slice_type_) -
    reinterpret_cast<char*>(&slice_parameters_)) + sizeof(slice_type_));
}

SliceInfo::~SliceInfo() {
  // @@protoc_insertion_point(destructor:onos.uenib.SliceInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SliceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  du_e2_node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cu_e2_node_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  slice_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete slice_parameters_;
  if (this != internal_default_instance()) delete drb_id_;
}

void SliceInfo::ArenaDtor(void* object) {
  SliceInfo* _this = reinterpret_cast< SliceInfo* >(object);
  (void)_this;
}
void SliceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SliceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SliceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.SliceInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  du_e2_node_id_.ClearToEmpty();
  cu_e2_node_id_.ClearToEmpty();
  id_.ClearToEmpty();
  slice_desc_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && slice_parameters_ != nullptr) {
    delete slice_parameters_;
  }
  slice_parameters_ = nullptr;
  if (GetArenaForAllocation() == nullptr && drb_id_ != nullptr) {
    delete drb_id_;
  }
  drb_id_ = nullptr;
  slice_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SliceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string du_e2_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_du_e2_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.SliceInfo.du_e2_node_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cu_e2_node_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_cu_e2_node_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.SliceInfo.cu_e2_node_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string id = 3 [(.gogoproto.customname) = "ID"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.SliceInfo.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string slice_desc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_slice_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "onos.uenib.SliceInfo.slice_desc"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.RSMSliceParameters slice_parameters = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_slice_parameters(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.RSMSliceType slice_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_slice_type(static_cast<::onos::uenib::RSMSliceType>(val));
        } else
          goto handle_unusual;
        continue;
      // .onos.uenib.DrbId drb_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_drb_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SliceInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.SliceInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string du_e2_node_id = 1;
  if (!this->_internal_du_e2_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_du_e2_node_id().data(), static_cast<int>(this->_internal_du_e2_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.SliceInfo.du_e2_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_du_e2_node_id(), target);
  }

  // string cu_e2_node_id = 2;
  if (!this->_internal_cu_e2_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cu_e2_node_id().data(), static_cast<int>(this->_internal_cu_e2_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.SliceInfo.cu_e2_node_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_cu_e2_node_id(), target);
  }

  // string id = 3 [(.gogoproto.customname) = "ID"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.SliceInfo.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // string slice_desc = 4;
  if (!this->_internal_slice_desc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_slice_desc().data(), static_cast<int>(this->_internal_slice_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "onos.uenib.SliceInfo.slice_desc");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_slice_desc(), target);
  }

  // .onos.uenib.RSMSliceParameters slice_parameters = 5;
  if (this->_internal_has_slice_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::slice_parameters(this), target, stream);
  }

  // .onos.uenib.RSMSliceType slice_type = 6;
  if (this->_internal_slice_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_slice_type(), target);
  }

  // .onos.uenib.DrbId drb_id = 7;
  if (this->_internal_has_drb_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::drb_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.SliceInfo)
  return target;
}

size_t SliceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.SliceInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string du_e2_node_id = 1;
  if (!this->_internal_du_e2_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_du_e2_node_id());
  }

  // string cu_e2_node_id = 2;
  if (!this->_internal_cu_e2_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cu_e2_node_id());
  }

  // string id = 3 [(.gogoproto.customname) = "ID"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string slice_desc = 4;
  if (!this->_internal_slice_desc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_slice_desc());
  }

  // .onos.uenib.RSMSliceParameters slice_parameters = 5;
  if (this->_internal_has_slice_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *slice_parameters_);
  }

  // .onos.uenib.DrbId drb_id = 7;
  if (this->_internal_has_drb_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *drb_id_);
  }

  // .onos.uenib.RSMSliceType slice_type = 6;
  if (this->_internal_slice_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_slice_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SliceInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SliceInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SliceInfo::GetClassData() const { return &_class_data_; }

void SliceInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SliceInfo *>(to)->MergeFrom(
      static_cast<const SliceInfo &>(from));
}


void SliceInfo::MergeFrom(const SliceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.SliceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_du_e2_node_id().empty()) {
    _internal_set_du_e2_node_id(from._internal_du_e2_node_id());
  }
  if (!from._internal_cu_e2_node_id().empty()) {
    _internal_set_cu_e2_node_id(from._internal_cu_e2_node_id());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_slice_desc().empty()) {
    _internal_set_slice_desc(from._internal_slice_desc());
  }
  if (from._internal_has_slice_parameters()) {
    _internal_mutable_slice_parameters()->::onos::uenib::RSMSliceParameters::MergeFrom(from._internal_slice_parameters());
  }
  if (from._internal_has_drb_id()) {
    _internal_mutable_drb_id()->::onos::uenib::DrbId::MergeFrom(from._internal_drb_id());
  }
  if (from._internal_slice_type() != 0) {
    _internal_set_slice_type(from._internal_slice_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SliceInfo::CopyFrom(const SliceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.SliceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SliceInfo::IsInitialized() const {
  return true;
}

void SliceInfo::InternalSwap(SliceInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &du_e2_node_id_, lhs_arena,
      &other->du_e2_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &cu_e2_node_id_, lhs_arena,
      &other->cu_e2_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &slice_desc_, lhs_arena,
      &other->slice_desc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SliceInfo, slice_type_)
      + sizeof(SliceInfo::slice_type_)
      - PROTOBUF_FIELD_OFFSET(SliceInfo, slice_parameters_)>(
          reinterpret_cast<char*>(&slice_parameters_),
          reinterpret_cast<char*>(&other->slice_parameters_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SliceInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[19]);
}

// ===================================================================

class RSMSliceParameters::_Internal {
 public:
};

RSMSliceParameters::RSMSliceParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:onos.uenib.RSMSliceParameters)
}
RSMSliceParameters::RSMSliceParameters(const RSMSliceParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&scheduler_type_, &from.scheduler_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&qos_level_) -
    reinterpret_cast<char*>(&scheduler_type_)) + sizeof(qos_level_));
  // @@protoc_insertion_point(copy_constructor:onos.uenib.RSMSliceParameters)
}

inline void RSMSliceParameters::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&scheduler_type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&qos_level_) -
    reinterpret_cast<char*>(&scheduler_type_)) + sizeof(qos_level_));
}

RSMSliceParameters::~RSMSliceParameters() {
  // @@protoc_insertion_point(destructor:onos.uenib.RSMSliceParameters)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RSMSliceParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RSMSliceParameters::ArenaDtor(void* object) {
  RSMSliceParameters* _this = reinterpret_cast< RSMSliceParameters* >(object);
  (void)_this;
}
void RSMSliceParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RSMSliceParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RSMSliceParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:onos.uenib.RSMSliceParameters)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scheduler_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qos_level_) -
      reinterpret_cast<char*>(&scheduler_type_)) + sizeof(qos_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RSMSliceParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .onos.uenib.RSMSchedulerType scheduler_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_scheduler_type(static_cast<::onos::uenib::RSMSchedulerType>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 weight = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          weight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 qos_level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          qos_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RSMSliceParameters::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:onos.uenib.RSMSliceParameters)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .onos.uenib.RSMSchedulerType scheduler_type = 1;
  if (this->_internal_scheduler_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_scheduler_type(), target);
  }

  // int32 weight = 2;
  if (this->_internal_weight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_weight(), target);
  }

  // int32 qos_level = 3;
  if (this->_internal_qos_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_qos_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onos.uenib.RSMSliceParameters)
  return target;
}

size_t RSMSliceParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onos.uenib.RSMSliceParameters)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .onos.uenib.RSMSchedulerType scheduler_type = 1;
  if (this->_internal_scheduler_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_scheduler_type());
  }

  // int32 weight = 2;
  if (this->_internal_weight() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_weight());
  }

  // int32 qos_level = 3;
  if (this->_internal_qos_level() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_qos_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RSMSliceParameters::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RSMSliceParameters::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RSMSliceParameters::GetClassData() const { return &_class_data_; }

void RSMSliceParameters::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RSMSliceParameters *>(to)->MergeFrom(
      static_cast<const RSMSliceParameters &>(from));
}


void RSMSliceParameters::MergeFrom(const RSMSliceParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onos.uenib.RSMSliceParameters)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scheduler_type() != 0) {
    _internal_set_scheduler_type(from._internal_scheduler_type());
  }
  if (from._internal_weight() != 0) {
    _internal_set_weight(from._internal_weight());
  }
  if (from._internal_qos_level() != 0) {
    _internal_set_qos_level(from._internal_qos_level());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RSMSliceParameters::CopyFrom(const RSMSliceParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onos.uenib.RSMSliceParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RSMSliceParameters::IsInitialized() const {
  return true;
}

void RSMSliceParameters::InternalSwap(RSMSliceParameters* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RSMSliceParameters, qos_level_)
      + sizeof(RSMSliceParameters::qos_level_)
      - PROTOBUF_FIELD_OFFSET(RSMSliceParameters, scheduler_type_)>(
          reinterpret_cast<char*>(&scheduler_type_),
          reinterpret_cast<char*>(&other->scheduler_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RSMSliceParameters::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_onos_2fuenib_2fran_2eproto_getter, &descriptor_table_onos_2fuenib_2fran_2eproto_once,
      file_level_metadata_onos_2fuenib_2fran_2eproto[20]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace uenib
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::onos::uenib::CellConnection* Arena::CreateMaybeMessage< ::onos::uenib::CellConnection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::CellConnection >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::CellInfo* Arena::CreateMaybeMessage< ::onos::uenib::CellInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::CellInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::DuUeF1apID* Arena::CreateMaybeMessage< ::onos::uenib::DuUeF1apID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::DuUeF1apID >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::CuUeF1apID* Arena::CreateMaybeMessage< ::onos::uenib::CuUeF1apID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::CuUeF1apID >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::RanUeNgapID* Arena::CreateMaybeMessage< ::onos::uenib::RanUeNgapID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::RanUeNgapID >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::EnbUeS1apID* Arena::CreateMaybeMessage< ::onos::uenib::EnbUeS1apID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::EnbUeS1apID >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::AmfUeNgapID* Arena::CreateMaybeMessage< ::onos::uenib::AmfUeNgapID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::AmfUeNgapID >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::UeIdentity* Arena::CreateMaybeMessage< ::onos::uenib::UeIdentity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::UeIdentity >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::BearerId* Arena::CreateMaybeMessage< ::onos::uenib::BearerId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::BearerId >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::DrbId* Arena::CreateMaybeMessage< ::onos::uenib::DrbId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::DrbId >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::FiveGDrbId* Arena::CreateMaybeMessage< ::onos::uenib::FiveGDrbId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::FiveGDrbId >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::Qfi* Arena::CreateMaybeMessage< ::onos::uenib::Qfi >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::Qfi >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::QoSflowLevelParameters* Arena::CreateMaybeMessage< ::onos::uenib::QoSflowLevelParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::QoSflowLevelParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::DynamicFiveQi* Arena::CreateMaybeMessage< ::onos::uenib::DynamicFiveQi >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::DynamicFiveQi >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::NonDynamicFiveQi* Arena::CreateMaybeMessage< ::onos::uenib::NonDynamicFiveQi >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::NonDynamicFiveQi >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::FiveQi* Arena::CreateMaybeMessage< ::onos::uenib::FiveQi >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::FiveQi >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::FourGDrbId* Arena::CreateMaybeMessage< ::onos::uenib::FourGDrbId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::FourGDrbId >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::Qci* Arena::CreateMaybeMessage< ::onos::uenib::Qci >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::Qci >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::RsmUeInfo* Arena::CreateMaybeMessage< ::onos::uenib::RsmUeInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::RsmUeInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::SliceInfo* Arena::CreateMaybeMessage< ::onos::uenib::SliceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::SliceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::onos::uenib::RSMSliceParameters* Arena::CreateMaybeMessage< ::onos::uenib::RSMSliceParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::onos::uenib::RSMSliceParameters >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
