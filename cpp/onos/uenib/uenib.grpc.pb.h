// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: onos/uenib/uenib.proto
// Original file comments:
// SPDX-FileCopyrightText: 2021-present Open Networking Foundation <info@opennetworking.org>
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef GRPC_onos_2fuenib_2fuenib_2eproto__INCLUDED
#define GRPC_onos_2fuenib_2fuenib_2eproto__INCLUDED

#include "onos/uenib/uenib.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace onos {
namespace uenib {

// UEService provides an API for managing UEs and various aspects of
// information associated with UEs.
class UEService final {
 public:
  static constexpr char const* service_full_name() {
    return "onos.uenib.UEService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create a new UE entity and its initial set of aspects.
    virtual ::grpc::Status CreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::onos::uenib::CreateUEResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::CreateUEResponse>> AsyncCreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::CreateUEResponse>>(AsyncCreateUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::CreateUEResponse>> PrepareAsyncCreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::CreateUEResponse>>(PrepareAsyncCreateUERaw(context, request, cq));
    }
    // Get a UE entity populated with the requested aspects.
    virtual ::grpc::Status GetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::onos::uenib::GetUEResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::GetUEResponse>> AsyncGetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::GetUEResponse>>(AsyncGetUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::GetUEResponse>> PrepareAsyncGetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::GetUEResponse>>(PrepareAsyncGetUERaw(context, request, cq));
    }
    // Update an existing UE entity populated with the requested aspects.
    // Only the aspects present in the UE entity will be updated; others will be left unmodified.
    // New aspects can be added via update.
    virtual ::grpc::Status UpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::onos::uenib::UpdateUEResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::UpdateUEResponse>> AsyncUpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::UpdateUEResponse>>(AsyncUpdateUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::UpdateUEResponse>> PrepareAsyncUpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::UpdateUEResponse>>(PrepareAsyncUpdateUERaw(context, request, cq));
    }
    // Delete the specified aspects of a UE entity.
    virtual ::grpc::Status DeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::onos::uenib::DeleteUEResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::DeleteUEResponse>> AsyncDeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::DeleteUEResponse>>(AsyncDeleteUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::DeleteUEResponse>> PrepareAsyncDeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::DeleteUEResponse>>(PrepareAsyncDeleteUERaw(context, request, cq));
    }
    // ListUEs returns a stream of UE entities populated the requested aspects.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::uenib::ListUEResponse>> ListUEs(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::uenib::ListUEResponse>>(ListUEsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::uenib::ListUEResponse>> AsyncListUEs(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::uenib::ListUEResponse>>(AsyncListUEsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::uenib::ListUEResponse>> PrepareAsyncListUEs(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::uenib::ListUEResponse>>(PrepareAsyncListUEsRaw(context, request, cq));
    }
    // WatchUEs returns a stream of UE change notifications, with each UE populated with only the
    // requested aspects.
    std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::uenib::WatchUEResponse>> WatchUEs(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::onos::uenib::WatchUEResponse>>(WatchUEsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::uenib::WatchUEResponse>> AsyncWatchUEs(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::uenib::WatchUEResponse>>(AsyncWatchUEsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::uenib::WatchUEResponse>> PrepareAsyncWatchUEs(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::onos::uenib::WatchUEResponse>>(PrepareAsyncWatchUEsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Create a new UE entity and its initial set of aspects.
      virtual void CreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest* request, ::onos::uenib::CreateUEResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest* request, ::onos::uenib::CreateUEResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get a UE entity populated with the requested aspects.
      virtual void GetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest* request, ::onos::uenib::GetUEResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest* request, ::onos::uenib::GetUEResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update an existing UE entity populated with the requested aspects.
      // Only the aspects present in the UE entity will be updated; others will be left unmodified.
      // New aspects can be added via update.
      virtual void UpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest* request, ::onos::uenib::UpdateUEResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest* request, ::onos::uenib::UpdateUEResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete the specified aspects of a UE entity.
      virtual void DeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest* request, ::onos::uenib::DeleteUEResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest* request, ::onos::uenib::DeleteUEResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ListUEs returns a stream of UE entities populated the requested aspects.
      virtual void ListUEs(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest* request, ::grpc::ClientReadReactor< ::onos::uenib::ListUEResponse>* reactor) = 0;
      // WatchUEs returns a stream of UE change notifications, with each UE populated with only the
      // requested aspects.
      virtual void WatchUEs(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest* request, ::grpc::ClientReadReactor< ::onos::uenib::WatchUEResponse>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::CreateUEResponse>* AsyncCreateUERaw(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::CreateUEResponse>* PrepareAsyncCreateUERaw(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::GetUEResponse>* AsyncGetUERaw(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::GetUEResponse>* PrepareAsyncGetUERaw(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::UpdateUEResponse>* AsyncUpdateUERaw(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::UpdateUEResponse>* PrepareAsyncUpdateUERaw(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::DeleteUEResponse>* AsyncDeleteUERaw(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::onos::uenib::DeleteUEResponse>* PrepareAsyncDeleteUERaw(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::uenib::ListUEResponse>* ListUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::uenib::ListUEResponse>* AsyncListUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::uenib::ListUEResponse>* PrepareAsyncListUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::onos::uenib::WatchUEResponse>* WatchUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::uenib::WatchUEResponse>* AsyncWatchUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::onos::uenib::WatchUEResponse>* PrepareAsyncWatchUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::onos::uenib::CreateUEResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::CreateUEResponse>> AsyncCreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::CreateUEResponse>>(AsyncCreateUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::CreateUEResponse>> PrepareAsyncCreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::CreateUEResponse>>(PrepareAsyncCreateUERaw(context, request, cq));
    }
    ::grpc::Status GetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::onos::uenib::GetUEResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::GetUEResponse>> AsyncGetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::GetUEResponse>>(AsyncGetUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::GetUEResponse>> PrepareAsyncGetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::GetUEResponse>>(PrepareAsyncGetUERaw(context, request, cq));
    }
    ::grpc::Status UpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::onos::uenib::UpdateUEResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::UpdateUEResponse>> AsyncUpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::UpdateUEResponse>>(AsyncUpdateUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::UpdateUEResponse>> PrepareAsyncUpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::UpdateUEResponse>>(PrepareAsyncUpdateUERaw(context, request, cq));
    }
    ::grpc::Status DeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::onos::uenib::DeleteUEResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::DeleteUEResponse>> AsyncDeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::DeleteUEResponse>>(AsyncDeleteUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::DeleteUEResponse>> PrepareAsyncDeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::onos::uenib::DeleteUEResponse>>(PrepareAsyncDeleteUERaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::uenib::ListUEResponse>> ListUEs(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::uenib::ListUEResponse>>(ListUEsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::uenib::ListUEResponse>> AsyncListUEs(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::uenib::ListUEResponse>>(AsyncListUEsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::uenib::ListUEResponse>> PrepareAsyncListUEs(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::uenib::ListUEResponse>>(PrepareAsyncListUEsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::onos::uenib::WatchUEResponse>> WatchUEs(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::onos::uenib::WatchUEResponse>>(WatchUEsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::uenib::WatchUEResponse>> AsyncWatchUEs(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::uenib::WatchUEResponse>>(AsyncWatchUEsRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::uenib::WatchUEResponse>> PrepareAsyncWatchUEs(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::onos::uenib::WatchUEResponse>>(PrepareAsyncWatchUEsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest* request, ::onos::uenib::CreateUEResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateUE(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest* request, ::onos::uenib::CreateUEResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest* request, ::onos::uenib::GetUEResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUE(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest* request, ::onos::uenib::GetUEResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest* request, ::onos::uenib::UpdateUEResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateUE(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest* request, ::onos::uenib::UpdateUEResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest* request, ::onos::uenib::DeleteUEResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteUE(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest* request, ::onos::uenib::DeleteUEResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListUEs(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest* request, ::grpc::ClientReadReactor< ::onos::uenib::ListUEResponse>* reactor) override;
      void WatchUEs(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest* request, ::grpc::ClientReadReactor< ::onos::uenib::WatchUEResponse>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::onos::uenib::CreateUEResponse>* AsyncCreateUERaw(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::uenib::CreateUEResponse>* PrepareAsyncCreateUERaw(::grpc::ClientContext* context, const ::onos::uenib::CreateUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::uenib::GetUEResponse>* AsyncGetUERaw(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::uenib::GetUEResponse>* PrepareAsyncGetUERaw(::grpc::ClientContext* context, const ::onos::uenib::GetUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::uenib::UpdateUEResponse>* AsyncUpdateUERaw(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::uenib::UpdateUEResponse>* PrepareAsyncUpdateUERaw(::grpc::ClientContext* context, const ::onos::uenib::UpdateUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::uenib::DeleteUEResponse>* AsyncDeleteUERaw(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::onos::uenib::DeleteUEResponse>* PrepareAsyncDeleteUERaw(::grpc::ClientContext* context, const ::onos::uenib::DeleteUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::uenib::ListUEResponse>* ListUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::uenib::ListUEResponse>* AsyncListUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::uenib::ListUEResponse>* PrepareAsyncListUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::ListUERequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::onos::uenib::WatchUEResponse>* WatchUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request) override;
    ::grpc::ClientAsyncReader< ::onos::uenib::WatchUEResponse>* AsyncWatchUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::onos::uenib::WatchUEResponse>* PrepareAsyncWatchUEsRaw(::grpc::ClientContext* context, const ::onos::uenib::WatchUERequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateUE_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUE_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUE_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteUE_;
    const ::grpc::internal::RpcMethod rpcmethod_ListUEs_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchUEs_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create a new UE entity and its initial set of aspects.
    virtual ::grpc::Status CreateUE(::grpc::ServerContext* context, const ::onos::uenib::CreateUERequest* request, ::onos::uenib::CreateUEResponse* response);
    // Get a UE entity populated with the requested aspects.
    virtual ::grpc::Status GetUE(::grpc::ServerContext* context, const ::onos::uenib::GetUERequest* request, ::onos::uenib::GetUEResponse* response);
    // Update an existing UE entity populated with the requested aspects.
    // Only the aspects present in the UE entity will be updated; others will be left unmodified.
    // New aspects can be added via update.
    virtual ::grpc::Status UpdateUE(::grpc::ServerContext* context, const ::onos::uenib::UpdateUERequest* request, ::onos::uenib::UpdateUEResponse* response);
    // Delete the specified aspects of a UE entity.
    virtual ::grpc::Status DeleteUE(::grpc::ServerContext* context, const ::onos::uenib::DeleteUERequest* request, ::onos::uenib::DeleteUEResponse* response);
    // ListUEs returns a stream of UE entities populated the requested aspects.
    virtual ::grpc::Status ListUEs(::grpc::ServerContext* context, const ::onos::uenib::ListUERequest* request, ::grpc::ServerWriter< ::onos::uenib::ListUEResponse>* writer);
    // WatchUEs returns a stream of UE change notifications, with each UE populated with only the
    // requested aspects.
    virtual ::grpc::Status WatchUEs(::grpc::ServerContext* context, const ::onos::uenib::WatchUERequest* request, ::grpc::ServerWriter< ::onos::uenib::WatchUEResponse>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateUE() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::CreateUERequest* /*request*/, ::onos::uenib::CreateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUE(::grpc::ServerContext* context, ::onos::uenib::CreateUERequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::uenib::CreateUEResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUE() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::GetUERequest* /*request*/, ::onos::uenib::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUE(::grpc::ServerContext* context, ::onos::uenib::GetUERequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::uenib::GetUEResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateUE() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::UpdateUERequest* /*request*/, ::onos::uenib::UpdateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUE(::grpc::ServerContext* context, ::onos::uenib::UpdateUERequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::uenib::UpdateUEResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteUE() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::DeleteUERequest* /*request*/, ::onos::uenib::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUE(::grpc::ServerContext* context, ::onos::uenib::DeleteUERequest* request, ::grpc::ServerAsyncResponseWriter< ::onos::uenib::DeleteUEResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListUEs() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::ListUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::ListUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUEs(::grpc::ServerContext* context, ::onos::uenib::ListUERequest* request, ::grpc::ServerAsyncWriter< ::onos::uenib::ListUEResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchUEs() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::WatchUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::WatchUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchUEs(::grpc::ServerContext* context, ::onos::uenib::WatchUERequest* request, ::grpc::ServerAsyncWriter< ::onos::uenib::WatchUEResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateUE<WithAsyncMethod_GetUE<WithAsyncMethod_UpdateUE<WithAsyncMethod_DeleteUE<WithAsyncMethod_ListUEs<WithAsyncMethod_WatchUEs<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateUE() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::uenib::CreateUERequest, ::onos::uenib::CreateUEResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::uenib::CreateUERequest* request, ::onos::uenib::CreateUEResponse* response) { return this->CreateUE(context, request, response); }));}
    void SetMessageAllocatorFor_CreateUE(
        ::grpc::MessageAllocator< ::onos::uenib::CreateUERequest, ::onos::uenib::CreateUEResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::uenib::CreateUERequest, ::onos::uenib::CreateUEResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::CreateUERequest* /*request*/, ::onos::uenib::CreateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateUE(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::uenib::CreateUERequest* /*request*/, ::onos::uenib::CreateUEResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUE() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::uenib::GetUERequest, ::onos::uenib::GetUEResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::uenib::GetUERequest* request, ::onos::uenib::GetUEResponse* response) { return this->GetUE(context, request, response); }));}
    void SetMessageAllocatorFor_GetUE(
        ::grpc::MessageAllocator< ::onos::uenib::GetUERequest, ::onos::uenib::GetUEResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::uenib::GetUERequest, ::onos::uenib::GetUEResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::GetUERequest* /*request*/, ::onos::uenib::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUE(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::uenib::GetUERequest* /*request*/, ::onos::uenib::GetUEResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateUE() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::uenib::UpdateUERequest, ::onos::uenib::UpdateUEResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::uenib::UpdateUERequest* request, ::onos::uenib::UpdateUEResponse* response) { return this->UpdateUE(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateUE(
        ::grpc::MessageAllocator< ::onos::uenib::UpdateUERequest, ::onos::uenib::UpdateUEResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::uenib::UpdateUERequest, ::onos::uenib::UpdateUEResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::UpdateUERequest* /*request*/, ::onos::uenib::UpdateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUE(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::uenib::UpdateUERequest* /*request*/, ::onos::uenib::UpdateUEResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteUE() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::onos::uenib::DeleteUERequest, ::onos::uenib::DeleteUEResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::uenib::DeleteUERequest* request, ::onos::uenib::DeleteUEResponse* response) { return this->DeleteUE(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteUE(
        ::grpc::MessageAllocator< ::onos::uenib::DeleteUERequest, ::onos::uenib::DeleteUEResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::onos::uenib::DeleteUERequest, ::onos::uenib::DeleteUEResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::DeleteUERequest* /*request*/, ::onos::uenib::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteUE(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::uenib::DeleteUERequest* /*request*/, ::onos::uenib::DeleteUEResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListUEs() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::uenib::ListUERequest, ::onos::uenib::ListUEResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::uenib::ListUERequest* request) { return this->ListUEs(context, request); }));
    }
    ~WithCallbackMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::ListUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::ListUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::uenib::ListUEResponse>* ListUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::uenib::ListUERequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchUEs() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::onos::uenib::WatchUERequest, ::onos::uenib::WatchUEResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::onos::uenib::WatchUERequest* request) { return this->WatchUEs(context, request); }));
    }
    ~WithCallbackMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::WatchUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::WatchUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::onos::uenib::WatchUEResponse>* WatchUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::onos::uenib::WatchUERequest* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateUE<WithCallbackMethod_GetUE<WithCallbackMethod_UpdateUE<WithCallbackMethod_DeleteUE<WithCallbackMethod_ListUEs<WithCallbackMethod_WatchUEs<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateUE() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::CreateUERequest* /*request*/, ::onos::uenib::CreateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUE() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::GetUERequest* /*request*/, ::onos::uenib::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateUE() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::UpdateUERequest* /*request*/, ::onos::uenib::UpdateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteUE() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::DeleteUERequest* /*request*/, ::onos::uenib::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListUEs() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::ListUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::ListUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchUEs() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::WatchUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::WatchUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateUE() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::CreateUERequest* /*request*/, ::onos::uenib::CreateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUE(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUE() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::GetUERequest* /*request*/, ::onos::uenib::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUE(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateUE() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::UpdateUERequest* /*request*/, ::onos::uenib::UpdateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUE(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteUE() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::DeleteUERequest* /*request*/, ::onos::uenib::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUE(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListUEs() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::ListUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::ListUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListUEs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchUEs() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::WatchUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::WatchUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchUEs(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateUE() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateUE(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::CreateUERequest* /*request*/, ::onos::uenib::CreateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateUE(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUE() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUE(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::GetUERequest* /*request*/, ::onos::uenib::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUE(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateUE() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateUE(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::UpdateUERequest* /*request*/, ::onos::uenib::UpdateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUE(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteUE() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteUE(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::DeleteUERequest* /*request*/, ::onos::uenib::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteUE(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListUEs() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ListUEs(context, request); }));
    }
    ~WithRawCallbackMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::ListUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::ListUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ListUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchUEs() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchUEs(context, request); }));
    }
    ~WithRawCallbackMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::WatchUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::WatchUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchUEs(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateUE() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::uenib::CreateUERequest, ::onos::uenib::CreateUEResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::uenib::CreateUERequest, ::onos::uenib::CreateUEResponse>* streamer) {
                       return this->StreamedCreateUE(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::CreateUERequest* /*request*/, ::onos::uenib::CreateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateUE(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::uenib::CreateUERequest,::onos::uenib::CreateUEResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUE() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::uenib::GetUERequest, ::onos::uenib::GetUEResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::uenib::GetUERequest, ::onos::uenib::GetUEResponse>* streamer) {
                       return this->StreamedGetUE(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::GetUERequest* /*request*/, ::onos::uenib::GetUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUE(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::uenib::GetUERequest,::onos::uenib::GetUEResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateUE() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::uenib::UpdateUERequest, ::onos::uenib::UpdateUEResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::uenib::UpdateUERequest, ::onos::uenib::UpdateUEResponse>* streamer) {
                       return this->StreamedUpdateUE(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::UpdateUERequest* /*request*/, ::onos::uenib::UpdateUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUE(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::uenib::UpdateUERequest,::onos::uenib::UpdateUEResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUE : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteUE() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::onos::uenib::DeleteUERequest, ::onos::uenib::DeleteUEResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::onos::uenib::DeleteUERequest, ::onos::uenib::DeleteUEResponse>* streamer) {
                       return this->StreamedDeleteUE(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteUE() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUE(::grpc::ServerContext* /*context*/, const ::onos::uenib::DeleteUERequest* /*request*/, ::onos::uenib::DeleteUEResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUE(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::onos::uenib::DeleteUERequest,::onos::uenib::DeleteUEResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateUE<WithStreamedUnaryMethod_GetUE<WithStreamedUnaryMethod_UpdateUE<WithStreamedUnaryMethod_DeleteUE<Service > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_ListUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ListUEs() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::uenib::ListUERequest, ::onos::uenib::ListUEResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::uenib::ListUERequest, ::onos::uenib::ListUEResponse>* streamer) {
                       return this->StreamedListUEs(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ListUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::ListUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::ListUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedListUEs(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::uenib::ListUERequest,::onos::uenib::ListUEResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchUEs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchUEs() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::onos::uenib::WatchUERequest, ::onos::uenib::WatchUEResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::onos::uenib::WatchUERequest, ::onos::uenib::WatchUEResponse>* streamer) {
                       return this->StreamedWatchUEs(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchUEs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchUEs(::grpc::ServerContext* /*context*/, const ::onos::uenib::WatchUERequest* /*request*/, ::grpc::ServerWriter< ::onos::uenib::WatchUEResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchUEs(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::onos::uenib::WatchUERequest,::onos::uenib::WatchUEResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_ListUEs<WithSplitStreamingMethod_WatchUEs<Service > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateUE<WithStreamedUnaryMethod_GetUE<WithStreamedUnaryMethod_UpdateUE<WithStreamedUnaryMethod_DeleteUE<WithSplitStreamingMethod_ListUEs<WithSplitStreamingMethod_WatchUEs<Service > > > > > > StreamedService;
};

}  // namespace uenib
}  // namespace onos


#endif  // GRPC_onos_2fuenib_2fuenib_2eproto__INCLUDED
