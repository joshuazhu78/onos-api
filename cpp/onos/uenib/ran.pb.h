// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onos/uenib/ran.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_onos_2fuenib_2fran_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_onos_2fuenib_2fran_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_onos_2fuenib_2fran_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_onos_2fuenib_2fran_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[21]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_onos_2fuenib_2fran_2eproto;
namespace onos {
namespace uenib {
class AmfUeNgapID;
struct AmfUeNgapIDDefaultTypeInternal;
extern AmfUeNgapIDDefaultTypeInternal _AmfUeNgapID_default_instance_;
class BearerId;
struct BearerIdDefaultTypeInternal;
extern BearerIdDefaultTypeInternal _BearerId_default_instance_;
class CellConnection;
struct CellConnectionDefaultTypeInternal;
extern CellConnectionDefaultTypeInternal _CellConnection_default_instance_;
class CellInfo;
struct CellInfoDefaultTypeInternal;
extern CellInfoDefaultTypeInternal _CellInfo_default_instance_;
class CuUeF1apID;
struct CuUeF1apIDDefaultTypeInternal;
extern CuUeF1apIDDefaultTypeInternal _CuUeF1apID_default_instance_;
class DrbId;
struct DrbIdDefaultTypeInternal;
extern DrbIdDefaultTypeInternal _DrbId_default_instance_;
class DuUeF1apID;
struct DuUeF1apIDDefaultTypeInternal;
extern DuUeF1apIDDefaultTypeInternal _DuUeF1apID_default_instance_;
class DynamicFiveQi;
struct DynamicFiveQiDefaultTypeInternal;
extern DynamicFiveQiDefaultTypeInternal _DynamicFiveQi_default_instance_;
class EnbUeS1apID;
struct EnbUeS1apIDDefaultTypeInternal;
extern EnbUeS1apIDDefaultTypeInternal _EnbUeS1apID_default_instance_;
class FiveGDrbId;
struct FiveGDrbIdDefaultTypeInternal;
extern FiveGDrbIdDefaultTypeInternal _FiveGDrbId_default_instance_;
class FiveQi;
struct FiveQiDefaultTypeInternal;
extern FiveQiDefaultTypeInternal _FiveQi_default_instance_;
class FourGDrbId;
struct FourGDrbIdDefaultTypeInternal;
extern FourGDrbIdDefaultTypeInternal _FourGDrbId_default_instance_;
class NonDynamicFiveQi;
struct NonDynamicFiveQiDefaultTypeInternal;
extern NonDynamicFiveQiDefaultTypeInternal _NonDynamicFiveQi_default_instance_;
class Qci;
struct QciDefaultTypeInternal;
extern QciDefaultTypeInternal _Qci_default_instance_;
class Qfi;
struct QfiDefaultTypeInternal;
extern QfiDefaultTypeInternal _Qfi_default_instance_;
class QoSflowLevelParameters;
struct QoSflowLevelParametersDefaultTypeInternal;
extern QoSflowLevelParametersDefaultTypeInternal _QoSflowLevelParameters_default_instance_;
class RSMSliceParameters;
struct RSMSliceParametersDefaultTypeInternal;
extern RSMSliceParametersDefaultTypeInternal _RSMSliceParameters_default_instance_;
class RanUeNgapID;
struct RanUeNgapIDDefaultTypeInternal;
extern RanUeNgapIDDefaultTypeInternal _RanUeNgapID_default_instance_;
class RsmUeInfo;
struct RsmUeInfoDefaultTypeInternal;
extern RsmUeInfoDefaultTypeInternal _RsmUeInfo_default_instance_;
class SliceInfo;
struct SliceInfoDefaultTypeInternal;
extern SliceInfoDefaultTypeInternal _SliceInfo_default_instance_;
class UeIdentity;
struct UeIdentityDefaultTypeInternal;
extern UeIdentityDefaultTypeInternal _UeIdentity_default_instance_;
}  // namespace uenib
}  // namespace onos
PROTOBUF_NAMESPACE_OPEN
template<> ::onos::uenib::AmfUeNgapID* Arena::CreateMaybeMessage<::onos::uenib::AmfUeNgapID>(Arena*);
template<> ::onos::uenib::BearerId* Arena::CreateMaybeMessage<::onos::uenib::BearerId>(Arena*);
template<> ::onos::uenib::CellConnection* Arena::CreateMaybeMessage<::onos::uenib::CellConnection>(Arena*);
template<> ::onos::uenib::CellInfo* Arena::CreateMaybeMessage<::onos::uenib::CellInfo>(Arena*);
template<> ::onos::uenib::CuUeF1apID* Arena::CreateMaybeMessage<::onos::uenib::CuUeF1apID>(Arena*);
template<> ::onos::uenib::DrbId* Arena::CreateMaybeMessage<::onos::uenib::DrbId>(Arena*);
template<> ::onos::uenib::DuUeF1apID* Arena::CreateMaybeMessage<::onos::uenib::DuUeF1apID>(Arena*);
template<> ::onos::uenib::DynamicFiveQi* Arena::CreateMaybeMessage<::onos::uenib::DynamicFiveQi>(Arena*);
template<> ::onos::uenib::EnbUeS1apID* Arena::CreateMaybeMessage<::onos::uenib::EnbUeS1apID>(Arena*);
template<> ::onos::uenib::FiveGDrbId* Arena::CreateMaybeMessage<::onos::uenib::FiveGDrbId>(Arena*);
template<> ::onos::uenib::FiveQi* Arena::CreateMaybeMessage<::onos::uenib::FiveQi>(Arena*);
template<> ::onos::uenib::FourGDrbId* Arena::CreateMaybeMessage<::onos::uenib::FourGDrbId>(Arena*);
template<> ::onos::uenib::NonDynamicFiveQi* Arena::CreateMaybeMessage<::onos::uenib::NonDynamicFiveQi>(Arena*);
template<> ::onos::uenib::Qci* Arena::CreateMaybeMessage<::onos::uenib::Qci>(Arena*);
template<> ::onos::uenib::Qfi* Arena::CreateMaybeMessage<::onos::uenib::Qfi>(Arena*);
template<> ::onos::uenib::QoSflowLevelParameters* Arena::CreateMaybeMessage<::onos::uenib::QoSflowLevelParameters>(Arena*);
template<> ::onos::uenib::RSMSliceParameters* Arena::CreateMaybeMessage<::onos::uenib::RSMSliceParameters>(Arena*);
template<> ::onos::uenib::RanUeNgapID* Arena::CreateMaybeMessage<::onos::uenib::RanUeNgapID>(Arena*);
template<> ::onos::uenib::RsmUeInfo* Arena::CreateMaybeMessage<::onos::uenib::RsmUeInfo>(Arena*);
template<> ::onos::uenib::SliceInfo* Arena::CreateMaybeMessage<::onos::uenib::SliceInfo>(Arena*);
template<> ::onos::uenib::UeIdentity* Arena::CreateMaybeMessage<::onos::uenib::UeIdentity>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace onos {
namespace uenib {

enum UeIdType : int {
  UE_ID_TYPE_CU_UE_F1_AP_ID = 0,
  UE_ID_TYPE_DU_UE_F1_AP_ID = 1,
  UE_ID_TYPE_RAN_UE_NGAP_ID = 2,
  UE_ID_TYPE_AMF_UE_NGAP_ID = 3,
  UE_ID_TYPE_ENB_UE_S1_AP_ID = 4,
  UeIdType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  UeIdType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool UeIdType_IsValid(int value);
constexpr UeIdType UeIdType_MIN = UE_ID_TYPE_CU_UE_F1_AP_ID;
constexpr UeIdType UeIdType_MAX = UE_ID_TYPE_ENB_UE_S1_AP_ID;
constexpr int UeIdType_ARRAYSIZE = UeIdType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UeIdType_descriptor();
template<typename T>
inline const std::string& UeIdType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, UeIdType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function UeIdType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    UeIdType_descriptor(), enum_t_value);
}
inline bool UeIdType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, UeIdType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<UeIdType>(
    UeIdType_descriptor(), name, value);
}
enum RSMSchedulerType : int {
  SCHEDULER_TYPE_ROUND_ROBIN = 0,
  SCHEDULER_TYPE_PROPORTIONALLY_FAIR = 1,
  SCHEDULER_TYPE_QOS_BASED = 2,
  RSMSchedulerType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  RSMSchedulerType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool RSMSchedulerType_IsValid(int value);
constexpr RSMSchedulerType RSMSchedulerType_MIN = SCHEDULER_TYPE_ROUND_ROBIN;
constexpr RSMSchedulerType RSMSchedulerType_MAX = SCHEDULER_TYPE_QOS_BASED;
constexpr int RSMSchedulerType_ARRAYSIZE = RSMSchedulerType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RSMSchedulerType_descriptor();
template<typename T>
inline const std::string& RSMSchedulerType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RSMSchedulerType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RSMSchedulerType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RSMSchedulerType_descriptor(), enum_t_value);
}
inline bool RSMSchedulerType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, RSMSchedulerType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RSMSchedulerType>(
    RSMSchedulerType_descriptor(), name, value);
}
enum RSMSliceType : int {
  SLICE_TYPE_DL_SLICE = 0,
  SLICE_TYPE_UL_SLICE = 1,
  RSMSliceType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  RSMSliceType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool RSMSliceType_IsValid(int value);
constexpr RSMSliceType RSMSliceType_MIN = SLICE_TYPE_DL_SLICE;
constexpr RSMSliceType RSMSliceType_MAX = SLICE_TYPE_UL_SLICE;
constexpr int RSMSliceType_ARRAYSIZE = RSMSliceType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RSMSliceType_descriptor();
template<typename T>
inline const std::string& RSMSliceType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, RSMSliceType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function RSMSliceType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    RSMSliceType_descriptor(), enum_t_value);
}
inline bool RSMSliceType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, RSMSliceType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<RSMSliceType>(
    RSMSliceType_descriptor(), name, value);
}
// ===================================================================

class CellConnection final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.CellConnection) */ {
 public:
  inline CellConnection() : CellConnection(nullptr) {}
  ~CellConnection() override;
  explicit constexpr CellConnection(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CellConnection(const CellConnection& from);
  CellConnection(CellConnection&& from) noexcept
    : CellConnection() {
    *this = ::std::move(from);
  }

  inline CellConnection& operator=(const CellConnection& from) {
    CopyFrom(from);
    return *this;
  }
  inline CellConnection& operator=(CellConnection&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CellConnection& default_instance() {
    return *internal_default_instance();
  }
  static inline const CellConnection* internal_default_instance() {
    return reinterpret_cast<const CellConnection*>(
               &_CellConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CellConnection& a, CellConnection& b) {
    a.Swap(&b);
  }
  inline void Swap(CellConnection* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CellConnection* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CellConnection* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CellConnection>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CellConnection& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CellConnection& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CellConnection* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.CellConnection";
  }
  protected:
  explicit CellConnection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kSignalStrengthFieldNumber = 2,
  };
  // string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ID"];
  void clear_id();
  const std::string& id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // double signal_strength = 2;
  void clear_signal_strength();
  double signal_strength() const;
  void set_signal_strength(double value);
  private:
  double _internal_signal_strength() const;
  void _internal_set_signal_strength(double value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.CellConnection)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  double signal_strength_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class CellInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.CellInfo) */ {
 public:
  inline CellInfo() : CellInfo(nullptr) {}
  ~CellInfo() override;
  explicit constexpr CellInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CellInfo(const CellInfo& from);
  CellInfo(CellInfo&& from) noexcept
    : CellInfo() {
    *this = ::std::move(from);
  }

  inline CellInfo& operator=(const CellInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CellInfo& operator=(CellInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CellInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CellInfo* internal_default_instance() {
    return reinterpret_cast<const CellInfo*>(
               &_CellInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CellInfo& a, CellInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CellInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CellInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CellInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CellInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CellInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CellInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CellInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.CellInfo";
  }
  protected:
  explicit CellInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCandidateCellsFieldNumber = 2,
    kServingCellFieldNumber = 1,
  };
  // repeated .onos.uenib.CellConnection candidate_cells = 2;
  int candidate_cells_size() const;
  private:
  int _internal_candidate_cells_size() const;
  public:
  void clear_candidate_cells();
  ::onos::uenib::CellConnection* mutable_candidate_cells(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::CellConnection >*
      mutable_candidate_cells();
  private:
  const ::onos::uenib::CellConnection& _internal_candidate_cells(int index) const;
  ::onos::uenib::CellConnection* _internal_add_candidate_cells();
  public:
  const ::onos::uenib::CellConnection& candidate_cells(int index) const;
  ::onos::uenib::CellConnection* add_candidate_cells();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::CellConnection >&
      candidate_cells() const;

  // .onos.uenib.CellConnection serving_cell = 1;
  bool has_serving_cell() const;
  private:
  bool _internal_has_serving_cell() const;
  public:
  void clear_serving_cell();
  const ::onos::uenib::CellConnection& serving_cell() const;
  PROTOBUF_NODISCARD ::onos::uenib::CellConnection* release_serving_cell();
  ::onos::uenib::CellConnection* mutable_serving_cell();
  void set_allocated_serving_cell(::onos::uenib::CellConnection* serving_cell);
  private:
  const ::onos::uenib::CellConnection& _internal_serving_cell() const;
  ::onos::uenib::CellConnection* _internal_mutable_serving_cell();
  public:
  void unsafe_arena_set_allocated_serving_cell(
      ::onos::uenib::CellConnection* serving_cell);
  ::onos::uenib::CellConnection* unsafe_arena_release_serving_cell();

  // @@protoc_insertion_point(class_scope:onos.uenib.CellInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::CellConnection > candidate_cells_;
  ::onos::uenib::CellConnection* serving_cell_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class DuUeF1apID final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.DuUeF1apID) */ {
 public:
  inline DuUeF1apID() : DuUeF1apID(nullptr) {}
  ~DuUeF1apID() override;
  explicit constexpr DuUeF1apID(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DuUeF1apID(const DuUeF1apID& from);
  DuUeF1apID(DuUeF1apID&& from) noexcept
    : DuUeF1apID() {
    *this = ::std::move(from);
  }

  inline DuUeF1apID& operator=(const DuUeF1apID& from) {
    CopyFrom(from);
    return *this;
  }
  inline DuUeF1apID& operator=(DuUeF1apID&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DuUeF1apID& default_instance() {
    return *internal_default_instance();
  }
  static inline const DuUeF1apID* internal_default_instance() {
    return reinterpret_cast<const DuUeF1apID*>(
               &_DuUeF1apID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DuUeF1apID& a, DuUeF1apID& b) {
    a.Swap(&b);
  }
  inline void Swap(DuUeF1apID* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DuUeF1apID* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DuUeF1apID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DuUeF1apID>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DuUeF1apID& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DuUeF1apID& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DuUeF1apID* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.DuUeF1apID";
  }
  protected:
  explicit DuUeF1apID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int64 value = 1;
  void clear_value();
  int64_t value() const;
  void set_value(int64_t value);
  private:
  int64_t _internal_value() const;
  void _internal_set_value(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.DuUeF1apID)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class CuUeF1apID final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.CuUeF1apID) */ {
 public:
  inline CuUeF1apID() : CuUeF1apID(nullptr) {}
  ~CuUeF1apID() override;
  explicit constexpr CuUeF1apID(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CuUeF1apID(const CuUeF1apID& from);
  CuUeF1apID(CuUeF1apID&& from) noexcept
    : CuUeF1apID() {
    *this = ::std::move(from);
  }

  inline CuUeF1apID& operator=(const CuUeF1apID& from) {
    CopyFrom(from);
    return *this;
  }
  inline CuUeF1apID& operator=(CuUeF1apID&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CuUeF1apID& default_instance() {
    return *internal_default_instance();
  }
  static inline const CuUeF1apID* internal_default_instance() {
    return reinterpret_cast<const CuUeF1apID*>(
               &_CuUeF1apID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CuUeF1apID& a, CuUeF1apID& b) {
    a.Swap(&b);
  }
  inline void Swap(CuUeF1apID* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CuUeF1apID* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CuUeF1apID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CuUeF1apID>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CuUeF1apID& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CuUeF1apID& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CuUeF1apID* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.CuUeF1apID";
  }
  protected:
  explicit CuUeF1apID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int64 value = 1;
  void clear_value();
  int64_t value() const;
  void set_value(int64_t value);
  private:
  int64_t _internal_value() const;
  void _internal_set_value(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.CuUeF1apID)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class RanUeNgapID final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.RanUeNgapID) */ {
 public:
  inline RanUeNgapID() : RanUeNgapID(nullptr) {}
  ~RanUeNgapID() override;
  explicit constexpr RanUeNgapID(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RanUeNgapID(const RanUeNgapID& from);
  RanUeNgapID(RanUeNgapID&& from) noexcept
    : RanUeNgapID() {
    *this = ::std::move(from);
  }

  inline RanUeNgapID& operator=(const RanUeNgapID& from) {
    CopyFrom(from);
    return *this;
  }
  inline RanUeNgapID& operator=(RanUeNgapID&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RanUeNgapID& default_instance() {
    return *internal_default_instance();
  }
  static inline const RanUeNgapID* internal_default_instance() {
    return reinterpret_cast<const RanUeNgapID*>(
               &_RanUeNgapID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RanUeNgapID& a, RanUeNgapID& b) {
    a.Swap(&b);
  }
  inline void Swap(RanUeNgapID* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RanUeNgapID* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RanUeNgapID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RanUeNgapID>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RanUeNgapID& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RanUeNgapID& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RanUeNgapID* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.RanUeNgapID";
  }
  protected:
  explicit RanUeNgapID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int64 value = 1;
  void clear_value();
  int64_t value() const;
  void set_value(int64_t value);
  private:
  int64_t _internal_value() const;
  void _internal_set_value(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.RanUeNgapID)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class EnbUeS1apID final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.EnbUeS1apID) */ {
 public:
  inline EnbUeS1apID() : EnbUeS1apID(nullptr) {}
  ~EnbUeS1apID() override;
  explicit constexpr EnbUeS1apID(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EnbUeS1apID(const EnbUeS1apID& from);
  EnbUeS1apID(EnbUeS1apID&& from) noexcept
    : EnbUeS1apID() {
    *this = ::std::move(from);
  }

  inline EnbUeS1apID& operator=(const EnbUeS1apID& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnbUeS1apID& operator=(EnbUeS1apID&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnbUeS1apID& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnbUeS1apID* internal_default_instance() {
    return reinterpret_cast<const EnbUeS1apID*>(
               &_EnbUeS1apID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(EnbUeS1apID& a, EnbUeS1apID& b) {
    a.Swap(&b);
  }
  inline void Swap(EnbUeS1apID* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnbUeS1apID* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnbUeS1apID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EnbUeS1apID>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EnbUeS1apID& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const EnbUeS1apID& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnbUeS1apID* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.EnbUeS1apID";
  }
  protected:
  explicit EnbUeS1apID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value();
  int32_t value() const;
  void set_value(int32_t value);
  private:
  int32_t _internal_value() const;
  void _internal_set_value(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.EnbUeS1apID)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class AmfUeNgapID final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.AmfUeNgapID) */ {
 public:
  inline AmfUeNgapID() : AmfUeNgapID(nullptr) {}
  ~AmfUeNgapID() override;
  explicit constexpr AmfUeNgapID(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AmfUeNgapID(const AmfUeNgapID& from);
  AmfUeNgapID(AmfUeNgapID&& from) noexcept
    : AmfUeNgapID() {
    *this = ::std::move(from);
  }

  inline AmfUeNgapID& operator=(const AmfUeNgapID& from) {
    CopyFrom(from);
    return *this;
  }
  inline AmfUeNgapID& operator=(AmfUeNgapID&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AmfUeNgapID& default_instance() {
    return *internal_default_instance();
  }
  static inline const AmfUeNgapID* internal_default_instance() {
    return reinterpret_cast<const AmfUeNgapID*>(
               &_AmfUeNgapID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AmfUeNgapID& a, AmfUeNgapID& b) {
    a.Swap(&b);
  }
  inline void Swap(AmfUeNgapID* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AmfUeNgapID* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AmfUeNgapID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AmfUeNgapID>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AmfUeNgapID& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AmfUeNgapID& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AmfUeNgapID* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.AmfUeNgapID";
  }
  protected:
  explicit AmfUeNgapID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int64 value = 1;
  void clear_value();
  int64_t value() const;
  void set_value(int64_t value);
  private:
  int64_t _internal_value() const;
  void _internal_set_value(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.AmfUeNgapID)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int64_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class UeIdentity final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.UeIdentity) */ {
 public:
  inline UeIdentity() : UeIdentity(nullptr) {}
  ~UeIdentity() override;
  explicit constexpr UeIdentity(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UeIdentity(const UeIdentity& from);
  UeIdentity(UeIdentity&& from) noexcept
    : UeIdentity() {
    *this = ::std::move(from);
  }

  inline UeIdentity& operator=(const UeIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  inline UeIdentity& operator=(UeIdentity&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UeIdentity& default_instance() {
    return *internal_default_instance();
  }
  static inline const UeIdentity* internal_default_instance() {
    return reinterpret_cast<const UeIdentity*>(
               &_UeIdentity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(UeIdentity& a, UeIdentity& b) {
    a.Swap(&b);
  }
  inline void Swap(UeIdentity* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UeIdentity* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UeIdentity* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UeIdentity>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UeIdentity& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const UeIdentity& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UeIdentity* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.UeIdentity";
  }
  protected:
  explicit UeIdentity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDuUeF1ApIdFieldNumber = 1,
    kCuUeF1ApIdFieldNumber = 2,
    kRanUeNgapIdFieldNumber = 3,
    kEnbUeS1ApIdFieldNumber = 4,
    kAmfUeNgapIdFieldNumber = 5,
    kPreferredIdTypeFieldNumber = 6,
  };
  // .onos.uenib.DuUeF1apID du_ue_f1ap_id = 1 [(.gogoproto.customname) = "DuUeF1apID"];
  bool has_du_ue_f1ap_id() const;
  private:
  bool _internal_has_du_ue_f1ap_id() const;
  public:
  void clear_du_ue_f1ap_id();
  const ::onos::uenib::DuUeF1apID& du_ue_f1ap_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::DuUeF1apID* release_du_ue_f1ap_id();
  ::onos::uenib::DuUeF1apID* mutable_du_ue_f1ap_id();
  void set_allocated_du_ue_f1ap_id(::onos::uenib::DuUeF1apID* du_ue_f1ap_id);
  private:
  const ::onos::uenib::DuUeF1apID& _internal_du_ue_f1ap_id() const;
  ::onos::uenib::DuUeF1apID* _internal_mutable_du_ue_f1ap_id();
  public:
  void unsafe_arena_set_allocated_du_ue_f1ap_id(
      ::onos::uenib::DuUeF1apID* du_ue_f1ap_id);
  ::onos::uenib::DuUeF1apID* unsafe_arena_release_du_ue_f1ap_id();

  // .onos.uenib.CuUeF1apID cu_ue_f1ap_id = 2 [(.gogoproto.customname) = "CuUeF1apID"];
  bool has_cu_ue_f1ap_id() const;
  private:
  bool _internal_has_cu_ue_f1ap_id() const;
  public:
  void clear_cu_ue_f1ap_id();
  const ::onos::uenib::CuUeF1apID& cu_ue_f1ap_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::CuUeF1apID* release_cu_ue_f1ap_id();
  ::onos::uenib::CuUeF1apID* mutable_cu_ue_f1ap_id();
  void set_allocated_cu_ue_f1ap_id(::onos::uenib::CuUeF1apID* cu_ue_f1ap_id);
  private:
  const ::onos::uenib::CuUeF1apID& _internal_cu_ue_f1ap_id() const;
  ::onos::uenib::CuUeF1apID* _internal_mutable_cu_ue_f1ap_id();
  public:
  void unsafe_arena_set_allocated_cu_ue_f1ap_id(
      ::onos::uenib::CuUeF1apID* cu_ue_f1ap_id);
  ::onos::uenib::CuUeF1apID* unsafe_arena_release_cu_ue_f1ap_id();

  // .onos.uenib.RanUeNgapID ran_ue_ngap_id = 3 [(.gogoproto.customname) = "RANUeNgapID"];
  bool has_ran_ue_ngap_id() const;
  private:
  bool _internal_has_ran_ue_ngap_id() const;
  public:
  void clear_ran_ue_ngap_id();
  const ::onos::uenib::RanUeNgapID& ran_ue_ngap_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::RanUeNgapID* release_ran_ue_ngap_id();
  ::onos::uenib::RanUeNgapID* mutable_ran_ue_ngap_id();
  void set_allocated_ran_ue_ngap_id(::onos::uenib::RanUeNgapID* ran_ue_ngap_id);
  private:
  const ::onos::uenib::RanUeNgapID& _internal_ran_ue_ngap_id() const;
  ::onos::uenib::RanUeNgapID* _internal_mutable_ran_ue_ngap_id();
  public:
  void unsafe_arena_set_allocated_ran_ue_ngap_id(
      ::onos::uenib::RanUeNgapID* ran_ue_ngap_id);
  ::onos::uenib::RanUeNgapID* unsafe_arena_release_ran_ue_ngap_id();

  // .onos.uenib.EnbUeS1apID enb_ue_s1ap_id = 4 [(.gogoproto.customname) = "EnbUeS1apID"];
  bool has_enb_ue_s1ap_id() const;
  private:
  bool _internal_has_enb_ue_s1ap_id() const;
  public:
  void clear_enb_ue_s1ap_id();
  const ::onos::uenib::EnbUeS1apID& enb_ue_s1ap_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::EnbUeS1apID* release_enb_ue_s1ap_id();
  ::onos::uenib::EnbUeS1apID* mutable_enb_ue_s1ap_id();
  void set_allocated_enb_ue_s1ap_id(::onos::uenib::EnbUeS1apID* enb_ue_s1ap_id);
  private:
  const ::onos::uenib::EnbUeS1apID& _internal_enb_ue_s1ap_id() const;
  ::onos::uenib::EnbUeS1apID* _internal_mutable_enb_ue_s1ap_id();
  public:
  void unsafe_arena_set_allocated_enb_ue_s1ap_id(
      ::onos::uenib::EnbUeS1apID* enb_ue_s1ap_id);
  ::onos::uenib::EnbUeS1apID* unsafe_arena_release_enb_ue_s1ap_id();

  // .onos.uenib.AmfUeNgapID amf_ue_ngap_id = 5 [(.gogoproto.customname) = "AMFUeNgapID"];
  bool has_amf_ue_ngap_id() const;
  private:
  bool _internal_has_amf_ue_ngap_id() const;
  public:
  void clear_amf_ue_ngap_id();
  const ::onos::uenib::AmfUeNgapID& amf_ue_ngap_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::AmfUeNgapID* release_amf_ue_ngap_id();
  ::onos::uenib::AmfUeNgapID* mutable_amf_ue_ngap_id();
  void set_allocated_amf_ue_ngap_id(::onos::uenib::AmfUeNgapID* amf_ue_ngap_id);
  private:
  const ::onos::uenib::AmfUeNgapID& _internal_amf_ue_ngap_id() const;
  ::onos::uenib::AmfUeNgapID* _internal_mutable_amf_ue_ngap_id();
  public:
  void unsafe_arena_set_allocated_amf_ue_ngap_id(
      ::onos::uenib::AmfUeNgapID* amf_ue_ngap_id);
  ::onos::uenib::AmfUeNgapID* unsafe_arena_release_amf_ue_ngap_id();

  // .onos.uenib.UeIdType preferred_id_type = 6 [(.gogoproto.customname) = "PreferredIDType"];
  void clear_preferred_id_type();
  ::onos::uenib::UeIdType preferred_id_type() const;
  void set_preferred_id_type(::onos::uenib::UeIdType value);
  private:
  ::onos::uenib::UeIdType _internal_preferred_id_type() const;
  void _internal_set_preferred_id_type(::onos::uenib::UeIdType value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.UeIdentity)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::onos::uenib::DuUeF1apID* du_ue_f1ap_id_;
  ::onos::uenib::CuUeF1apID* cu_ue_f1ap_id_;
  ::onos::uenib::RanUeNgapID* ran_ue_ngap_id_;
  ::onos::uenib::EnbUeS1apID* enb_ue_s1ap_id_;
  ::onos::uenib::AmfUeNgapID* amf_ue_ngap_id_;
  int preferred_id_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class BearerId final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.BearerId) */ {
 public:
  inline BearerId() : BearerId(nullptr) {}
  ~BearerId() override;
  explicit constexpr BearerId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BearerId(const BearerId& from);
  BearerId(BearerId&& from) noexcept
    : BearerId() {
    *this = ::std::move(from);
  }

  inline BearerId& operator=(const BearerId& from) {
    CopyFrom(from);
    return *this;
  }
  inline BearerId& operator=(BearerId&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BearerId& default_instance() {
    return *internal_default_instance();
  }
  enum BearerIdCase {
    kDrbId = 1,
    BEARER_ID_NOT_SET = 0,
  };

  static inline const BearerId* internal_default_instance() {
    return reinterpret_cast<const BearerId*>(
               &_BearerId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(BearerId& a, BearerId& b) {
    a.Swap(&b);
  }
  inline void Swap(BearerId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BearerId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BearerId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BearerId>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BearerId& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BearerId& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BearerId* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.BearerId";
  }
  protected:
  explicit BearerId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDrbIdFieldNumber = 1,
  };
  // .onos.uenib.DrbId drb_id = 1 [json_name = "drbID"];
  bool has_drb_id() const;
  private:
  bool _internal_has_drb_id() const;
  public:
  void clear_drb_id();
  const ::onos::uenib::DrbId& drb_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::DrbId* release_drb_id();
  ::onos::uenib::DrbId* mutable_drb_id();
  void set_allocated_drb_id(::onos::uenib::DrbId* drb_id);
  private:
  const ::onos::uenib::DrbId& _internal_drb_id() const;
  ::onos::uenib::DrbId* _internal_mutable_drb_id();
  public:
  void unsafe_arena_set_allocated_drb_id(
      ::onos::uenib::DrbId* drb_id);
  ::onos::uenib::DrbId* unsafe_arena_release_drb_id();

  void clear_bearer_id();
  BearerIdCase bearer_id_case() const;
  // @@protoc_insertion_point(class_scope:onos.uenib.BearerId)
 private:
  class _Internal;
  void set_has_drb_id();

  inline bool has_bearer_id() const;
  inline void clear_has_bearer_id();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union BearerIdUnion {
    constexpr BearerIdUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::onos::uenib::DrbId* drb_id_;
  } bearer_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class DrbId final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.DrbId) */ {
 public:
  inline DrbId() : DrbId(nullptr) {}
  ~DrbId() override;
  explicit constexpr DrbId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DrbId(const DrbId& from);
  DrbId(DrbId&& from) noexcept
    : DrbId() {
    *this = ::std::move(from);
  }

  inline DrbId& operator=(const DrbId& from) {
    CopyFrom(from);
    return *this;
  }
  inline DrbId& operator=(DrbId&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DrbId& default_instance() {
    return *internal_default_instance();
  }
  enum DrbIdCase {
    kFourGdrbId = 1,
    kFiveGdrbId = 2,
    DRB_ID_NOT_SET = 0,
  };

  static inline const DrbId* internal_default_instance() {
    return reinterpret_cast<const DrbId*>(
               &_DrbId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(DrbId& a, DrbId& b) {
    a.Swap(&b);
  }
  inline void Swap(DrbId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DrbId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DrbId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DrbId>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DrbId& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DrbId& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DrbId* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.DrbId";
  }
  protected:
  explicit DrbId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFourGdrbIdFieldNumber = 1,
    kFiveGdrbIdFieldNumber = 2,
  };
  // .onos.uenib.FourGDrbId four_gdrb_id = 1 [json_name = "fourGDrbID"];
  bool has_four_gdrb_id() const;
  private:
  bool _internal_has_four_gdrb_id() const;
  public:
  void clear_four_gdrb_id();
  const ::onos::uenib::FourGDrbId& four_gdrb_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::FourGDrbId* release_four_gdrb_id();
  ::onos::uenib::FourGDrbId* mutable_four_gdrb_id();
  void set_allocated_four_gdrb_id(::onos::uenib::FourGDrbId* four_gdrb_id);
  private:
  const ::onos::uenib::FourGDrbId& _internal_four_gdrb_id() const;
  ::onos::uenib::FourGDrbId* _internal_mutable_four_gdrb_id();
  public:
  void unsafe_arena_set_allocated_four_gdrb_id(
      ::onos::uenib::FourGDrbId* four_gdrb_id);
  ::onos::uenib::FourGDrbId* unsafe_arena_release_four_gdrb_id();

  // .onos.uenib.FiveGDrbId five_gdrb_id = 2 [json_name = "fiveGDrbID"];
  bool has_five_gdrb_id() const;
  private:
  bool _internal_has_five_gdrb_id() const;
  public:
  void clear_five_gdrb_id();
  const ::onos::uenib::FiveGDrbId& five_gdrb_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::FiveGDrbId* release_five_gdrb_id();
  ::onos::uenib::FiveGDrbId* mutable_five_gdrb_id();
  void set_allocated_five_gdrb_id(::onos::uenib::FiveGDrbId* five_gdrb_id);
  private:
  const ::onos::uenib::FiveGDrbId& _internal_five_gdrb_id() const;
  ::onos::uenib::FiveGDrbId* _internal_mutable_five_gdrb_id();
  public:
  void unsafe_arena_set_allocated_five_gdrb_id(
      ::onos::uenib::FiveGDrbId* five_gdrb_id);
  ::onos::uenib::FiveGDrbId* unsafe_arena_release_five_gdrb_id();

  void clear_drb_id();
  DrbIdCase drb_id_case() const;
  // @@protoc_insertion_point(class_scope:onos.uenib.DrbId)
 private:
  class _Internal;
  void set_has_four_gdrb_id();
  void set_has_five_gdrb_id();

  inline bool has_drb_id() const;
  inline void clear_has_drb_id();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union DrbIdUnion {
    constexpr DrbIdUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::onos::uenib::FourGDrbId* four_gdrb_id_;
    ::onos::uenib::FiveGDrbId* five_gdrb_id_;
  } drb_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class FiveGDrbId final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.FiveGDrbId) */ {
 public:
  inline FiveGDrbId() : FiveGDrbId(nullptr) {}
  ~FiveGDrbId() override;
  explicit constexpr FiveGDrbId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FiveGDrbId(const FiveGDrbId& from);
  FiveGDrbId(FiveGDrbId&& from) noexcept
    : FiveGDrbId() {
    *this = ::std::move(from);
  }

  inline FiveGDrbId& operator=(const FiveGDrbId& from) {
    CopyFrom(from);
    return *this;
  }
  inline FiveGDrbId& operator=(FiveGDrbId&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FiveGDrbId& default_instance() {
    return *internal_default_instance();
  }
  static inline const FiveGDrbId* internal_default_instance() {
    return reinterpret_cast<const FiveGDrbId*>(
               &_FiveGDrbId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(FiveGDrbId& a, FiveGDrbId& b) {
    a.Swap(&b);
  }
  inline void Swap(FiveGDrbId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FiveGDrbId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FiveGDrbId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FiveGDrbId>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FiveGDrbId& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FiveGDrbId& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FiveGDrbId* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.FiveGDrbId";
  }
  protected:
  explicit FiveGDrbId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlowsMapToDrbFieldNumber = 3,
    kQfiFieldNumber = 2,
    kValueFieldNumber = 1,
  };
  // repeated .onos.uenib.QoSflowLevelParameters flows_map_to_drb = 3;
  int flows_map_to_drb_size() const;
  private:
  int _internal_flows_map_to_drb_size() const;
  public:
  void clear_flows_map_to_drb();
  ::onos::uenib::QoSflowLevelParameters* mutable_flows_map_to_drb(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::QoSflowLevelParameters >*
      mutable_flows_map_to_drb();
  private:
  const ::onos::uenib::QoSflowLevelParameters& _internal_flows_map_to_drb(int index) const;
  ::onos::uenib::QoSflowLevelParameters* _internal_add_flows_map_to_drb();
  public:
  const ::onos::uenib::QoSflowLevelParameters& flows_map_to_drb(int index) const;
  ::onos::uenib::QoSflowLevelParameters* add_flows_map_to_drb();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::QoSflowLevelParameters >&
      flows_map_to_drb() const;

  // .onos.uenib.Qfi qfi = 2;
  bool has_qfi() const;
  private:
  bool _internal_has_qfi() const;
  public:
  void clear_qfi();
  const ::onos::uenib::Qfi& qfi() const;
  PROTOBUF_NODISCARD ::onos::uenib::Qfi* release_qfi();
  ::onos::uenib::Qfi* mutable_qfi();
  void set_allocated_qfi(::onos::uenib::Qfi* qfi);
  private:
  const ::onos::uenib::Qfi& _internal_qfi() const;
  ::onos::uenib::Qfi* _internal_mutable_qfi();
  public:
  void unsafe_arena_set_allocated_qfi(
      ::onos::uenib::Qfi* qfi);
  ::onos::uenib::Qfi* unsafe_arena_release_qfi();

  // int32 value = 1;
  void clear_value();
  int32_t value() const;
  void set_value(int32_t value);
  private:
  int32_t _internal_value() const;
  void _internal_set_value(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.FiveGDrbId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::QoSflowLevelParameters > flows_map_to_drb_;
  ::onos::uenib::Qfi* qfi_;
  int32_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class Qfi final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.Qfi) */ {
 public:
  inline Qfi() : Qfi(nullptr) {}
  ~Qfi() override;
  explicit constexpr Qfi(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Qfi(const Qfi& from);
  Qfi(Qfi&& from) noexcept
    : Qfi() {
    *this = ::std::move(from);
  }

  inline Qfi& operator=(const Qfi& from) {
    CopyFrom(from);
    return *this;
  }
  inline Qfi& operator=(Qfi&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Qfi& default_instance() {
    return *internal_default_instance();
  }
  static inline const Qfi* internal_default_instance() {
    return reinterpret_cast<const Qfi*>(
               &_Qfi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Qfi& a, Qfi& b) {
    a.Swap(&b);
  }
  inline void Swap(Qfi* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Qfi* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Qfi* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Qfi>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Qfi& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Qfi& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Qfi* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.Qfi";
  }
  protected:
  explicit Qfi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value();
  int32_t value() const;
  void set_value(int32_t value);
  private:
  int32_t _internal_value() const;
  void _internal_set_value(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.Qfi)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class QoSflowLevelParameters final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.QoSflowLevelParameters) */ {
 public:
  inline QoSflowLevelParameters() : QoSflowLevelParameters(nullptr) {}
  ~QoSflowLevelParameters() override;
  explicit constexpr QoSflowLevelParameters(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QoSflowLevelParameters(const QoSflowLevelParameters& from);
  QoSflowLevelParameters(QoSflowLevelParameters&& from) noexcept
    : QoSflowLevelParameters() {
    *this = ::std::move(from);
  }

  inline QoSflowLevelParameters& operator=(const QoSflowLevelParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline QoSflowLevelParameters& operator=(QoSflowLevelParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QoSflowLevelParameters& default_instance() {
    return *internal_default_instance();
  }
  enum QosFlowLevelParametersCase {
    kDynamicFiveQi = 1,
    kNonDynamicFiveQi = 2,
    QOS_FLOW_LEVEL_PARAMETERS_NOT_SET = 0,
  };

  static inline const QoSflowLevelParameters* internal_default_instance() {
    return reinterpret_cast<const QoSflowLevelParameters*>(
               &_QoSflowLevelParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(QoSflowLevelParameters& a, QoSflowLevelParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(QoSflowLevelParameters* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QoSflowLevelParameters* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QoSflowLevelParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QoSflowLevelParameters>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QoSflowLevelParameters& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const QoSflowLevelParameters& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QoSflowLevelParameters* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.QoSflowLevelParameters";
  }
  protected:
  explicit QoSflowLevelParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDynamicFiveQiFieldNumber = 1,
    kNonDynamicFiveQiFieldNumber = 2,
  };
  // .onos.uenib.DynamicFiveQi dynamic_five_qi = 1;
  bool has_dynamic_five_qi() const;
  private:
  bool _internal_has_dynamic_five_qi() const;
  public:
  void clear_dynamic_five_qi();
  const ::onos::uenib::DynamicFiveQi& dynamic_five_qi() const;
  PROTOBUF_NODISCARD ::onos::uenib::DynamicFiveQi* release_dynamic_five_qi();
  ::onos::uenib::DynamicFiveQi* mutable_dynamic_five_qi();
  void set_allocated_dynamic_five_qi(::onos::uenib::DynamicFiveQi* dynamic_five_qi);
  private:
  const ::onos::uenib::DynamicFiveQi& _internal_dynamic_five_qi() const;
  ::onos::uenib::DynamicFiveQi* _internal_mutable_dynamic_five_qi();
  public:
  void unsafe_arena_set_allocated_dynamic_five_qi(
      ::onos::uenib::DynamicFiveQi* dynamic_five_qi);
  ::onos::uenib::DynamicFiveQi* unsafe_arena_release_dynamic_five_qi();

  // .onos.uenib.NonDynamicFiveQi non_dynamic_five_qi = 2;
  bool has_non_dynamic_five_qi() const;
  private:
  bool _internal_has_non_dynamic_five_qi() const;
  public:
  void clear_non_dynamic_five_qi();
  const ::onos::uenib::NonDynamicFiveQi& non_dynamic_five_qi() const;
  PROTOBUF_NODISCARD ::onos::uenib::NonDynamicFiveQi* release_non_dynamic_five_qi();
  ::onos::uenib::NonDynamicFiveQi* mutable_non_dynamic_five_qi();
  void set_allocated_non_dynamic_five_qi(::onos::uenib::NonDynamicFiveQi* non_dynamic_five_qi);
  private:
  const ::onos::uenib::NonDynamicFiveQi& _internal_non_dynamic_five_qi() const;
  ::onos::uenib::NonDynamicFiveQi* _internal_mutable_non_dynamic_five_qi();
  public:
  void unsafe_arena_set_allocated_non_dynamic_five_qi(
      ::onos::uenib::NonDynamicFiveQi* non_dynamic_five_qi);
  ::onos::uenib::NonDynamicFiveQi* unsafe_arena_release_non_dynamic_five_qi();

  void clear_qos_flow_level_parameters();
  QosFlowLevelParametersCase qos_flow_level_parameters_case() const;
  // @@protoc_insertion_point(class_scope:onos.uenib.QoSflowLevelParameters)
 private:
  class _Internal;
  void set_has_dynamic_five_qi();
  void set_has_non_dynamic_five_qi();

  inline bool has_qos_flow_level_parameters() const;
  inline void clear_has_qos_flow_level_parameters();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union QosFlowLevelParametersUnion {
    constexpr QosFlowLevelParametersUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::onos::uenib::DynamicFiveQi* dynamic_five_qi_;
    ::onos::uenib::NonDynamicFiveQi* non_dynamic_five_qi_;
  } qos_flow_level_parameters_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class DynamicFiveQi final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.DynamicFiveQi) */ {
 public:
  inline DynamicFiveQi() : DynamicFiveQi(nullptr) {}
  ~DynamicFiveQi() override;
  explicit constexpr DynamicFiveQi(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DynamicFiveQi(const DynamicFiveQi& from);
  DynamicFiveQi(DynamicFiveQi&& from) noexcept
    : DynamicFiveQi() {
    *this = ::std::move(from);
  }

  inline DynamicFiveQi& operator=(const DynamicFiveQi& from) {
    CopyFrom(from);
    return *this;
  }
  inline DynamicFiveQi& operator=(DynamicFiveQi&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DynamicFiveQi& default_instance() {
    return *internal_default_instance();
  }
  static inline const DynamicFiveQi* internal_default_instance() {
    return reinterpret_cast<const DynamicFiveQi*>(
               &_DynamicFiveQi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DynamicFiveQi& a, DynamicFiveQi& b) {
    a.Swap(&b);
  }
  inline void Swap(DynamicFiveQi* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DynamicFiveQi* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DynamicFiveQi* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DynamicFiveQi>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DynamicFiveQi& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DynamicFiveQi& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DynamicFiveQi* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.DynamicFiveQi";
  }
  protected:
  explicit DynamicFiveQi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPriorityLevelFieldNumber = 1,
    kPacketDelayBudgeFieldNumber = 2,
    kPacketErrorRateFieldNumber = 3,
  };
  // int32 priority_level = 1;
  void clear_priority_level();
  int32_t priority_level() const;
  void set_priority_level(int32_t value);
  private:
  int32_t _internal_priority_level() const;
  void _internal_set_priority_level(int32_t value);
  public:

  // int32 packet_delay_budge = 2;
  void clear_packet_delay_budge();
  int32_t packet_delay_budge() const;
  void set_packet_delay_budge(int32_t value);
  private:
  int32_t _internal_packet_delay_budge() const;
  void _internal_set_packet_delay_budge(int32_t value);
  public:

  // int32 packet_error_rate = 3;
  void clear_packet_error_rate();
  int32_t packet_error_rate() const;
  void set_packet_error_rate(int32_t value);
  private:
  int32_t _internal_packet_error_rate() const;
  void _internal_set_packet_error_rate(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.DynamicFiveQi)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t priority_level_;
  int32_t packet_delay_budge_;
  int32_t packet_error_rate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class NonDynamicFiveQi final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.NonDynamicFiveQi) */ {
 public:
  inline NonDynamicFiveQi() : NonDynamicFiveQi(nullptr) {}
  ~NonDynamicFiveQi() override;
  explicit constexpr NonDynamicFiveQi(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NonDynamicFiveQi(const NonDynamicFiveQi& from);
  NonDynamicFiveQi(NonDynamicFiveQi&& from) noexcept
    : NonDynamicFiveQi() {
    *this = ::std::move(from);
  }

  inline NonDynamicFiveQi& operator=(const NonDynamicFiveQi& from) {
    CopyFrom(from);
    return *this;
  }
  inline NonDynamicFiveQi& operator=(NonDynamicFiveQi&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NonDynamicFiveQi& default_instance() {
    return *internal_default_instance();
  }
  static inline const NonDynamicFiveQi* internal_default_instance() {
    return reinterpret_cast<const NonDynamicFiveQi*>(
               &_NonDynamicFiveQi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(NonDynamicFiveQi& a, NonDynamicFiveQi& b) {
    a.Swap(&b);
  }
  inline void Swap(NonDynamicFiveQi* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NonDynamicFiveQi* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NonDynamicFiveQi* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<NonDynamicFiveQi>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const NonDynamicFiveQi& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const NonDynamicFiveQi& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NonDynamicFiveQi* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.NonDynamicFiveQi";
  }
  protected:
  explicit NonDynamicFiveQi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFiveQiFieldNumber = 1,
  };
  // .onos.uenib.FiveQi five_qi = 1;
  bool has_five_qi() const;
  private:
  bool _internal_has_five_qi() const;
  public:
  void clear_five_qi();
  const ::onos::uenib::FiveQi& five_qi() const;
  PROTOBUF_NODISCARD ::onos::uenib::FiveQi* release_five_qi();
  ::onos::uenib::FiveQi* mutable_five_qi();
  void set_allocated_five_qi(::onos::uenib::FiveQi* five_qi);
  private:
  const ::onos::uenib::FiveQi& _internal_five_qi() const;
  ::onos::uenib::FiveQi* _internal_mutable_five_qi();
  public:
  void unsafe_arena_set_allocated_five_qi(
      ::onos::uenib::FiveQi* five_qi);
  ::onos::uenib::FiveQi* unsafe_arena_release_five_qi();

  // @@protoc_insertion_point(class_scope:onos.uenib.NonDynamicFiveQi)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::onos::uenib::FiveQi* five_qi_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class FiveQi final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.FiveQi) */ {
 public:
  inline FiveQi() : FiveQi(nullptr) {}
  ~FiveQi() override;
  explicit constexpr FiveQi(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FiveQi(const FiveQi& from);
  FiveQi(FiveQi&& from) noexcept
    : FiveQi() {
    *this = ::std::move(from);
  }

  inline FiveQi& operator=(const FiveQi& from) {
    CopyFrom(from);
    return *this;
  }
  inline FiveQi& operator=(FiveQi&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FiveQi& default_instance() {
    return *internal_default_instance();
  }
  static inline const FiveQi* internal_default_instance() {
    return reinterpret_cast<const FiveQi*>(
               &_FiveQi_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(FiveQi& a, FiveQi& b) {
    a.Swap(&b);
  }
  inline void Swap(FiveQi* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FiveQi* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FiveQi* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FiveQi>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FiveQi& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FiveQi& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FiveQi* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.FiveQi";
  }
  protected:
  explicit FiveQi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value();
  int32_t value() const;
  void set_value(int32_t value);
  private:
  int32_t _internal_value() const;
  void _internal_set_value(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.FiveQi)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class FourGDrbId final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.FourGDrbId) */ {
 public:
  inline FourGDrbId() : FourGDrbId(nullptr) {}
  ~FourGDrbId() override;
  explicit constexpr FourGDrbId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FourGDrbId(const FourGDrbId& from);
  FourGDrbId(FourGDrbId&& from) noexcept
    : FourGDrbId() {
    *this = ::std::move(from);
  }

  inline FourGDrbId& operator=(const FourGDrbId& from) {
    CopyFrom(from);
    return *this;
  }
  inline FourGDrbId& operator=(FourGDrbId&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FourGDrbId& default_instance() {
    return *internal_default_instance();
  }
  static inline const FourGDrbId* internal_default_instance() {
    return reinterpret_cast<const FourGDrbId*>(
               &_FourGDrbId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(FourGDrbId& a, FourGDrbId& b) {
    a.Swap(&b);
  }
  inline void Swap(FourGDrbId* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FourGDrbId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FourGDrbId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FourGDrbId>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FourGDrbId& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FourGDrbId& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FourGDrbId* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.FourGDrbId";
  }
  protected:
  explicit FourGDrbId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQciFieldNumber = 2,
    kValueFieldNumber = 1,
  };
  // .onos.uenib.Qci qci = 2;
  bool has_qci() const;
  private:
  bool _internal_has_qci() const;
  public:
  void clear_qci();
  const ::onos::uenib::Qci& qci() const;
  PROTOBUF_NODISCARD ::onos::uenib::Qci* release_qci();
  ::onos::uenib::Qci* mutable_qci();
  void set_allocated_qci(::onos::uenib::Qci* qci);
  private:
  const ::onos::uenib::Qci& _internal_qci() const;
  ::onos::uenib::Qci* _internal_mutable_qci();
  public:
  void unsafe_arena_set_allocated_qci(
      ::onos::uenib::Qci* qci);
  ::onos::uenib::Qci* unsafe_arena_release_qci();

  // int32 value = 1;
  void clear_value();
  int32_t value() const;
  void set_value(int32_t value);
  private:
  int32_t _internal_value() const;
  void _internal_set_value(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.FourGDrbId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::onos::uenib::Qci* qci_;
  int32_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class Qci final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.Qci) */ {
 public:
  inline Qci() : Qci(nullptr) {}
  ~Qci() override;
  explicit constexpr Qci(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Qci(const Qci& from);
  Qci(Qci&& from) noexcept
    : Qci() {
    *this = ::std::move(from);
  }

  inline Qci& operator=(const Qci& from) {
    CopyFrom(from);
    return *this;
  }
  inline Qci& operator=(Qci&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Qci& default_instance() {
    return *internal_default_instance();
  }
  static inline const Qci* internal_default_instance() {
    return reinterpret_cast<const Qci*>(
               &_Qci_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Qci& a, Qci& b) {
    a.Swap(&b);
  }
  inline void Swap(Qci* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Qci* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Qci* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Qci>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Qci& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Qci& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Qci* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.Qci";
  }
  protected:
  explicit Qci(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value();
  int32_t value() const;
  void set_value(int32_t value);
  private:
  int32_t _internal_value() const;
  void _internal_set_value(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.Qci)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class RsmUeInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.RsmUeInfo) */ {
 public:
  inline RsmUeInfo() : RsmUeInfo(nullptr) {}
  ~RsmUeInfo() override;
  explicit constexpr RsmUeInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RsmUeInfo(const RsmUeInfo& from);
  RsmUeInfo(RsmUeInfo&& from) noexcept
    : RsmUeInfo() {
    *this = ::std::move(from);
  }

  inline RsmUeInfo& operator=(const RsmUeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline RsmUeInfo& operator=(RsmUeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RsmUeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const RsmUeInfo* internal_default_instance() {
    return reinterpret_cast<const RsmUeInfo*>(
               &_RsmUeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(RsmUeInfo& a, RsmUeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(RsmUeInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RsmUeInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RsmUeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RsmUeInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RsmUeInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RsmUeInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RsmUeInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.RsmUeInfo";
  }
  protected:
  explicit RsmUeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBearerIdListFieldNumber = 3,
    kSliceListFieldNumber = 7,
    kGlobalUeIdFieldNumber = 1,
    kCellGlobalIdFieldNumber = 4,
    kCuE2NodeIdFieldNumber = 5,
    kDuE2NodeIdFieldNumber = 6,
    kUeIdListFieldNumber = 2,
  };
  // repeated .onos.uenib.BearerId bearer_id_list = 3;
  int bearer_id_list_size() const;
  private:
  int _internal_bearer_id_list_size() const;
  public:
  void clear_bearer_id_list();
  ::onos::uenib::BearerId* mutable_bearer_id_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::BearerId >*
      mutable_bearer_id_list();
  private:
  const ::onos::uenib::BearerId& _internal_bearer_id_list(int index) const;
  ::onos::uenib::BearerId* _internal_add_bearer_id_list();
  public:
  const ::onos::uenib::BearerId& bearer_id_list(int index) const;
  ::onos::uenib::BearerId* add_bearer_id_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::BearerId >&
      bearer_id_list() const;

  // repeated .onos.uenib.SliceInfo slice_list = 7;
  int slice_list_size() const;
  private:
  int _internal_slice_list_size() const;
  public:
  void clear_slice_list();
  ::onos::uenib::SliceInfo* mutable_slice_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::SliceInfo >*
      mutable_slice_list();
  private:
  const ::onos::uenib::SliceInfo& _internal_slice_list(int index) const;
  ::onos::uenib::SliceInfo* _internal_add_slice_list();
  public:
  const ::onos::uenib::SliceInfo& slice_list(int index) const;
  ::onos::uenib::SliceInfo* add_slice_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::SliceInfo >&
      slice_list() const;

  // string global_ue_id = 1 [(.gogoproto.customname) = "GlobalUeID"];
  void clear_global_ue_id();
  const std::string& global_ue_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_global_ue_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_global_ue_id();
  PROTOBUF_NODISCARD std::string* release_global_ue_id();
  void set_allocated_global_ue_id(std::string* global_ue_id);
  private:
  const std::string& _internal_global_ue_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_global_ue_id(const std::string& value);
  std::string* _internal_mutable_global_ue_id();
  public:

  // string cell_global_id = 4;
  void clear_cell_global_id();
  const std::string& cell_global_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_cell_global_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_cell_global_id();
  PROTOBUF_NODISCARD std::string* release_cell_global_id();
  void set_allocated_cell_global_id(std::string* cell_global_id);
  private:
  const std::string& _internal_cell_global_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cell_global_id(const std::string& value);
  std::string* _internal_mutable_cell_global_id();
  public:

  // string cu_e2_node_id = 5;
  void clear_cu_e2_node_id();
  const std::string& cu_e2_node_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_cu_e2_node_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_cu_e2_node_id();
  PROTOBUF_NODISCARD std::string* release_cu_e2_node_id();
  void set_allocated_cu_e2_node_id(std::string* cu_e2_node_id);
  private:
  const std::string& _internal_cu_e2_node_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cu_e2_node_id(const std::string& value);
  std::string* _internal_mutable_cu_e2_node_id();
  public:

  // string du_e2_node_id = 6;
  void clear_du_e2_node_id();
  const std::string& du_e2_node_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_du_e2_node_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_du_e2_node_id();
  PROTOBUF_NODISCARD std::string* release_du_e2_node_id();
  void set_allocated_du_e2_node_id(std::string* du_e2_node_id);
  private:
  const std::string& _internal_du_e2_node_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_du_e2_node_id(const std::string& value);
  std::string* _internal_mutable_du_e2_node_id();
  public:

  // .onos.uenib.UeIdentity ue_id_list = 2;
  bool has_ue_id_list() const;
  private:
  bool _internal_has_ue_id_list() const;
  public:
  void clear_ue_id_list();
  const ::onos::uenib::UeIdentity& ue_id_list() const;
  PROTOBUF_NODISCARD ::onos::uenib::UeIdentity* release_ue_id_list();
  ::onos::uenib::UeIdentity* mutable_ue_id_list();
  void set_allocated_ue_id_list(::onos::uenib::UeIdentity* ue_id_list);
  private:
  const ::onos::uenib::UeIdentity& _internal_ue_id_list() const;
  ::onos::uenib::UeIdentity* _internal_mutable_ue_id_list();
  public:
  void unsafe_arena_set_allocated_ue_id_list(
      ::onos::uenib::UeIdentity* ue_id_list);
  ::onos::uenib::UeIdentity* unsafe_arena_release_ue_id_list();

  // @@protoc_insertion_point(class_scope:onos.uenib.RsmUeInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::BearerId > bearer_id_list_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::SliceInfo > slice_list_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr global_ue_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cell_global_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cu_e2_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr du_e2_node_id_;
  ::onos::uenib::UeIdentity* ue_id_list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class SliceInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.SliceInfo) */ {
 public:
  inline SliceInfo() : SliceInfo(nullptr) {}
  ~SliceInfo() override;
  explicit constexpr SliceInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SliceInfo(const SliceInfo& from);
  SliceInfo(SliceInfo&& from) noexcept
    : SliceInfo() {
    *this = ::std::move(from);
  }

  inline SliceInfo& operator=(const SliceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SliceInfo& operator=(SliceInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SliceInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const SliceInfo* internal_default_instance() {
    return reinterpret_cast<const SliceInfo*>(
               &_SliceInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(SliceInfo& a, SliceInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SliceInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SliceInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SliceInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SliceInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SliceInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const SliceInfo& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SliceInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.SliceInfo";
  }
  protected:
  explicit SliceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDuE2NodeIdFieldNumber = 1,
    kCuE2NodeIdFieldNumber = 2,
    kIdFieldNumber = 3,
    kSliceDescFieldNumber = 4,
    kSliceParametersFieldNumber = 5,
    kDrbIdFieldNumber = 7,
    kSliceTypeFieldNumber = 6,
  };
  // string du_e2_node_id = 1;
  void clear_du_e2_node_id();
  const std::string& du_e2_node_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_du_e2_node_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_du_e2_node_id();
  PROTOBUF_NODISCARD std::string* release_du_e2_node_id();
  void set_allocated_du_e2_node_id(std::string* du_e2_node_id);
  private:
  const std::string& _internal_du_e2_node_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_du_e2_node_id(const std::string& value);
  std::string* _internal_mutable_du_e2_node_id();
  public:

  // string cu_e2_node_id = 2;
  void clear_cu_e2_node_id();
  const std::string& cu_e2_node_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_cu_e2_node_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_cu_e2_node_id();
  PROTOBUF_NODISCARD std::string* release_cu_e2_node_id();
  void set_allocated_cu_e2_node_id(std::string* cu_e2_node_id);
  private:
  const std::string& _internal_cu_e2_node_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cu_e2_node_id(const std::string& value);
  std::string* _internal_mutable_cu_e2_node_id();
  public:

  // string id = 3 [(.gogoproto.customname) = "ID"];
  void clear_id();
  const std::string& id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string slice_desc = 4;
  void clear_slice_desc();
  const std::string& slice_desc() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_slice_desc(ArgT0&& arg0, ArgT... args);
  std::string* mutable_slice_desc();
  PROTOBUF_NODISCARD std::string* release_slice_desc();
  void set_allocated_slice_desc(std::string* slice_desc);
  private:
  const std::string& _internal_slice_desc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_slice_desc(const std::string& value);
  std::string* _internal_mutable_slice_desc();
  public:

  // .onos.uenib.RSMSliceParameters slice_parameters = 5;
  bool has_slice_parameters() const;
  private:
  bool _internal_has_slice_parameters() const;
  public:
  void clear_slice_parameters();
  const ::onos::uenib::RSMSliceParameters& slice_parameters() const;
  PROTOBUF_NODISCARD ::onos::uenib::RSMSliceParameters* release_slice_parameters();
  ::onos::uenib::RSMSliceParameters* mutable_slice_parameters();
  void set_allocated_slice_parameters(::onos::uenib::RSMSliceParameters* slice_parameters);
  private:
  const ::onos::uenib::RSMSliceParameters& _internal_slice_parameters() const;
  ::onos::uenib::RSMSliceParameters* _internal_mutable_slice_parameters();
  public:
  void unsafe_arena_set_allocated_slice_parameters(
      ::onos::uenib::RSMSliceParameters* slice_parameters);
  ::onos::uenib::RSMSliceParameters* unsafe_arena_release_slice_parameters();

  // .onos.uenib.DrbId drb_id = 7;
  bool has_drb_id() const;
  private:
  bool _internal_has_drb_id() const;
  public:
  void clear_drb_id();
  const ::onos::uenib::DrbId& drb_id() const;
  PROTOBUF_NODISCARD ::onos::uenib::DrbId* release_drb_id();
  ::onos::uenib::DrbId* mutable_drb_id();
  void set_allocated_drb_id(::onos::uenib::DrbId* drb_id);
  private:
  const ::onos::uenib::DrbId& _internal_drb_id() const;
  ::onos::uenib::DrbId* _internal_mutable_drb_id();
  public:
  void unsafe_arena_set_allocated_drb_id(
      ::onos::uenib::DrbId* drb_id);
  ::onos::uenib::DrbId* unsafe_arena_release_drb_id();

  // .onos.uenib.RSMSliceType slice_type = 6;
  void clear_slice_type();
  ::onos::uenib::RSMSliceType slice_type() const;
  void set_slice_type(::onos::uenib::RSMSliceType value);
  private:
  ::onos::uenib::RSMSliceType _internal_slice_type() const;
  void _internal_set_slice_type(::onos::uenib::RSMSliceType value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.SliceInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr du_e2_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cu_e2_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr slice_desc_;
  ::onos::uenib::RSMSliceParameters* slice_parameters_;
  ::onos::uenib::DrbId* drb_id_;
  int slice_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// -------------------------------------------------------------------

class RSMSliceParameters final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:onos.uenib.RSMSliceParameters) */ {
 public:
  inline RSMSliceParameters() : RSMSliceParameters(nullptr) {}
  ~RSMSliceParameters() override;
  explicit constexpr RSMSliceParameters(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RSMSliceParameters(const RSMSliceParameters& from);
  RSMSliceParameters(RSMSliceParameters&& from) noexcept
    : RSMSliceParameters() {
    *this = ::std::move(from);
  }

  inline RSMSliceParameters& operator=(const RSMSliceParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline RSMSliceParameters& operator=(RSMSliceParameters&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RSMSliceParameters& default_instance() {
    return *internal_default_instance();
  }
  static inline const RSMSliceParameters* internal_default_instance() {
    return reinterpret_cast<const RSMSliceParameters*>(
               &_RSMSliceParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(RSMSliceParameters& a, RSMSliceParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(RSMSliceParameters* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RSMSliceParameters* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RSMSliceParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RSMSliceParameters>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RSMSliceParameters& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const RSMSliceParameters& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RSMSliceParameters* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "onos.uenib.RSMSliceParameters";
  }
  protected:
  explicit RSMSliceParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchedulerTypeFieldNumber = 1,
    kWeightFieldNumber = 2,
    kQosLevelFieldNumber = 3,
  };
  // .onos.uenib.RSMSchedulerType scheduler_type = 1;
  void clear_scheduler_type();
  ::onos::uenib::RSMSchedulerType scheduler_type() const;
  void set_scheduler_type(::onos::uenib::RSMSchedulerType value);
  private:
  ::onos::uenib::RSMSchedulerType _internal_scheduler_type() const;
  void _internal_set_scheduler_type(::onos::uenib::RSMSchedulerType value);
  public:

  // int32 weight = 2;
  void clear_weight();
  int32_t weight() const;
  void set_weight(int32_t value);
  private:
  int32_t _internal_weight() const;
  void _internal_set_weight(int32_t value);
  public:

  // int32 qos_level = 3;
  void clear_qos_level();
  int32_t qos_level() const;
  void set_qos_level(int32_t value);
  private:
  int32_t _internal_qos_level() const;
  void _internal_set_qos_level(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:onos.uenib.RSMSliceParameters)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int scheduler_type_;
  int32_t weight_;
  int32_t qos_level_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_onos_2fuenib_2fran_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CellConnection

// string id = 1 [(.gogoproto.customname) = "ID", (.gogoproto.casttype) = "ID"];
inline void CellConnection::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& CellConnection::id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.CellConnection.id)
  return _internal_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CellConnection::set_id(ArgT0&& arg0, ArgT... args) {
 
 id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.CellConnection.id)
}
inline std::string* CellConnection::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.CellConnection.id)
  return _s;
}
inline const std::string& CellConnection::_internal_id() const {
  return id_.Get();
}
inline void CellConnection::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* CellConnection::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* CellConnection::release_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.CellConnection.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void CellConnection::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.CellConnection.id)
}

// double signal_strength = 2;
inline void CellConnection::clear_signal_strength() {
  signal_strength_ = 0;
}
inline double CellConnection::_internal_signal_strength() const {
  return signal_strength_;
}
inline double CellConnection::signal_strength() const {
  // @@protoc_insertion_point(field_get:onos.uenib.CellConnection.signal_strength)
  return _internal_signal_strength();
}
inline void CellConnection::_internal_set_signal_strength(double value) {
  
  signal_strength_ = value;
}
inline void CellConnection::set_signal_strength(double value) {
  _internal_set_signal_strength(value);
  // @@protoc_insertion_point(field_set:onos.uenib.CellConnection.signal_strength)
}

// -------------------------------------------------------------------

// CellInfo

// .onos.uenib.CellConnection serving_cell = 1;
inline bool CellInfo::_internal_has_serving_cell() const {
  return this != internal_default_instance() && serving_cell_ != nullptr;
}
inline bool CellInfo::has_serving_cell() const {
  return _internal_has_serving_cell();
}
inline void CellInfo::clear_serving_cell() {
  if (GetArenaForAllocation() == nullptr && serving_cell_ != nullptr) {
    delete serving_cell_;
  }
  serving_cell_ = nullptr;
}
inline const ::onos::uenib::CellConnection& CellInfo::_internal_serving_cell() const {
  const ::onos::uenib::CellConnection* p = serving_cell_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::CellConnection&>(
      ::onos::uenib::_CellConnection_default_instance_);
}
inline const ::onos::uenib::CellConnection& CellInfo::serving_cell() const {
  // @@protoc_insertion_point(field_get:onos.uenib.CellInfo.serving_cell)
  return _internal_serving_cell();
}
inline void CellInfo::unsafe_arena_set_allocated_serving_cell(
    ::onos::uenib::CellConnection* serving_cell) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(serving_cell_);
  }
  serving_cell_ = serving_cell;
  if (serving_cell) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.CellInfo.serving_cell)
}
inline ::onos::uenib::CellConnection* CellInfo::release_serving_cell() {
  
  ::onos::uenib::CellConnection* temp = serving_cell_;
  serving_cell_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::CellConnection* CellInfo::unsafe_arena_release_serving_cell() {
  // @@protoc_insertion_point(field_release:onos.uenib.CellInfo.serving_cell)
  
  ::onos::uenib::CellConnection* temp = serving_cell_;
  serving_cell_ = nullptr;
  return temp;
}
inline ::onos::uenib::CellConnection* CellInfo::_internal_mutable_serving_cell() {
  
  if (serving_cell_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::CellConnection>(GetArenaForAllocation());
    serving_cell_ = p;
  }
  return serving_cell_;
}
inline ::onos::uenib::CellConnection* CellInfo::mutable_serving_cell() {
  ::onos::uenib::CellConnection* _msg = _internal_mutable_serving_cell();
  // @@protoc_insertion_point(field_mutable:onos.uenib.CellInfo.serving_cell)
  return _msg;
}
inline void CellInfo::set_allocated_serving_cell(::onos::uenib::CellConnection* serving_cell) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete serving_cell_;
  }
  if (serving_cell) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::CellConnection>::GetOwningArena(serving_cell);
    if (message_arena != submessage_arena) {
      serving_cell = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, serving_cell, submessage_arena);
    }
    
  } else {
    
  }
  serving_cell_ = serving_cell;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.CellInfo.serving_cell)
}

// repeated .onos.uenib.CellConnection candidate_cells = 2;
inline int CellInfo::_internal_candidate_cells_size() const {
  return candidate_cells_.size();
}
inline int CellInfo::candidate_cells_size() const {
  return _internal_candidate_cells_size();
}
inline void CellInfo::clear_candidate_cells() {
  candidate_cells_.Clear();
}
inline ::onos::uenib::CellConnection* CellInfo::mutable_candidate_cells(int index) {
  // @@protoc_insertion_point(field_mutable:onos.uenib.CellInfo.candidate_cells)
  return candidate_cells_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::CellConnection >*
CellInfo::mutable_candidate_cells() {
  // @@protoc_insertion_point(field_mutable_list:onos.uenib.CellInfo.candidate_cells)
  return &candidate_cells_;
}
inline const ::onos::uenib::CellConnection& CellInfo::_internal_candidate_cells(int index) const {
  return candidate_cells_.Get(index);
}
inline const ::onos::uenib::CellConnection& CellInfo::candidate_cells(int index) const {
  // @@protoc_insertion_point(field_get:onos.uenib.CellInfo.candidate_cells)
  return _internal_candidate_cells(index);
}
inline ::onos::uenib::CellConnection* CellInfo::_internal_add_candidate_cells() {
  return candidate_cells_.Add();
}
inline ::onos::uenib::CellConnection* CellInfo::add_candidate_cells() {
  ::onos::uenib::CellConnection* _add = _internal_add_candidate_cells();
  // @@protoc_insertion_point(field_add:onos.uenib.CellInfo.candidate_cells)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::CellConnection >&
CellInfo::candidate_cells() const {
  // @@protoc_insertion_point(field_list:onos.uenib.CellInfo.candidate_cells)
  return candidate_cells_;
}

// -------------------------------------------------------------------

// DuUeF1apID

// int64 value = 1;
inline void DuUeF1apID::clear_value() {
  value_ = int64_t{0};
}
inline int64_t DuUeF1apID::_internal_value() const {
  return value_;
}
inline int64_t DuUeF1apID::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.DuUeF1apID.value)
  return _internal_value();
}
inline void DuUeF1apID::_internal_set_value(int64_t value) {
  
  value_ = value;
}
inline void DuUeF1apID::set_value(int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.DuUeF1apID.value)
}

// -------------------------------------------------------------------

// CuUeF1apID

// int64 value = 1;
inline void CuUeF1apID::clear_value() {
  value_ = int64_t{0};
}
inline int64_t CuUeF1apID::_internal_value() const {
  return value_;
}
inline int64_t CuUeF1apID::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.CuUeF1apID.value)
  return _internal_value();
}
inline void CuUeF1apID::_internal_set_value(int64_t value) {
  
  value_ = value;
}
inline void CuUeF1apID::set_value(int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.CuUeF1apID.value)
}

// -------------------------------------------------------------------

// RanUeNgapID

// int64 value = 1;
inline void RanUeNgapID::clear_value() {
  value_ = int64_t{0};
}
inline int64_t RanUeNgapID::_internal_value() const {
  return value_;
}
inline int64_t RanUeNgapID::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RanUeNgapID.value)
  return _internal_value();
}
inline void RanUeNgapID::_internal_set_value(int64_t value) {
  
  value_ = value;
}
inline void RanUeNgapID::set_value(int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.RanUeNgapID.value)
}

// -------------------------------------------------------------------

// EnbUeS1apID

// int32 value = 1;
inline void EnbUeS1apID::clear_value() {
  value_ = 0;
}
inline int32_t EnbUeS1apID::_internal_value() const {
  return value_;
}
inline int32_t EnbUeS1apID::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.EnbUeS1apID.value)
  return _internal_value();
}
inline void EnbUeS1apID::_internal_set_value(int32_t value) {
  
  value_ = value;
}
inline void EnbUeS1apID::set_value(int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.EnbUeS1apID.value)
}

// -------------------------------------------------------------------

// AmfUeNgapID

// int64 value = 1;
inline void AmfUeNgapID::clear_value() {
  value_ = int64_t{0};
}
inline int64_t AmfUeNgapID::_internal_value() const {
  return value_;
}
inline int64_t AmfUeNgapID::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.AmfUeNgapID.value)
  return _internal_value();
}
inline void AmfUeNgapID::_internal_set_value(int64_t value) {
  
  value_ = value;
}
inline void AmfUeNgapID::set_value(int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.AmfUeNgapID.value)
}

// -------------------------------------------------------------------

// UeIdentity

// .onos.uenib.DuUeF1apID du_ue_f1ap_id = 1 [(.gogoproto.customname) = "DuUeF1apID"];
inline bool UeIdentity::_internal_has_du_ue_f1ap_id() const {
  return this != internal_default_instance() && du_ue_f1ap_id_ != nullptr;
}
inline bool UeIdentity::has_du_ue_f1ap_id() const {
  return _internal_has_du_ue_f1ap_id();
}
inline void UeIdentity::clear_du_ue_f1ap_id() {
  if (GetArenaForAllocation() == nullptr && du_ue_f1ap_id_ != nullptr) {
    delete du_ue_f1ap_id_;
  }
  du_ue_f1ap_id_ = nullptr;
}
inline const ::onos::uenib::DuUeF1apID& UeIdentity::_internal_du_ue_f1ap_id() const {
  const ::onos::uenib::DuUeF1apID* p = du_ue_f1ap_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::DuUeF1apID&>(
      ::onos::uenib::_DuUeF1apID_default_instance_);
}
inline const ::onos::uenib::DuUeF1apID& UeIdentity::du_ue_f1ap_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.UeIdentity.du_ue_f1ap_id)
  return _internal_du_ue_f1ap_id();
}
inline void UeIdentity::unsafe_arena_set_allocated_du_ue_f1ap_id(
    ::onos::uenib::DuUeF1apID* du_ue_f1ap_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(du_ue_f1ap_id_);
  }
  du_ue_f1ap_id_ = du_ue_f1ap_id;
  if (du_ue_f1ap_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.UeIdentity.du_ue_f1ap_id)
}
inline ::onos::uenib::DuUeF1apID* UeIdentity::release_du_ue_f1ap_id() {
  
  ::onos::uenib::DuUeF1apID* temp = du_ue_f1ap_id_;
  du_ue_f1ap_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::DuUeF1apID* UeIdentity::unsafe_arena_release_du_ue_f1ap_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.UeIdentity.du_ue_f1ap_id)
  
  ::onos::uenib::DuUeF1apID* temp = du_ue_f1ap_id_;
  du_ue_f1ap_id_ = nullptr;
  return temp;
}
inline ::onos::uenib::DuUeF1apID* UeIdentity::_internal_mutable_du_ue_f1ap_id() {
  
  if (du_ue_f1ap_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::DuUeF1apID>(GetArenaForAllocation());
    du_ue_f1ap_id_ = p;
  }
  return du_ue_f1ap_id_;
}
inline ::onos::uenib::DuUeF1apID* UeIdentity::mutable_du_ue_f1ap_id() {
  ::onos::uenib::DuUeF1apID* _msg = _internal_mutable_du_ue_f1ap_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.UeIdentity.du_ue_f1ap_id)
  return _msg;
}
inline void UeIdentity::set_allocated_du_ue_f1ap_id(::onos::uenib::DuUeF1apID* du_ue_f1ap_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete du_ue_f1ap_id_;
  }
  if (du_ue_f1ap_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::DuUeF1apID>::GetOwningArena(du_ue_f1ap_id);
    if (message_arena != submessage_arena) {
      du_ue_f1ap_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, du_ue_f1ap_id, submessage_arena);
    }
    
  } else {
    
  }
  du_ue_f1ap_id_ = du_ue_f1ap_id;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.UeIdentity.du_ue_f1ap_id)
}

// .onos.uenib.CuUeF1apID cu_ue_f1ap_id = 2 [(.gogoproto.customname) = "CuUeF1apID"];
inline bool UeIdentity::_internal_has_cu_ue_f1ap_id() const {
  return this != internal_default_instance() && cu_ue_f1ap_id_ != nullptr;
}
inline bool UeIdentity::has_cu_ue_f1ap_id() const {
  return _internal_has_cu_ue_f1ap_id();
}
inline void UeIdentity::clear_cu_ue_f1ap_id() {
  if (GetArenaForAllocation() == nullptr && cu_ue_f1ap_id_ != nullptr) {
    delete cu_ue_f1ap_id_;
  }
  cu_ue_f1ap_id_ = nullptr;
}
inline const ::onos::uenib::CuUeF1apID& UeIdentity::_internal_cu_ue_f1ap_id() const {
  const ::onos::uenib::CuUeF1apID* p = cu_ue_f1ap_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::CuUeF1apID&>(
      ::onos::uenib::_CuUeF1apID_default_instance_);
}
inline const ::onos::uenib::CuUeF1apID& UeIdentity::cu_ue_f1ap_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.UeIdentity.cu_ue_f1ap_id)
  return _internal_cu_ue_f1ap_id();
}
inline void UeIdentity::unsafe_arena_set_allocated_cu_ue_f1ap_id(
    ::onos::uenib::CuUeF1apID* cu_ue_f1ap_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cu_ue_f1ap_id_);
  }
  cu_ue_f1ap_id_ = cu_ue_f1ap_id;
  if (cu_ue_f1ap_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.UeIdentity.cu_ue_f1ap_id)
}
inline ::onos::uenib::CuUeF1apID* UeIdentity::release_cu_ue_f1ap_id() {
  
  ::onos::uenib::CuUeF1apID* temp = cu_ue_f1ap_id_;
  cu_ue_f1ap_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::CuUeF1apID* UeIdentity::unsafe_arena_release_cu_ue_f1ap_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.UeIdentity.cu_ue_f1ap_id)
  
  ::onos::uenib::CuUeF1apID* temp = cu_ue_f1ap_id_;
  cu_ue_f1ap_id_ = nullptr;
  return temp;
}
inline ::onos::uenib::CuUeF1apID* UeIdentity::_internal_mutable_cu_ue_f1ap_id() {
  
  if (cu_ue_f1ap_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::CuUeF1apID>(GetArenaForAllocation());
    cu_ue_f1ap_id_ = p;
  }
  return cu_ue_f1ap_id_;
}
inline ::onos::uenib::CuUeF1apID* UeIdentity::mutable_cu_ue_f1ap_id() {
  ::onos::uenib::CuUeF1apID* _msg = _internal_mutable_cu_ue_f1ap_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.UeIdentity.cu_ue_f1ap_id)
  return _msg;
}
inline void UeIdentity::set_allocated_cu_ue_f1ap_id(::onos::uenib::CuUeF1apID* cu_ue_f1ap_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete cu_ue_f1ap_id_;
  }
  if (cu_ue_f1ap_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::CuUeF1apID>::GetOwningArena(cu_ue_f1ap_id);
    if (message_arena != submessage_arena) {
      cu_ue_f1ap_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cu_ue_f1ap_id, submessage_arena);
    }
    
  } else {
    
  }
  cu_ue_f1ap_id_ = cu_ue_f1ap_id;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.UeIdentity.cu_ue_f1ap_id)
}

// .onos.uenib.RanUeNgapID ran_ue_ngap_id = 3 [(.gogoproto.customname) = "RANUeNgapID"];
inline bool UeIdentity::_internal_has_ran_ue_ngap_id() const {
  return this != internal_default_instance() && ran_ue_ngap_id_ != nullptr;
}
inline bool UeIdentity::has_ran_ue_ngap_id() const {
  return _internal_has_ran_ue_ngap_id();
}
inline void UeIdentity::clear_ran_ue_ngap_id() {
  if (GetArenaForAllocation() == nullptr && ran_ue_ngap_id_ != nullptr) {
    delete ran_ue_ngap_id_;
  }
  ran_ue_ngap_id_ = nullptr;
}
inline const ::onos::uenib::RanUeNgapID& UeIdentity::_internal_ran_ue_ngap_id() const {
  const ::onos::uenib::RanUeNgapID* p = ran_ue_ngap_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::RanUeNgapID&>(
      ::onos::uenib::_RanUeNgapID_default_instance_);
}
inline const ::onos::uenib::RanUeNgapID& UeIdentity::ran_ue_ngap_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.UeIdentity.ran_ue_ngap_id)
  return _internal_ran_ue_ngap_id();
}
inline void UeIdentity::unsafe_arena_set_allocated_ran_ue_ngap_id(
    ::onos::uenib::RanUeNgapID* ran_ue_ngap_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ran_ue_ngap_id_);
  }
  ran_ue_ngap_id_ = ran_ue_ngap_id;
  if (ran_ue_ngap_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.UeIdentity.ran_ue_ngap_id)
}
inline ::onos::uenib::RanUeNgapID* UeIdentity::release_ran_ue_ngap_id() {
  
  ::onos::uenib::RanUeNgapID* temp = ran_ue_ngap_id_;
  ran_ue_ngap_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::RanUeNgapID* UeIdentity::unsafe_arena_release_ran_ue_ngap_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.UeIdentity.ran_ue_ngap_id)
  
  ::onos::uenib::RanUeNgapID* temp = ran_ue_ngap_id_;
  ran_ue_ngap_id_ = nullptr;
  return temp;
}
inline ::onos::uenib::RanUeNgapID* UeIdentity::_internal_mutable_ran_ue_ngap_id() {
  
  if (ran_ue_ngap_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::RanUeNgapID>(GetArenaForAllocation());
    ran_ue_ngap_id_ = p;
  }
  return ran_ue_ngap_id_;
}
inline ::onos::uenib::RanUeNgapID* UeIdentity::mutable_ran_ue_ngap_id() {
  ::onos::uenib::RanUeNgapID* _msg = _internal_mutable_ran_ue_ngap_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.UeIdentity.ran_ue_ngap_id)
  return _msg;
}
inline void UeIdentity::set_allocated_ran_ue_ngap_id(::onos::uenib::RanUeNgapID* ran_ue_ngap_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete ran_ue_ngap_id_;
  }
  if (ran_ue_ngap_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::RanUeNgapID>::GetOwningArena(ran_ue_ngap_id);
    if (message_arena != submessage_arena) {
      ran_ue_ngap_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ran_ue_ngap_id, submessage_arena);
    }
    
  } else {
    
  }
  ran_ue_ngap_id_ = ran_ue_ngap_id;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.UeIdentity.ran_ue_ngap_id)
}

// .onos.uenib.EnbUeS1apID enb_ue_s1ap_id = 4 [(.gogoproto.customname) = "EnbUeS1apID"];
inline bool UeIdentity::_internal_has_enb_ue_s1ap_id() const {
  return this != internal_default_instance() && enb_ue_s1ap_id_ != nullptr;
}
inline bool UeIdentity::has_enb_ue_s1ap_id() const {
  return _internal_has_enb_ue_s1ap_id();
}
inline void UeIdentity::clear_enb_ue_s1ap_id() {
  if (GetArenaForAllocation() == nullptr && enb_ue_s1ap_id_ != nullptr) {
    delete enb_ue_s1ap_id_;
  }
  enb_ue_s1ap_id_ = nullptr;
}
inline const ::onos::uenib::EnbUeS1apID& UeIdentity::_internal_enb_ue_s1ap_id() const {
  const ::onos::uenib::EnbUeS1apID* p = enb_ue_s1ap_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::EnbUeS1apID&>(
      ::onos::uenib::_EnbUeS1apID_default_instance_);
}
inline const ::onos::uenib::EnbUeS1apID& UeIdentity::enb_ue_s1ap_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.UeIdentity.enb_ue_s1ap_id)
  return _internal_enb_ue_s1ap_id();
}
inline void UeIdentity::unsafe_arena_set_allocated_enb_ue_s1ap_id(
    ::onos::uenib::EnbUeS1apID* enb_ue_s1ap_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(enb_ue_s1ap_id_);
  }
  enb_ue_s1ap_id_ = enb_ue_s1ap_id;
  if (enb_ue_s1ap_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.UeIdentity.enb_ue_s1ap_id)
}
inline ::onos::uenib::EnbUeS1apID* UeIdentity::release_enb_ue_s1ap_id() {
  
  ::onos::uenib::EnbUeS1apID* temp = enb_ue_s1ap_id_;
  enb_ue_s1ap_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::EnbUeS1apID* UeIdentity::unsafe_arena_release_enb_ue_s1ap_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.UeIdentity.enb_ue_s1ap_id)
  
  ::onos::uenib::EnbUeS1apID* temp = enb_ue_s1ap_id_;
  enb_ue_s1ap_id_ = nullptr;
  return temp;
}
inline ::onos::uenib::EnbUeS1apID* UeIdentity::_internal_mutable_enb_ue_s1ap_id() {
  
  if (enb_ue_s1ap_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::EnbUeS1apID>(GetArenaForAllocation());
    enb_ue_s1ap_id_ = p;
  }
  return enb_ue_s1ap_id_;
}
inline ::onos::uenib::EnbUeS1apID* UeIdentity::mutable_enb_ue_s1ap_id() {
  ::onos::uenib::EnbUeS1apID* _msg = _internal_mutable_enb_ue_s1ap_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.UeIdentity.enb_ue_s1ap_id)
  return _msg;
}
inline void UeIdentity::set_allocated_enb_ue_s1ap_id(::onos::uenib::EnbUeS1apID* enb_ue_s1ap_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete enb_ue_s1ap_id_;
  }
  if (enb_ue_s1ap_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::EnbUeS1apID>::GetOwningArena(enb_ue_s1ap_id);
    if (message_arena != submessage_arena) {
      enb_ue_s1ap_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, enb_ue_s1ap_id, submessage_arena);
    }
    
  } else {
    
  }
  enb_ue_s1ap_id_ = enb_ue_s1ap_id;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.UeIdentity.enb_ue_s1ap_id)
}

// .onos.uenib.AmfUeNgapID amf_ue_ngap_id = 5 [(.gogoproto.customname) = "AMFUeNgapID"];
inline bool UeIdentity::_internal_has_amf_ue_ngap_id() const {
  return this != internal_default_instance() && amf_ue_ngap_id_ != nullptr;
}
inline bool UeIdentity::has_amf_ue_ngap_id() const {
  return _internal_has_amf_ue_ngap_id();
}
inline void UeIdentity::clear_amf_ue_ngap_id() {
  if (GetArenaForAllocation() == nullptr && amf_ue_ngap_id_ != nullptr) {
    delete amf_ue_ngap_id_;
  }
  amf_ue_ngap_id_ = nullptr;
}
inline const ::onos::uenib::AmfUeNgapID& UeIdentity::_internal_amf_ue_ngap_id() const {
  const ::onos::uenib::AmfUeNgapID* p = amf_ue_ngap_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::AmfUeNgapID&>(
      ::onos::uenib::_AmfUeNgapID_default_instance_);
}
inline const ::onos::uenib::AmfUeNgapID& UeIdentity::amf_ue_ngap_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.UeIdentity.amf_ue_ngap_id)
  return _internal_amf_ue_ngap_id();
}
inline void UeIdentity::unsafe_arena_set_allocated_amf_ue_ngap_id(
    ::onos::uenib::AmfUeNgapID* amf_ue_ngap_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(amf_ue_ngap_id_);
  }
  amf_ue_ngap_id_ = amf_ue_ngap_id;
  if (amf_ue_ngap_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.UeIdentity.amf_ue_ngap_id)
}
inline ::onos::uenib::AmfUeNgapID* UeIdentity::release_amf_ue_ngap_id() {
  
  ::onos::uenib::AmfUeNgapID* temp = amf_ue_ngap_id_;
  amf_ue_ngap_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::AmfUeNgapID* UeIdentity::unsafe_arena_release_amf_ue_ngap_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.UeIdentity.amf_ue_ngap_id)
  
  ::onos::uenib::AmfUeNgapID* temp = amf_ue_ngap_id_;
  amf_ue_ngap_id_ = nullptr;
  return temp;
}
inline ::onos::uenib::AmfUeNgapID* UeIdentity::_internal_mutable_amf_ue_ngap_id() {
  
  if (amf_ue_ngap_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::AmfUeNgapID>(GetArenaForAllocation());
    amf_ue_ngap_id_ = p;
  }
  return amf_ue_ngap_id_;
}
inline ::onos::uenib::AmfUeNgapID* UeIdentity::mutable_amf_ue_ngap_id() {
  ::onos::uenib::AmfUeNgapID* _msg = _internal_mutable_amf_ue_ngap_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.UeIdentity.amf_ue_ngap_id)
  return _msg;
}
inline void UeIdentity::set_allocated_amf_ue_ngap_id(::onos::uenib::AmfUeNgapID* amf_ue_ngap_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete amf_ue_ngap_id_;
  }
  if (amf_ue_ngap_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::AmfUeNgapID>::GetOwningArena(amf_ue_ngap_id);
    if (message_arena != submessage_arena) {
      amf_ue_ngap_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, amf_ue_ngap_id, submessage_arena);
    }
    
  } else {
    
  }
  amf_ue_ngap_id_ = amf_ue_ngap_id;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.UeIdentity.amf_ue_ngap_id)
}

// .onos.uenib.UeIdType preferred_id_type = 6 [(.gogoproto.customname) = "PreferredIDType"];
inline void UeIdentity::clear_preferred_id_type() {
  preferred_id_type_ = 0;
}
inline ::onos::uenib::UeIdType UeIdentity::_internal_preferred_id_type() const {
  return static_cast< ::onos::uenib::UeIdType >(preferred_id_type_);
}
inline ::onos::uenib::UeIdType UeIdentity::preferred_id_type() const {
  // @@protoc_insertion_point(field_get:onos.uenib.UeIdentity.preferred_id_type)
  return _internal_preferred_id_type();
}
inline void UeIdentity::_internal_set_preferred_id_type(::onos::uenib::UeIdType value) {
  
  preferred_id_type_ = value;
}
inline void UeIdentity::set_preferred_id_type(::onos::uenib::UeIdType value) {
  _internal_set_preferred_id_type(value);
  // @@protoc_insertion_point(field_set:onos.uenib.UeIdentity.preferred_id_type)
}

// -------------------------------------------------------------------

// BearerId

// .onos.uenib.DrbId drb_id = 1 [json_name = "drbID"];
inline bool BearerId::_internal_has_drb_id() const {
  return bearer_id_case() == kDrbId;
}
inline bool BearerId::has_drb_id() const {
  return _internal_has_drb_id();
}
inline void BearerId::set_has_drb_id() {
  _oneof_case_[0] = kDrbId;
}
inline void BearerId::clear_drb_id() {
  if (_internal_has_drb_id()) {
    if (GetArenaForAllocation() == nullptr) {
      delete bearer_id_.drb_id_;
    }
    clear_has_bearer_id();
  }
}
inline ::onos::uenib::DrbId* BearerId::release_drb_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.BearerId.drb_id)
  if (_internal_has_drb_id()) {
    clear_has_bearer_id();
      ::onos::uenib::DrbId* temp = bearer_id_.drb_id_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    bearer_id_.drb_id_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onos::uenib::DrbId& BearerId::_internal_drb_id() const {
  return _internal_has_drb_id()
      ? *bearer_id_.drb_id_
      : reinterpret_cast< ::onos::uenib::DrbId&>(::onos::uenib::_DrbId_default_instance_);
}
inline const ::onos::uenib::DrbId& BearerId::drb_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.BearerId.drb_id)
  return _internal_drb_id();
}
inline ::onos::uenib::DrbId* BearerId::unsafe_arena_release_drb_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onos.uenib.BearerId.drb_id)
  if (_internal_has_drb_id()) {
    clear_has_bearer_id();
    ::onos::uenib::DrbId* temp = bearer_id_.drb_id_;
    bearer_id_.drb_id_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BearerId::unsafe_arena_set_allocated_drb_id(::onos::uenib::DrbId* drb_id) {
  clear_bearer_id();
  if (drb_id) {
    set_has_drb_id();
    bearer_id_.drb_id_ = drb_id;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.BearerId.drb_id)
}
inline ::onos::uenib::DrbId* BearerId::_internal_mutable_drb_id() {
  if (!_internal_has_drb_id()) {
    clear_bearer_id();
    set_has_drb_id();
    bearer_id_.drb_id_ = CreateMaybeMessage< ::onos::uenib::DrbId >(GetArenaForAllocation());
  }
  return bearer_id_.drb_id_;
}
inline ::onos::uenib::DrbId* BearerId::mutable_drb_id() {
  ::onos::uenib::DrbId* _msg = _internal_mutable_drb_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.BearerId.drb_id)
  return _msg;
}

inline bool BearerId::has_bearer_id() const {
  return bearer_id_case() != BEARER_ID_NOT_SET;
}
inline void BearerId::clear_has_bearer_id() {
  _oneof_case_[0] = BEARER_ID_NOT_SET;
}
inline BearerId::BearerIdCase BearerId::bearer_id_case() const {
  return BearerId::BearerIdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DrbId

// .onos.uenib.FourGDrbId four_gdrb_id = 1 [json_name = "fourGDrbID"];
inline bool DrbId::_internal_has_four_gdrb_id() const {
  return drb_id_case() == kFourGdrbId;
}
inline bool DrbId::has_four_gdrb_id() const {
  return _internal_has_four_gdrb_id();
}
inline void DrbId::set_has_four_gdrb_id() {
  _oneof_case_[0] = kFourGdrbId;
}
inline void DrbId::clear_four_gdrb_id() {
  if (_internal_has_four_gdrb_id()) {
    if (GetArenaForAllocation() == nullptr) {
      delete drb_id_.four_gdrb_id_;
    }
    clear_has_drb_id();
  }
}
inline ::onos::uenib::FourGDrbId* DrbId::release_four_gdrb_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.DrbId.four_gdrb_id)
  if (_internal_has_four_gdrb_id()) {
    clear_has_drb_id();
      ::onos::uenib::FourGDrbId* temp = drb_id_.four_gdrb_id_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    drb_id_.four_gdrb_id_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onos::uenib::FourGDrbId& DrbId::_internal_four_gdrb_id() const {
  return _internal_has_four_gdrb_id()
      ? *drb_id_.four_gdrb_id_
      : reinterpret_cast< ::onos::uenib::FourGDrbId&>(::onos::uenib::_FourGDrbId_default_instance_);
}
inline const ::onos::uenib::FourGDrbId& DrbId::four_gdrb_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.DrbId.four_gdrb_id)
  return _internal_four_gdrb_id();
}
inline ::onos::uenib::FourGDrbId* DrbId::unsafe_arena_release_four_gdrb_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onos.uenib.DrbId.four_gdrb_id)
  if (_internal_has_four_gdrb_id()) {
    clear_has_drb_id();
    ::onos::uenib::FourGDrbId* temp = drb_id_.four_gdrb_id_;
    drb_id_.four_gdrb_id_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DrbId::unsafe_arena_set_allocated_four_gdrb_id(::onos::uenib::FourGDrbId* four_gdrb_id) {
  clear_drb_id();
  if (four_gdrb_id) {
    set_has_four_gdrb_id();
    drb_id_.four_gdrb_id_ = four_gdrb_id;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.DrbId.four_gdrb_id)
}
inline ::onos::uenib::FourGDrbId* DrbId::_internal_mutable_four_gdrb_id() {
  if (!_internal_has_four_gdrb_id()) {
    clear_drb_id();
    set_has_four_gdrb_id();
    drb_id_.four_gdrb_id_ = CreateMaybeMessage< ::onos::uenib::FourGDrbId >(GetArenaForAllocation());
  }
  return drb_id_.four_gdrb_id_;
}
inline ::onos::uenib::FourGDrbId* DrbId::mutable_four_gdrb_id() {
  ::onos::uenib::FourGDrbId* _msg = _internal_mutable_four_gdrb_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.DrbId.four_gdrb_id)
  return _msg;
}

// .onos.uenib.FiveGDrbId five_gdrb_id = 2 [json_name = "fiveGDrbID"];
inline bool DrbId::_internal_has_five_gdrb_id() const {
  return drb_id_case() == kFiveGdrbId;
}
inline bool DrbId::has_five_gdrb_id() const {
  return _internal_has_five_gdrb_id();
}
inline void DrbId::set_has_five_gdrb_id() {
  _oneof_case_[0] = kFiveGdrbId;
}
inline void DrbId::clear_five_gdrb_id() {
  if (_internal_has_five_gdrb_id()) {
    if (GetArenaForAllocation() == nullptr) {
      delete drb_id_.five_gdrb_id_;
    }
    clear_has_drb_id();
  }
}
inline ::onos::uenib::FiveGDrbId* DrbId::release_five_gdrb_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.DrbId.five_gdrb_id)
  if (_internal_has_five_gdrb_id()) {
    clear_has_drb_id();
      ::onos::uenib::FiveGDrbId* temp = drb_id_.five_gdrb_id_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    drb_id_.five_gdrb_id_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onos::uenib::FiveGDrbId& DrbId::_internal_five_gdrb_id() const {
  return _internal_has_five_gdrb_id()
      ? *drb_id_.five_gdrb_id_
      : reinterpret_cast< ::onos::uenib::FiveGDrbId&>(::onos::uenib::_FiveGDrbId_default_instance_);
}
inline const ::onos::uenib::FiveGDrbId& DrbId::five_gdrb_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.DrbId.five_gdrb_id)
  return _internal_five_gdrb_id();
}
inline ::onos::uenib::FiveGDrbId* DrbId::unsafe_arena_release_five_gdrb_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onos.uenib.DrbId.five_gdrb_id)
  if (_internal_has_five_gdrb_id()) {
    clear_has_drb_id();
    ::onos::uenib::FiveGDrbId* temp = drb_id_.five_gdrb_id_;
    drb_id_.five_gdrb_id_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DrbId::unsafe_arena_set_allocated_five_gdrb_id(::onos::uenib::FiveGDrbId* five_gdrb_id) {
  clear_drb_id();
  if (five_gdrb_id) {
    set_has_five_gdrb_id();
    drb_id_.five_gdrb_id_ = five_gdrb_id;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.DrbId.five_gdrb_id)
}
inline ::onos::uenib::FiveGDrbId* DrbId::_internal_mutable_five_gdrb_id() {
  if (!_internal_has_five_gdrb_id()) {
    clear_drb_id();
    set_has_five_gdrb_id();
    drb_id_.five_gdrb_id_ = CreateMaybeMessage< ::onos::uenib::FiveGDrbId >(GetArenaForAllocation());
  }
  return drb_id_.five_gdrb_id_;
}
inline ::onos::uenib::FiveGDrbId* DrbId::mutable_five_gdrb_id() {
  ::onos::uenib::FiveGDrbId* _msg = _internal_mutable_five_gdrb_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.DrbId.five_gdrb_id)
  return _msg;
}

inline bool DrbId::has_drb_id() const {
  return drb_id_case() != DRB_ID_NOT_SET;
}
inline void DrbId::clear_has_drb_id() {
  _oneof_case_[0] = DRB_ID_NOT_SET;
}
inline DrbId::DrbIdCase DrbId::drb_id_case() const {
  return DrbId::DrbIdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// FiveGDrbId

// int32 value = 1;
inline void FiveGDrbId::clear_value() {
  value_ = 0;
}
inline int32_t FiveGDrbId::_internal_value() const {
  return value_;
}
inline int32_t FiveGDrbId::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.FiveGDrbId.value)
  return _internal_value();
}
inline void FiveGDrbId::_internal_set_value(int32_t value) {
  
  value_ = value;
}
inline void FiveGDrbId::set_value(int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.FiveGDrbId.value)
}

// .onos.uenib.Qfi qfi = 2;
inline bool FiveGDrbId::_internal_has_qfi() const {
  return this != internal_default_instance() && qfi_ != nullptr;
}
inline bool FiveGDrbId::has_qfi() const {
  return _internal_has_qfi();
}
inline void FiveGDrbId::clear_qfi() {
  if (GetArenaForAllocation() == nullptr && qfi_ != nullptr) {
    delete qfi_;
  }
  qfi_ = nullptr;
}
inline const ::onos::uenib::Qfi& FiveGDrbId::_internal_qfi() const {
  const ::onos::uenib::Qfi* p = qfi_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::Qfi&>(
      ::onos::uenib::_Qfi_default_instance_);
}
inline const ::onos::uenib::Qfi& FiveGDrbId::qfi() const {
  // @@protoc_insertion_point(field_get:onos.uenib.FiveGDrbId.qfi)
  return _internal_qfi();
}
inline void FiveGDrbId::unsafe_arena_set_allocated_qfi(
    ::onos::uenib::Qfi* qfi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(qfi_);
  }
  qfi_ = qfi;
  if (qfi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.FiveGDrbId.qfi)
}
inline ::onos::uenib::Qfi* FiveGDrbId::release_qfi() {
  
  ::onos::uenib::Qfi* temp = qfi_;
  qfi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::Qfi* FiveGDrbId::unsafe_arena_release_qfi() {
  // @@protoc_insertion_point(field_release:onos.uenib.FiveGDrbId.qfi)
  
  ::onos::uenib::Qfi* temp = qfi_;
  qfi_ = nullptr;
  return temp;
}
inline ::onos::uenib::Qfi* FiveGDrbId::_internal_mutable_qfi() {
  
  if (qfi_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::Qfi>(GetArenaForAllocation());
    qfi_ = p;
  }
  return qfi_;
}
inline ::onos::uenib::Qfi* FiveGDrbId::mutable_qfi() {
  ::onos::uenib::Qfi* _msg = _internal_mutable_qfi();
  // @@protoc_insertion_point(field_mutable:onos.uenib.FiveGDrbId.qfi)
  return _msg;
}
inline void FiveGDrbId::set_allocated_qfi(::onos::uenib::Qfi* qfi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete qfi_;
  }
  if (qfi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::Qfi>::GetOwningArena(qfi);
    if (message_arena != submessage_arena) {
      qfi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, qfi, submessage_arena);
    }
    
  } else {
    
  }
  qfi_ = qfi;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.FiveGDrbId.qfi)
}

// repeated .onos.uenib.QoSflowLevelParameters flows_map_to_drb = 3;
inline int FiveGDrbId::_internal_flows_map_to_drb_size() const {
  return flows_map_to_drb_.size();
}
inline int FiveGDrbId::flows_map_to_drb_size() const {
  return _internal_flows_map_to_drb_size();
}
inline void FiveGDrbId::clear_flows_map_to_drb() {
  flows_map_to_drb_.Clear();
}
inline ::onos::uenib::QoSflowLevelParameters* FiveGDrbId::mutable_flows_map_to_drb(int index) {
  // @@protoc_insertion_point(field_mutable:onos.uenib.FiveGDrbId.flows_map_to_drb)
  return flows_map_to_drb_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::QoSflowLevelParameters >*
FiveGDrbId::mutable_flows_map_to_drb() {
  // @@protoc_insertion_point(field_mutable_list:onos.uenib.FiveGDrbId.flows_map_to_drb)
  return &flows_map_to_drb_;
}
inline const ::onos::uenib::QoSflowLevelParameters& FiveGDrbId::_internal_flows_map_to_drb(int index) const {
  return flows_map_to_drb_.Get(index);
}
inline const ::onos::uenib::QoSflowLevelParameters& FiveGDrbId::flows_map_to_drb(int index) const {
  // @@protoc_insertion_point(field_get:onos.uenib.FiveGDrbId.flows_map_to_drb)
  return _internal_flows_map_to_drb(index);
}
inline ::onos::uenib::QoSflowLevelParameters* FiveGDrbId::_internal_add_flows_map_to_drb() {
  return flows_map_to_drb_.Add();
}
inline ::onos::uenib::QoSflowLevelParameters* FiveGDrbId::add_flows_map_to_drb() {
  ::onos::uenib::QoSflowLevelParameters* _add = _internal_add_flows_map_to_drb();
  // @@protoc_insertion_point(field_add:onos.uenib.FiveGDrbId.flows_map_to_drb)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::QoSflowLevelParameters >&
FiveGDrbId::flows_map_to_drb() const {
  // @@protoc_insertion_point(field_list:onos.uenib.FiveGDrbId.flows_map_to_drb)
  return flows_map_to_drb_;
}

// -------------------------------------------------------------------

// Qfi

// int32 value = 1;
inline void Qfi::clear_value() {
  value_ = 0;
}
inline int32_t Qfi::_internal_value() const {
  return value_;
}
inline int32_t Qfi::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.Qfi.value)
  return _internal_value();
}
inline void Qfi::_internal_set_value(int32_t value) {
  
  value_ = value;
}
inline void Qfi::set_value(int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.Qfi.value)
}

// -------------------------------------------------------------------

// QoSflowLevelParameters

// .onos.uenib.DynamicFiveQi dynamic_five_qi = 1;
inline bool QoSflowLevelParameters::_internal_has_dynamic_five_qi() const {
  return qos_flow_level_parameters_case() == kDynamicFiveQi;
}
inline bool QoSflowLevelParameters::has_dynamic_five_qi() const {
  return _internal_has_dynamic_five_qi();
}
inline void QoSflowLevelParameters::set_has_dynamic_five_qi() {
  _oneof_case_[0] = kDynamicFiveQi;
}
inline void QoSflowLevelParameters::clear_dynamic_five_qi() {
  if (_internal_has_dynamic_five_qi()) {
    if (GetArenaForAllocation() == nullptr) {
      delete qos_flow_level_parameters_.dynamic_five_qi_;
    }
    clear_has_qos_flow_level_parameters();
  }
}
inline ::onos::uenib::DynamicFiveQi* QoSflowLevelParameters::release_dynamic_five_qi() {
  // @@protoc_insertion_point(field_release:onos.uenib.QoSflowLevelParameters.dynamic_five_qi)
  if (_internal_has_dynamic_five_qi()) {
    clear_has_qos_flow_level_parameters();
      ::onos::uenib::DynamicFiveQi* temp = qos_flow_level_parameters_.dynamic_five_qi_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    qos_flow_level_parameters_.dynamic_five_qi_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onos::uenib::DynamicFiveQi& QoSflowLevelParameters::_internal_dynamic_five_qi() const {
  return _internal_has_dynamic_five_qi()
      ? *qos_flow_level_parameters_.dynamic_five_qi_
      : reinterpret_cast< ::onos::uenib::DynamicFiveQi&>(::onos::uenib::_DynamicFiveQi_default_instance_);
}
inline const ::onos::uenib::DynamicFiveQi& QoSflowLevelParameters::dynamic_five_qi() const {
  // @@protoc_insertion_point(field_get:onos.uenib.QoSflowLevelParameters.dynamic_five_qi)
  return _internal_dynamic_five_qi();
}
inline ::onos::uenib::DynamicFiveQi* QoSflowLevelParameters::unsafe_arena_release_dynamic_five_qi() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onos.uenib.QoSflowLevelParameters.dynamic_five_qi)
  if (_internal_has_dynamic_five_qi()) {
    clear_has_qos_flow_level_parameters();
    ::onos::uenib::DynamicFiveQi* temp = qos_flow_level_parameters_.dynamic_five_qi_;
    qos_flow_level_parameters_.dynamic_five_qi_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QoSflowLevelParameters::unsafe_arena_set_allocated_dynamic_five_qi(::onos::uenib::DynamicFiveQi* dynamic_five_qi) {
  clear_qos_flow_level_parameters();
  if (dynamic_five_qi) {
    set_has_dynamic_five_qi();
    qos_flow_level_parameters_.dynamic_five_qi_ = dynamic_five_qi;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.QoSflowLevelParameters.dynamic_five_qi)
}
inline ::onos::uenib::DynamicFiveQi* QoSflowLevelParameters::_internal_mutable_dynamic_five_qi() {
  if (!_internal_has_dynamic_five_qi()) {
    clear_qos_flow_level_parameters();
    set_has_dynamic_five_qi();
    qos_flow_level_parameters_.dynamic_five_qi_ = CreateMaybeMessage< ::onos::uenib::DynamicFiveQi >(GetArenaForAllocation());
  }
  return qos_flow_level_parameters_.dynamic_five_qi_;
}
inline ::onos::uenib::DynamicFiveQi* QoSflowLevelParameters::mutable_dynamic_five_qi() {
  ::onos::uenib::DynamicFiveQi* _msg = _internal_mutable_dynamic_five_qi();
  // @@protoc_insertion_point(field_mutable:onos.uenib.QoSflowLevelParameters.dynamic_five_qi)
  return _msg;
}

// .onos.uenib.NonDynamicFiveQi non_dynamic_five_qi = 2;
inline bool QoSflowLevelParameters::_internal_has_non_dynamic_five_qi() const {
  return qos_flow_level_parameters_case() == kNonDynamicFiveQi;
}
inline bool QoSflowLevelParameters::has_non_dynamic_five_qi() const {
  return _internal_has_non_dynamic_five_qi();
}
inline void QoSflowLevelParameters::set_has_non_dynamic_five_qi() {
  _oneof_case_[0] = kNonDynamicFiveQi;
}
inline void QoSflowLevelParameters::clear_non_dynamic_five_qi() {
  if (_internal_has_non_dynamic_five_qi()) {
    if (GetArenaForAllocation() == nullptr) {
      delete qos_flow_level_parameters_.non_dynamic_five_qi_;
    }
    clear_has_qos_flow_level_parameters();
  }
}
inline ::onos::uenib::NonDynamicFiveQi* QoSflowLevelParameters::release_non_dynamic_five_qi() {
  // @@protoc_insertion_point(field_release:onos.uenib.QoSflowLevelParameters.non_dynamic_five_qi)
  if (_internal_has_non_dynamic_five_qi()) {
    clear_has_qos_flow_level_parameters();
      ::onos::uenib::NonDynamicFiveQi* temp = qos_flow_level_parameters_.non_dynamic_five_qi_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    qos_flow_level_parameters_.non_dynamic_five_qi_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::onos::uenib::NonDynamicFiveQi& QoSflowLevelParameters::_internal_non_dynamic_five_qi() const {
  return _internal_has_non_dynamic_five_qi()
      ? *qos_flow_level_parameters_.non_dynamic_five_qi_
      : reinterpret_cast< ::onos::uenib::NonDynamicFiveQi&>(::onos::uenib::_NonDynamicFiveQi_default_instance_);
}
inline const ::onos::uenib::NonDynamicFiveQi& QoSflowLevelParameters::non_dynamic_five_qi() const {
  // @@protoc_insertion_point(field_get:onos.uenib.QoSflowLevelParameters.non_dynamic_five_qi)
  return _internal_non_dynamic_five_qi();
}
inline ::onos::uenib::NonDynamicFiveQi* QoSflowLevelParameters::unsafe_arena_release_non_dynamic_five_qi() {
  // @@protoc_insertion_point(field_unsafe_arena_release:onos.uenib.QoSflowLevelParameters.non_dynamic_five_qi)
  if (_internal_has_non_dynamic_five_qi()) {
    clear_has_qos_flow_level_parameters();
    ::onos::uenib::NonDynamicFiveQi* temp = qos_flow_level_parameters_.non_dynamic_five_qi_;
    qos_flow_level_parameters_.non_dynamic_five_qi_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void QoSflowLevelParameters::unsafe_arena_set_allocated_non_dynamic_five_qi(::onos::uenib::NonDynamicFiveQi* non_dynamic_five_qi) {
  clear_qos_flow_level_parameters();
  if (non_dynamic_five_qi) {
    set_has_non_dynamic_five_qi();
    qos_flow_level_parameters_.non_dynamic_five_qi_ = non_dynamic_five_qi;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.QoSflowLevelParameters.non_dynamic_five_qi)
}
inline ::onos::uenib::NonDynamicFiveQi* QoSflowLevelParameters::_internal_mutable_non_dynamic_five_qi() {
  if (!_internal_has_non_dynamic_five_qi()) {
    clear_qos_flow_level_parameters();
    set_has_non_dynamic_five_qi();
    qos_flow_level_parameters_.non_dynamic_five_qi_ = CreateMaybeMessage< ::onos::uenib::NonDynamicFiveQi >(GetArenaForAllocation());
  }
  return qos_flow_level_parameters_.non_dynamic_five_qi_;
}
inline ::onos::uenib::NonDynamicFiveQi* QoSflowLevelParameters::mutable_non_dynamic_five_qi() {
  ::onos::uenib::NonDynamicFiveQi* _msg = _internal_mutable_non_dynamic_five_qi();
  // @@protoc_insertion_point(field_mutable:onos.uenib.QoSflowLevelParameters.non_dynamic_five_qi)
  return _msg;
}

inline bool QoSflowLevelParameters::has_qos_flow_level_parameters() const {
  return qos_flow_level_parameters_case() != QOS_FLOW_LEVEL_PARAMETERS_NOT_SET;
}
inline void QoSflowLevelParameters::clear_has_qos_flow_level_parameters() {
  _oneof_case_[0] = QOS_FLOW_LEVEL_PARAMETERS_NOT_SET;
}
inline QoSflowLevelParameters::QosFlowLevelParametersCase QoSflowLevelParameters::qos_flow_level_parameters_case() const {
  return QoSflowLevelParameters::QosFlowLevelParametersCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// DynamicFiveQi

// int32 priority_level = 1;
inline void DynamicFiveQi::clear_priority_level() {
  priority_level_ = 0;
}
inline int32_t DynamicFiveQi::_internal_priority_level() const {
  return priority_level_;
}
inline int32_t DynamicFiveQi::priority_level() const {
  // @@protoc_insertion_point(field_get:onos.uenib.DynamicFiveQi.priority_level)
  return _internal_priority_level();
}
inline void DynamicFiveQi::_internal_set_priority_level(int32_t value) {
  
  priority_level_ = value;
}
inline void DynamicFiveQi::set_priority_level(int32_t value) {
  _internal_set_priority_level(value);
  // @@protoc_insertion_point(field_set:onos.uenib.DynamicFiveQi.priority_level)
}

// int32 packet_delay_budge = 2;
inline void DynamicFiveQi::clear_packet_delay_budge() {
  packet_delay_budge_ = 0;
}
inline int32_t DynamicFiveQi::_internal_packet_delay_budge() const {
  return packet_delay_budge_;
}
inline int32_t DynamicFiveQi::packet_delay_budge() const {
  // @@protoc_insertion_point(field_get:onos.uenib.DynamicFiveQi.packet_delay_budge)
  return _internal_packet_delay_budge();
}
inline void DynamicFiveQi::_internal_set_packet_delay_budge(int32_t value) {
  
  packet_delay_budge_ = value;
}
inline void DynamicFiveQi::set_packet_delay_budge(int32_t value) {
  _internal_set_packet_delay_budge(value);
  // @@protoc_insertion_point(field_set:onos.uenib.DynamicFiveQi.packet_delay_budge)
}

// int32 packet_error_rate = 3;
inline void DynamicFiveQi::clear_packet_error_rate() {
  packet_error_rate_ = 0;
}
inline int32_t DynamicFiveQi::_internal_packet_error_rate() const {
  return packet_error_rate_;
}
inline int32_t DynamicFiveQi::packet_error_rate() const {
  // @@protoc_insertion_point(field_get:onos.uenib.DynamicFiveQi.packet_error_rate)
  return _internal_packet_error_rate();
}
inline void DynamicFiveQi::_internal_set_packet_error_rate(int32_t value) {
  
  packet_error_rate_ = value;
}
inline void DynamicFiveQi::set_packet_error_rate(int32_t value) {
  _internal_set_packet_error_rate(value);
  // @@protoc_insertion_point(field_set:onos.uenib.DynamicFiveQi.packet_error_rate)
}

// -------------------------------------------------------------------

// NonDynamicFiveQi

// .onos.uenib.FiveQi five_qi = 1;
inline bool NonDynamicFiveQi::_internal_has_five_qi() const {
  return this != internal_default_instance() && five_qi_ != nullptr;
}
inline bool NonDynamicFiveQi::has_five_qi() const {
  return _internal_has_five_qi();
}
inline void NonDynamicFiveQi::clear_five_qi() {
  if (GetArenaForAllocation() == nullptr && five_qi_ != nullptr) {
    delete five_qi_;
  }
  five_qi_ = nullptr;
}
inline const ::onos::uenib::FiveQi& NonDynamicFiveQi::_internal_five_qi() const {
  const ::onos::uenib::FiveQi* p = five_qi_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::FiveQi&>(
      ::onos::uenib::_FiveQi_default_instance_);
}
inline const ::onos::uenib::FiveQi& NonDynamicFiveQi::five_qi() const {
  // @@protoc_insertion_point(field_get:onos.uenib.NonDynamicFiveQi.five_qi)
  return _internal_five_qi();
}
inline void NonDynamicFiveQi::unsafe_arena_set_allocated_five_qi(
    ::onos::uenib::FiveQi* five_qi) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(five_qi_);
  }
  five_qi_ = five_qi;
  if (five_qi) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.NonDynamicFiveQi.five_qi)
}
inline ::onos::uenib::FiveQi* NonDynamicFiveQi::release_five_qi() {
  
  ::onos::uenib::FiveQi* temp = five_qi_;
  five_qi_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::FiveQi* NonDynamicFiveQi::unsafe_arena_release_five_qi() {
  // @@protoc_insertion_point(field_release:onos.uenib.NonDynamicFiveQi.five_qi)
  
  ::onos::uenib::FiveQi* temp = five_qi_;
  five_qi_ = nullptr;
  return temp;
}
inline ::onos::uenib::FiveQi* NonDynamicFiveQi::_internal_mutable_five_qi() {
  
  if (five_qi_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::FiveQi>(GetArenaForAllocation());
    five_qi_ = p;
  }
  return five_qi_;
}
inline ::onos::uenib::FiveQi* NonDynamicFiveQi::mutable_five_qi() {
  ::onos::uenib::FiveQi* _msg = _internal_mutable_five_qi();
  // @@protoc_insertion_point(field_mutable:onos.uenib.NonDynamicFiveQi.five_qi)
  return _msg;
}
inline void NonDynamicFiveQi::set_allocated_five_qi(::onos::uenib::FiveQi* five_qi) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete five_qi_;
  }
  if (five_qi) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::FiveQi>::GetOwningArena(five_qi);
    if (message_arena != submessage_arena) {
      five_qi = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, five_qi, submessage_arena);
    }
    
  } else {
    
  }
  five_qi_ = five_qi;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.NonDynamicFiveQi.five_qi)
}

// -------------------------------------------------------------------

// FiveQi

// int32 value = 1;
inline void FiveQi::clear_value() {
  value_ = 0;
}
inline int32_t FiveQi::_internal_value() const {
  return value_;
}
inline int32_t FiveQi::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.FiveQi.value)
  return _internal_value();
}
inline void FiveQi::_internal_set_value(int32_t value) {
  
  value_ = value;
}
inline void FiveQi::set_value(int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.FiveQi.value)
}

// -------------------------------------------------------------------

// FourGDrbId

// int32 value = 1;
inline void FourGDrbId::clear_value() {
  value_ = 0;
}
inline int32_t FourGDrbId::_internal_value() const {
  return value_;
}
inline int32_t FourGDrbId::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.FourGDrbId.value)
  return _internal_value();
}
inline void FourGDrbId::_internal_set_value(int32_t value) {
  
  value_ = value;
}
inline void FourGDrbId::set_value(int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.FourGDrbId.value)
}

// .onos.uenib.Qci qci = 2;
inline bool FourGDrbId::_internal_has_qci() const {
  return this != internal_default_instance() && qci_ != nullptr;
}
inline bool FourGDrbId::has_qci() const {
  return _internal_has_qci();
}
inline void FourGDrbId::clear_qci() {
  if (GetArenaForAllocation() == nullptr && qci_ != nullptr) {
    delete qci_;
  }
  qci_ = nullptr;
}
inline const ::onos::uenib::Qci& FourGDrbId::_internal_qci() const {
  const ::onos::uenib::Qci* p = qci_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::Qci&>(
      ::onos::uenib::_Qci_default_instance_);
}
inline const ::onos::uenib::Qci& FourGDrbId::qci() const {
  // @@protoc_insertion_point(field_get:onos.uenib.FourGDrbId.qci)
  return _internal_qci();
}
inline void FourGDrbId::unsafe_arena_set_allocated_qci(
    ::onos::uenib::Qci* qci) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(qci_);
  }
  qci_ = qci;
  if (qci) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.FourGDrbId.qci)
}
inline ::onos::uenib::Qci* FourGDrbId::release_qci() {
  
  ::onos::uenib::Qci* temp = qci_;
  qci_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::Qci* FourGDrbId::unsafe_arena_release_qci() {
  // @@protoc_insertion_point(field_release:onos.uenib.FourGDrbId.qci)
  
  ::onos::uenib::Qci* temp = qci_;
  qci_ = nullptr;
  return temp;
}
inline ::onos::uenib::Qci* FourGDrbId::_internal_mutable_qci() {
  
  if (qci_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::Qci>(GetArenaForAllocation());
    qci_ = p;
  }
  return qci_;
}
inline ::onos::uenib::Qci* FourGDrbId::mutable_qci() {
  ::onos::uenib::Qci* _msg = _internal_mutable_qci();
  // @@protoc_insertion_point(field_mutable:onos.uenib.FourGDrbId.qci)
  return _msg;
}
inline void FourGDrbId::set_allocated_qci(::onos::uenib::Qci* qci) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete qci_;
  }
  if (qci) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::Qci>::GetOwningArena(qci);
    if (message_arena != submessage_arena) {
      qci = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, qci, submessage_arena);
    }
    
  } else {
    
  }
  qci_ = qci;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.FourGDrbId.qci)
}

// -------------------------------------------------------------------

// Qci

// int32 value = 1;
inline void Qci::clear_value() {
  value_ = 0;
}
inline int32_t Qci::_internal_value() const {
  return value_;
}
inline int32_t Qci::value() const {
  // @@protoc_insertion_point(field_get:onos.uenib.Qci.value)
  return _internal_value();
}
inline void Qci::_internal_set_value(int32_t value) {
  
  value_ = value;
}
inline void Qci::set_value(int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:onos.uenib.Qci.value)
}

// -------------------------------------------------------------------

// RsmUeInfo

// string global_ue_id = 1 [(.gogoproto.customname) = "GlobalUeID"];
inline void RsmUeInfo::clear_global_ue_id() {
  global_ue_id_.ClearToEmpty();
}
inline const std::string& RsmUeInfo::global_ue_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RsmUeInfo.global_ue_id)
  return _internal_global_ue_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RsmUeInfo::set_global_ue_id(ArgT0&& arg0, ArgT... args) {
 
 global_ue_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.RsmUeInfo.global_ue_id)
}
inline std::string* RsmUeInfo::mutable_global_ue_id() {
  std::string* _s = _internal_mutable_global_ue_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.RsmUeInfo.global_ue_id)
  return _s;
}
inline const std::string& RsmUeInfo::_internal_global_ue_id() const {
  return global_ue_id_.Get();
}
inline void RsmUeInfo::_internal_set_global_ue_id(const std::string& value) {
  
  global_ue_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RsmUeInfo::_internal_mutable_global_ue_id() {
  
  return global_ue_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RsmUeInfo::release_global_ue_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.RsmUeInfo.global_ue_id)
  return global_ue_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RsmUeInfo::set_allocated_global_ue_id(std::string* global_ue_id) {
  if (global_ue_id != nullptr) {
    
  } else {
    
  }
  global_ue_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), global_ue_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (global_ue_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    global_ue_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.RsmUeInfo.global_ue_id)
}

// .onos.uenib.UeIdentity ue_id_list = 2;
inline bool RsmUeInfo::_internal_has_ue_id_list() const {
  return this != internal_default_instance() && ue_id_list_ != nullptr;
}
inline bool RsmUeInfo::has_ue_id_list() const {
  return _internal_has_ue_id_list();
}
inline void RsmUeInfo::clear_ue_id_list() {
  if (GetArenaForAllocation() == nullptr && ue_id_list_ != nullptr) {
    delete ue_id_list_;
  }
  ue_id_list_ = nullptr;
}
inline const ::onos::uenib::UeIdentity& RsmUeInfo::_internal_ue_id_list() const {
  const ::onos::uenib::UeIdentity* p = ue_id_list_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::UeIdentity&>(
      ::onos::uenib::_UeIdentity_default_instance_);
}
inline const ::onos::uenib::UeIdentity& RsmUeInfo::ue_id_list() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RsmUeInfo.ue_id_list)
  return _internal_ue_id_list();
}
inline void RsmUeInfo::unsafe_arena_set_allocated_ue_id_list(
    ::onos::uenib::UeIdentity* ue_id_list) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ue_id_list_);
  }
  ue_id_list_ = ue_id_list;
  if (ue_id_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.RsmUeInfo.ue_id_list)
}
inline ::onos::uenib::UeIdentity* RsmUeInfo::release_ue_id_list() {
  
  ::onos::uenib::UeIdentity* temp = ue_id_list_;
  ue_id_list_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::UeIdentity* RsmUeInfo::unsafe_arena_release_ue_id_list() {
  // @@protoc_insertion_point(field_release:onos.uenib.RsmUeInfo.ue_id_list)
  
  ::onos::uenib::UeIdentity* temp = ue_id_list_;
  ue_id_list_ = nullptr;
  return temp;
}
inline ::onos::uenib::UeIdentity* RsmUeInfo::_internal_mutable_ue_id_list() {
  
  if (ue_id_list_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::UeIdentity>(GetArenaForAllocation());
    ue_id_list_ = p;
  }
  return ue_id_list_;
}
inline ::onos::uenib::UeIdentity* RsmUeInfo::mutable_ue_id_list() {
  ::onos::uenib::UeIdentity* _msg = _internal_mutable_ue_id_list();
  // @@protoc_insertion_point(field_mutable:onos.uenib.RsmUeInfo.ue_id_list)
  return _msg;
}
inline void RsmUeInfo::set_allocated_ue_id_list(::onos::uenib::UeIdentity* ue_id_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete ue_id_list_;
  }
  if (ue_id_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::UeIdentity>::GetOwningArena(ue_id_list);
    if (message_arena != submessage_arena) {
      ue_id_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ue_id_list, submessage_arena);
    }
    
  } else {
    
  }
  ue_id_list_ = ue_id_list;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.RsmUeInfo.ue_id_list)
}

// repeated .onos.uenib.BearerId bearer_id_list = 3;
inline int RsmUeInfo::_internal_bearer_id_list_size() const {
  return bearer_id_list_.size();
}
inline int RsmUeInfo::bearer_id_list_size() const {
  return _internal_bearer_id_list_size();
}
inline void RsmUeInfo::clear_bearer_id_list() {
  bearer_id_list_.Clear();
}
inline ::onos::uenib::BearerId* RsmUeInfo::mutable_bearer_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:onos.uenib.RsmUeInfo.bearer_id_list)
  return bearer_id_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::BearerId >*
RsmUeInfo::mutable_bearer_id_list() {
  // @@protoc_insertion_point(field_mutable_list:onos.uenib.RsmUeInfo.bearer_id_list)
  return &bearer_id_list_;
}
inline const ::onos::uenib::BearerId& RsmUeInfo::_internal_bearer_id_list(int index) const {
  return bearer_id_list_.Get(index);
}
inline const ::onos::uenib::BearerId& RsmUeInfo::bearer_id_list(int index) const {
  // @@protoc_insertion_point(field_get:onos.uenib.RsmUeInfo.bearer_id_list)
  return _internal_bearer_id_list(index);
}
inline ::onos::uenib::BearerId* RsmUeInfo::_internal_add_bearer_id_list() {
  return bearer_id_list_.Add();
}
inline ::onos::uenib::BearerId* RsmUeInfo::add_bearer_id_list() {
  ::onos::uenib::BearerId* _add = _internal_add_bearer_id_list();
  // @@protoc_insertion_point(field_add:onos.uenib.RsmUeInfo.bearer_id_list)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::BearerId >&
RsmUeInfo::bearer_id_list() const {
  // @@protoc_insertion_point(field_list:onos.uenib.RsmUeInfo.bearer_id_list)
  return bearer_id_list_;
}

// string cell_global_id = 4;
inline void RsmUeInfo::clear_cell_global_id() {
  cell_global_id_.ClearToEmpty();
}
inline const std::string& RsmUeInfo::cell_global_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RsmUeInfo.cell_global_id)
  return _internal_cell_global_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RsmUeInfo::set_cell_global_id(ArgT0&& arg0, ArgT... args) {
 
 cell_global_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.RsmUeInfo.cell_global_id)
}
inline std::string* RsmUeInfo::mutable_cell_global_id() {
  std::string* _s = _internal_mutable_cell_global_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.RsmUeInfo.cell_global_id)
  return _s;
}
inline const std::string& RsmUeInfo::_internal_cell_global_id() const {
  return cell_global_id_.Get();
}
inline void RsmUeInfo::_internal_set_cell_global_id(const std::string& value) {
  
  cell_global_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RsmUeInfo::_internal_mutable_cell_global_id() {
  
  return cell_global_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RsmUeInfo::release_cell_global_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.RsmUeInfo.cell_global_id)
  return cell_global_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RsmUeInfo::set_allocated_cell_global_id(std::string* cell_global_id) {
  if (cell_global_id != nullptr) {
    
  } else {
    
  }
  cell_global_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cell_global_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (cell_global_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    cell_global_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.RsmUeInfo.cell_global_id)
}

// string cu_e2_node_id = 5;
inline void RsmUeInfo::clear_cu_e2_node_id() {
  cu_e2_node_id_.ClearToEmpty();
}
inline const std::string& RsmUeInfo::cu_e2_node_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RsmUeInfo.cu_e2_node_id)
  return _internal_cu_e2_node_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RsmUeInfo::set_cu_e2_node_id(ArgT0&& arg0, ArgT... args) {
 
 cu_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.RsmUeInfo.cu_e2_node_id)
}
inline std::string* RsmUeInfo::mutable_cu_e2_node_id() {
  std::string* _s = _internal_mutable_cu_e2_node_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.RsmUeInfo.cu_e2_node_id)
  return _s;
}
inline const std::string& RsmUeInfo::_internal_cu_e2_node_id() const {
  return cu_e2_node_id_.Get();
}
inline void RsmUeInfo::_internal_set_cu_e2_node_id(const std::string& value) {
  
  cu_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RsmUeInfo::_internal_mutable_cu_e2_node_id() {
  
  return cu_e2_node_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RsmUeInfo::release_cu_e2_node_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.RsmUeInfo.cu_e2_node_id)
  return cu_e2_node_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RsmUeInfo::set_allocated_cu_e2_node_id(std::string* cu_e2_node_id) {
  if (cu_e2_node_id != nullptr) {
    
  } else {
    
  }
  cu_e2_node_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cu_e2_node_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (cu_e2_node_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    cu_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.RsmUeInfo.cu_e2_node_id)
}

// string du_e2_node_id = 6;
inline void RsmUeInfo::clear_du_e2_node_id() {
  du_e2_node_id_.ClearToEmpty();
}
inline const std::string& RsmUeInfo::du_e2_node_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RsmUeInfo.du_e2_node_id)
  return _internal_du_e2_node_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RsmUeInfo::set_du_e2_node_id(ArgT0&& arg0, ArgT... args) {
 
 du_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.RsmUeInfo.du_e2_node_id)
}
inline std::string* RsmUeInfo::mutable_du_e2_node_id() {
  std::string* _s = _internal_mutable_du_e2_node_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.RsmUeInfo.du_e2_node_id)
  return _s;
}
inline const std::string& RsmUeInfo::_internal_du_e2_node_id() const {
  return du_e2_node_id_.Get();
}
inline void RsmUeInfo::_internal_set_du_e2_node_id(const std::string& value) {
  
  du_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RsmUeInfo::_internal_mutable_du_e2_node_id() {
  
  return du_e2_node_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RsmUeInfo::release_du_e2_node_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.RsmUeInfo.du_e2_node_id)
  return du_e2_node_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RsmUeInfo::set_allocated_du_e2_node_id(std::string* du_e2_node_id) {
  if (du_e2_node_id != nullptr) {
    
  } else {
    
  }
  du_e2_node_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), du_e2_node_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (du_e2_node_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    du_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.RsmUeInfo.du_e2_node_id)
}

// repeated .onos.uenib.SliceInfo slice_list = 7;
inline int RsmUeInfo::_internal_slice_list_size() const {
  return slice_list_.size();
}
inline int RsmUeInfo::slice_list_size() const {
  return _internal_slice_list_size();
}
inline void RsmUeInfo::clear_slice_list() {
  slice_list_.Clear();
}
inline ::onos::uenib::SliceInfo* RsmUeInfo::mutable_slice_list(int index) {
  // @@protoc_insertion_point(field_mutable:onos.uenib.RsmUeInfo.slice_list)
  return slice_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::SliceInfo >*
RsmUeInfo::mutable_slice_list() {
  // @@protoc_insertion_point(field_mutable_list:onos.uenib.RsmUeInfo.slice_list)
  return &slice_list_;
}
inline const ::onos::uenib::SliceInfo& RsmUeInfo::_internal_slice_list(int index) const {
  return slice_list_.Get(index);
}
inline const ::onos::uenib::SliceInfo& RsmUeInfo::slice_list(int index) const {
  // @@protoc_insertion_point(field_get:onos.uenib.RsmUeInfo.slice_list)
  return _internal_slice_list(index);
}
inline ::onos::uenib::SliceInfo* RsmUeInfo::_internal_add_slice_list() {
  return slice_list_.Add();
}
inline ::onos::uenib::SliceInfo* RsmUeInfo::add_slice_list() {
  ::onos::uenib::SliceInfo* _add = _internal_add_slice_list();
  // @@protoc_insertion_point(field_add:onos.uenib.RsmUeInfo.slice_list)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::onos::uenib::SliceInfo >&
RsmUeInfo::slice_list() const {
  // @@protoc_insertion_point(field_list:onos.uenib.RsmUeInfo.slice_list)
  return slice_list_;
}

// -------------------------------------------------------------------

// SliceInfo

// string du_e2_node_id = 1;
inline void SliceInfo::clear_du_e2_node_id() {
  du_e2_node_id_.ClearToEmpty();
}
inline const std::string& SliceInfo::du_e2_node_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.SliceInfo.du_e2_node_id)
  return _internal_du_e2_node_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SliceInfo::set_du_e2_node_id(ArgT0&& arg0, ArgT... args) {
 
 du_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.SliceInfo.du_e2_node_id)
}
inline std::string* SliceInfo::mutable_du_e2_node_id() {
  std::string* _s = _internal_mutable_du_e2_node_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.SliceInfo.du_e2_node_id)
  return _s;
}
inline const std::string& SliceInfo::_internal_du_e2_node_id() const {
  return du_e2_node_id_.Get();
}
inline void SliceInfo::_internal_set_du_e2_node_id(const std::string& value) {
  
  du_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* SliceInfo::_internal_mutable_du_e2_node_id() {
  
  return du_e2_node_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* SliceInfo::release_du_e2_node_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.SliceInfo.du_e2_node_id)
  return du_e2_node_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void SliceInfo::set_allocated_du_e2_node_id(std::string* du_e2_node_id) {
  if (du_e2_node_id != nullptr) {
    
  } else {
    
  }
  du_e2_node_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), du_e2_node_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (du_e2_node_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    du_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.SliceInfo.du_e2_node_id)
}

// string cu_e2_node_id = 2;
inline void SliceInfo::clear_cu_e2_node_id() {
  cu_e2_node_id_.ClearToEmpty();
}
inline const std::string& SliceInfo::cu_e2_node_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.SliceInfo.cu_e2_node_id)
  return _internal_cu_e2_node_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SliceInfo::set_cu_e2_node_id(ArgT0&& arg0, ArgT... args) {
 
 cu_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.SliceInfo.cu_e2_node_id)
}
inline std::string* SliceInfo::mutable_cu_e2_node_id() {
  std::string* _s = _internal_mutable_cu_e2_node_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.SliceInfo.cu_e2_node_id)
  return _s;
}
inline const std::string& SliceInfo::_internal_cu_e2_node_id() const {
  return cu_e2_node_id_.Get();
}
inline void SliceInfo::_internal_set_cu_e2_node_id(const std::string& value) {
  
  cu_e2_node_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* SliceInfo::_internal_mutable_cu_e2_node_id() {
  
  return cu_e2_node_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* SliceInfo::release_cu_e2_node_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.SliceInfo.cu_e2_node_id)
  return cu_e2_node_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void SliceInfo::set_allocated_cu_e2_node_id(std::string* cu_e2_node_id) {
  if (cu_e2_node_id != nullptr) {
    
  } else {
    
  }
  cu_e2_node_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cu_e2_node_id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (cu_e2_node_id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    cu_e2_node_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.SliceInfo.cu_e2_node_id)
}

// string id = 3 [(.gogoproto.customname) = "ID"];
inline void SliceInfo::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& SliceInfo::id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.SliceInfo.id)
  return _internal_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SliceInfo::set_id(ArgT0&& arg0, ArgT... args) {
 
 id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.SliceInfo.id)
}
inline std::string* SliceInfo::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.SliceInfo.id)
  return _s;
}
inline const std::string& SliceInfo::_internal_id() const {
  return id_.Get();
}
inline void SliceInfo::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* SliceInfo::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* SliceInfo::release_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.SliceInfo.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void SliceInfo::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (id_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.SliceInfo.id)
}

// string slice_desc = 4;
inline void SliceInfo::clear_slice_desc() {
  slice_desc_.ClearToEmpty();
}
inline const std::string& SliceInfo::slice_desc() const {
  // @@protoc_insertion_point(field_get:onos.uenib.SliceInfo.slice_desc)
  return _internal_slice_desc();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void SliceInfo::set_slice_desc(ArgT0&& arg0, ArgT... args) {
 
 slice_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:onos.uenib.SliceInfo.slice_desc)
}
inline std::string* SliceInfo::mutable_slice_desc() {
  std::string* _s = _internal_mutable_slice_desc();
  // @@protoc_insertion_point(field_mutable:onos.uenib.SliceInfo.slice_desc)
  return _s;
}
inline const std::string& SliceInfo::_internal_slice_desc() const {
  return slice_desc_.Get();
}
inline void SliceInfo::_internal_set_slice_desc(const std::string& value) {
  
  slice_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* SliceInfo::_internal_mutable_slice_desc() {
  
  return slice_desc_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* SliceInfo::release_slice_desc() {
  // @@protoc_insertion_point(field_release:onos.uenib.SliceInfo.slice_desc)
  return slice_desc_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void SliceInfo::set_allocated_slice_desc(std::string* slice_desc) {
  if (slice_desc != nullptr) {
    
  } else {
    
  }
  slice_desc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), slice_desc,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (slice_desc_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    slice_desc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.SliceInfo.slice_desc)
}

// .onos.uenib.RSMSliceParameters slice_parameters = 5;
inline bool SliceInfo::_internal_has_slice_parameters() const {
  return this != internal_default_instance() && slice_parameters_ != nullptr;
}
inline bool SliceInfo::has_slice_parameters() const {
  return _internal_has_slice_parameters();
}
inline void SliceInfo::clear_slice_parameters() {
  if (GetArenaForAllocation() == nullptr && slice_parameters_ != nullptr) {
    delete slice_parameters_;
  }
  slice_parameters_ = nullptr;
}
inline const ::onos::uenib::RSMSliceParameters& SliceInfo::_internal_slice_parameters() const {
  const ::onos::uenib::RSMSliceParameters* p = slice_parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::RSMSliceParameters&>(
      ::onos::uenib::_RSMSliceParameters_default_instance_);
}
inline const ::onos::uenib::RSMSliceParameters& SliceInfo::slice_parameters() const {
  // @@protoc_insertion_point(field_get:onos.uenib.SliceInfo.slice_parameters)
  return _internal_slice_parameters();
}
inline void SliceInfo::unsafe_arena_set_allocated_slice_parameters(
    ::onos::uenib::RSMSliceParameters* slice_parameters) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(slice_parameters_);
  }
  slice_parameters_ = slice_parameters;
  if (slice_parameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.SliceInfo.slice_parameters)
}
inline ::onos::uenib::RSMSliceParameters* SliceInfo::release_slice_parameters() {
  
  ::onos::uenib::RSMSliceParameters* temp = slice_parameters_;
  slice_parameters_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::RSMSliceParameters* SliceInfo::unsafe_arena_release_slice_parameters() {
  // @@protoc_insertion_point(field_release:onos.uenib.SliceInfo.slice_parameters)
  
  ::onos::uenib::RSMSliceParameters* temp = slice_parameters_;
  slice_parameters_ = nullptr;
  return temp;
}
inline ::onos::uenib::RSMSliceParameters* SliceInfo::_internal_mutable_slice_parameters() {
  
  if (slice_parameters_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::RSMSliceParameters>(GetArenaForAllocation());
    slice_parameters_ = p;
  }
  return slice_parameters_;
}
inline ::onos::uenib::RSMSliceParameters* SliceInfo::mutable_slice_parameters() {
  ::onos::uenib::RSMSliceParameters* _msg = _internal_mutable_slice_parameters();
  // @@protoc_insertion_point(field_mutable:onos.uenib.SliceInfo.slice_parameters)
  return _msg;
}
inline void SliceInfo::set_allocated_slice_parameters(::onos::uenib::RSMSliceParameters* slice_parameters) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete slice_parameters_;
  }
  if (slice_parameters) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::RSMSliceParameters>::GetOwningArena(slice_parameters);
    if (message_arena != submessage_arena) {
      slice_parameters = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slice_parameters, submessage_arena);
    }
    
  } else {
    
  }
  slice_parameters_ = slice_parameters;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.SliceInfo.slice_parameters)
}

// .onos.uenib.RSMSliceType slice_type = 6;
inline void SliceInfo::clear_slice_type() {
  slice_type_ = 0;
}
inline ::onos::uenib::RSMSliceType SliceInfo::_internal_slice_type() const {
  return static_cast< ::onos::uenib::RSMSliceType >(slice_type_);
}
inline ::onos::uenib::RSMSliceType SliceInfo::slice_type() const {
  // @@protoc_insertion_point(field_get:onos.uenib.SliceInfo.slice_type)
  return _internal_slice_type();
}
inline void SliceInfo::_internal_set_slice_type(::onos::uenib::RSMSliceType value) {
  
  slice_type_ = value;
}
inline void SliceInfo::set_slice_type(::onos::uenib::RSMSliceType value) {
  _internal_set_slice_type(value);
  // @@protoc_insertion_point(field_set:onos.uenib.SliceInfo.slice_type)
}

// .onos.uenib.DrbId drb_id = 7;
inline bool SliceInfo::_internal_has_drb_id() const {
  return this != internal_default_instance() && drb_id_ != nullptr;
}
inline bool SliceInfo::has_drb_id() const {
  return _internal_has_drb_id();
}
inline void SliceInfo::clear_drb_id() {
  if (GetArenaForAllocation() == nullptr && drb_id_ != nullptr) {
    delete drb_id_;
  }
  drb_id_ = nullptr;
}
inline const ::onos::uenib::DrbId& SliceInfo::_internal_drb_id() const {
  const ::onos::uenib::DrbId* p = drb_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::onos::uenib::DrbId&>(
      ::onos::uenib::_DrbId_default_instance_);
}
inline const ::onos::uenib::DrbId& SliceInfo::drb_id() const {
  // @@protoc_insertion_point(field_get:onos.uenib.SliceInfo.drb_id)
  return _internal_drb_id();
}
inline void SliceInfo::unsafe_arena_set_allocated_drb_id(
    ::onos::uenib::DrbId* drb_id) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(drb_id_);
  }
  drb_id_ = drb_id;
  if (drb_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:onos.uenib.SliceInfo.drb_id)
}
inline ::onos::uenib::DrbId* SliceInfo::release_drb_id() {
  
  ::onos::uenib::DrbId* temp = drb_id_;
  drb_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::onos::uenib::DrbId* SliceInfo::unsafe_arena_release_drb_id() {
  // @@protoc_insertion_point(field_release:onos.uenib.SliceInfo.drb_id)
  
  ::onos::uenib::DrbId* temp = drb_id_;
  drb_id_ = nullptr;
  return temp;
}
inline ::onos::uenib::DrbId* SliceInfo::_internal_mutable_drb_id() {
  
  if (drb_id_ == nullptr) {
    auto* p = CreateMaybeMessage<::onos::uenib::DrbId>(GetArenaForAllocation());
    drb_id_ = p;
  }
  return drb_id_;
}
inline ::onos::uenib::DrbId* SliceInfo::mutable_drb_id() {
  ::onos::uenib::DrbId* _msg = _internal_mutable_drb_id();
  // @@protoc_insertion_point(field_mutable:onos.uenib.SliceInfo.drb_id)
  return _msg;
}
inline void SliceInfo::set_allocated_drb_id(::onos::uenib::DrbId* drb_id) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete drb_id_;
  }
  if (drb_id) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::onos::uenib::DrbId>::GetOwningArena(drb_id);
    if (message_arena != submessage_arena) {
      drb_id = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, drb_id, submessage_arena);
    }
    
  } else {
    
  }
  drb_id_ = drb_id;
  // @@protoc_insertion_point(field_set_allocated:onos.uenib.SliceInfo.drb_id)
}

// -------------------------------------------------------------------

// RSMSliceParameters

// .onos.uenib.RSMSchedulerType scheduler_type = 1;
inline void RSMSliceParameters::clear_scheduler_type() {
  scheduler_type_ = 0;
}
inline ::onos::uenib::RSMSchedulerType RSMSliceParameters::_internal_scheduler_type() const {
  return static_cast< ::onos::uenib::RSMSchedulerType >(scheduler_type_);
}
inline ::onos::uenib::RSMSchedulerType RSMSliceParameters::scheduler_type() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RSMSliceParameters.scheduler_type)
  return _internal_scheduler_type();
}
inline void RSMSliceParameters::_internal_set_scheduler_type(::onos::uenib::RSMSchedulerType value) {
  
  scheduler_type_ = value;
}
inline void RSMSliceParameters::set_scheduler_type(::onos::uenib::RSMSchedulerType value) {
  _internal_set_scheduler_type(value);
  // @@protoc_insertion_point(field_set:onos.uenib.RSMSliceParameters.scheduler_type)
}

// int32 weight = 2;
inline void RSMSliceParameters::clear_weight() {
  weight_ = 0;
}
inline int32_t RSMSliceParameters::_internal_weight() const {
  return weight_;
}
inline int32_t RSMSliceParameters::weight() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RSMSliceParameters.weight)
  return _internal_weight();
}
inline void RSMSliceParameters::_internal_set_weight(int32_t value) {
  
  weight_ = value;
}
inline void RSMSliceParameters::set_weight(int32_t value) {
  _internal_set_weight(value);
  // @@protoc_insertion_point(field_set:onos.uenib.RSMSliceParameters.weight)
}

// int32 qos_level = 3;
inline void RSMSliceParameters::clear_qos_level() {
  qos_level_ = 0;
}
inline int32_t RSMSliceParameters::_internal_qos_level() const {
  return qos_level_;
}
inline int32_t RSMSliceParameters::qos_level() const {
  // @@protoc_insertion_point(field_get:onos.uenib.RSMSliceParameters.qos_level)
  return _internal_qos_level();
}
inline void RSMSliceParameters::_internal_set_qos_level(int32_t value) {
  
  qos_level_ = value;
}
inline void RSMSliceParameters::set_qos_level(int32_t value) {
  _internal_set_qos_level(value);
  // @@protoc_insertion_point(field_set:onos.uenib.RSMSliceParameters.qos_level)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace uenib
}  // namespace onos

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::onos::uenib::UeIdType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::onos::uenib::UeIdType>() {
  return ::onos::uenib::UeIdType_descriptor();
}
template <> struct is_proto_enum< ::onos::uenib::RSMSchedulerType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::onos::uenib::RSMSchedulerType>() {
  return ::onos::uenib::RSMSchedulerType_descriptor();
}
template <> struct is_proto_enum< ::onos::uenib::RSMSliceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::onos::uenib::RSMSliceType>() {
  return ::onos::uenib::RSMSliceType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_onos_2fuenib_2fran_2eproto
